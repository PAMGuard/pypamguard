window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"pypamguard": {"fullname": "pypamguard", "modulename": "pypamguard", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.base": {"fullname": "pypamguard.base", "modulename": "pypamguard.base", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.base.chunk": {"fullname": "pypamguard.base.chunk", "modulename": "pypamguard.base.chunk", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.base.chunk.BaseChunk": {"fullname": "pypamguard.base.chunk.BaseChunk", "modulename": "pypamguard.base.chunk", "qualname": "BaseChunk", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.core.serializable.Serializable, abc.ABC"}, "pypamguard.base.chunk.BaseChunk.__init__": {"fullname": "pypamguard.base.chunk.BaseChunk.__init__", "modulename": "pypamguard.base.chunk", "qualname": "BaseChunk.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.base.chunk.BaseChunk.process": {"fullname": "pypamguard.base.chunk.BaseChunk.process", "modulename": "pypamguard.base.chunk", "qualname": "BaseChunk.process", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">br</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">readers_new</span><span class=\"o\">.</span><span class=\"n\">BinaryReader</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.base.chunk.BaseChunk.get_attrs": {"fullname": "pypamguard.base.chunk.BaseChunk.get_attrs", "modulename": "pypamguard.base.chunk", "qualname": "BaseChunk.get_attrs", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.base.chunk.BaseChunk.signature": {"fullname": "pypamguard.base.chunk.BaseChunk.signature", "modulename": "pypamguard.base.chunk", "qualname": "BaseChunk.signature", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "pypamguard.core": {"fullname": "pypamguard.core", "modulename": "pypamguard.core", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.core.exceptions": {"fullname": "pypamguard.core.exceptions", "modulename": "pypamguard.core.exceptions", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.core.exceptions.BinaryFileException": {"fullname": "pypamguard.core.exceptions.BinaryFileException", "modulename": "pypamguard.core.exceptions", "qualname": "BinaryFileException", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "builtins.Exception"}, "pypamguard.core.exceptions.BinaryFileException.__init__": {"fullname": "pypamguard.core.exceptions.BinaryFileException.__init__", "modulename": "pypamguard.core.exceptions", "qualname": "BinaryFileException.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"n\">_io</span><span class=\"o\">.</span><span class=\"n\">BufferedReader</span></span>)</span>"}, "pypamguard.core.exceptions.BinaryFileException.position": {"fullname": "pypamguard.core.exceptions.BinaryFileException.position", "modulename": "pypamguard.core.exceptions", "qualname": "BinaryFileException.position", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.exceptions.WarningException": {"fullname": "pypamguard.core.exceptions.WarningException", "modulename": "pypamguard.core.exceptions", "qualname": "WarningException", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "BinaryFileException"}, "pypamguard.core.exceptions.WarningException.__init__": {"fullname": "pypamguard.core.exceptions.WarningException.__init__", "modulename": "pypamguard.core.exceptions", "qualname": "WarningException.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">file</span>,</span><span class=\"param\">\t<span class=\"n\">chunk_info</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genchunkinfo</span><span class=\"o\">.</span><span class=\"n\">GenericChunkInfo</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">chunk</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">chunk</span><span class=\"o\">.</span><span class=\"n\">BaseChunk</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "pypamguard.core.exceptions.WarningException.chunk_info": {"fullname": "pypamguard.core.exceptions.WarningException.chunk_info", "modulename": "pypamguard.core.exceptions", "qualname": "WarningException.chunk_info", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.exceptions.WarningException.chunk": {"fullname": "pypamguard.core.exceptions.WarningException.chunk", "modulename": "pypamguard.core.exceptions", "qualname": "WarningException.chunk", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.exceptions.ChunkLengthMismatch": {"fullname": "pypamguard.core.exceptions.ChunkLengthMismatch", "modulename": "pypamguard.core.exceptions", "qualname": "ChunkLengthMismatch", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "WarningException"}, "pypamguard.core.exceptions.ChunkLengthMismatch.__init__": {"fullname": "pypamguard.core.exceptions.ChunkLengthMismatch.__init__", "modulename": "pypamguard.core.exceptions", "qualname": "ChunkLengthMismatch.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file</span>, </span><span class=\"param\"><span class=\"n\">chunk_info</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">chunk</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "pypamguard.core.exceptions.CriticalException": {"fullname": "pypamguard.core.exceptions.CriticalException", "modulename": "pypamguard.core.exceptions", "qualname": "CriticalException", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "BinaryFileException"}, "pypamguard.core.exceptions.ModuleNotFoundException": {"fullname": "pypamguard.core.exceptions.ModuleNotFoundException", "modulename": "pypamguard.core.exceptions", "qualname": "ModuleNotFoundException", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "builtins.Exception"}, "pypamguard.core.exceptions.FileCorruptedException": {"fullname": "pypamguard.core.exceptions.FileCorruptedException", "modulename": "pypamguard.core.exceptions", "qualname": "FileCorruptedException", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "CriticalException"}, "pypamguard.core.exceptions.StructuralException": {"fullname": "pypamguard.core.exceptions.StructuralException", "modulename": "pypamguard.core.exceptions", "qualname": "StructuralException", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "FileCorruptedException"}, "pypamguard.core.exceptions.StructuralException.__init__": {"fullname": "pypamguard.core.exceptions.StructuralException.__init__", "modulename": "pypamguard.core.exceptions", "qualname": "StructuralException.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"n\">_io</span><span class=\"o\">.</span><span class=\"n\">BufferedReader</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "pypamguard.core.exceptions.StructuralException.message": {"fullname": "pypamguard.core.exceptions.StructuralException.message", "modulename": "pypamguard.core.exceptions", "qualname": "StructuralException.message", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.exceptions.NoFileHeaderException": {"fullname": "pypamguard.core.exceptions.NoFileHeaderException", "modulename": "pypamguard.core.exceptions", "qualname": "NoFileHeaderException", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "StructuralException"}, "pypamguard.core.exceptions.NoModuleHeaderException": {"fullname": "pypamguard.core.exceptions.NoModuleHeaderException", "modulename": "pypamguard.core.exceptions", "qualname": "NoModuleHeaderException", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "StructuralException"}, "pypamguard.core.exceptions.NoModuleFooterException": {"fullname": "pypamguard.core.exceptions.NoModuleFooterException", "modulename": "pypamguard.core.exceptions", "qualname": "NoModuleFooterException", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "StructuralException"}, "pypamguard.core.exceptions.NoFileFooterException": {"fullname": "pypamguard.core.exceptions.NoFileFooterException", "modulename": "pypamguard.core.exceptions", "qualname": "NoFileFooterException", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "StructuralException"}, "pypamguard.core.filters": {"fullname": "pypamguard.core.filters", "modulename": "pypamguard.core.filters", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.core.filters.FilterMismatchException": {"fullname": "pypamguard.core.filters.FilterMismatchException", "modulename": "pypamguard.core.filters", "qualname": "FilterMismatchException", "kind": "class", "doc": "<p>Raised when a filter is applied to a value and is not met. It is automatically\nthrown by the <code>Filters</code> class.</p>\n", "bases": "builtins.Exception"}, "pypamguard.core.filters.FILTER_POSITION": {"fullname": "pypamguard.core.filters.FILTER_POSITION", "modulename": "pypamguard.core.filters", "qualname": "FILTER_POSITION", "kind": "class", "doc": "<p></p>\n", "bases": "enum.Enum"}, "pypamguard.core.filters.FILTER_POSITION.SKIP": {"fullname": "pypamguard.core.filters.FILTER_POSITION.SKIP", "modulename": "pypamguard.core.filters", "qualname": "FILTER_POSITION.SKIP", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FILTER_POSITION.SKIP: 0&gt;"}, "pypamguard.core.filters.FILTER_POSITION.KEEP": {"fullname": "pypamguard.core.filters.FILTER_POSITION.KEEP", "modulename": "pypamguard.core.filters", "qualname": "FILTER_POSITION.KEEP", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FILTER_POSITION.KEEP: 1&gt;"}, "pypamguard.core.filters.FILTER_POSITION.STOP": {"fullname": "pypamguard.core.filters.FILTER_POSITION.STOP", "modulename": "pypamguard.core.filters", "qualname": "FILTER_POSITION.STOP", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FILTER_POSITION.STOP: 2&gt;"}, "pypamguard.core.filters.BaseFilter": {"fullname": "pypamguard.core.filters.BaseFilter", "modulename": "pypamguard.core.filters", "qualname": "BaseFilter", "kind": "class", "doc": "<p>Base class for all filters.</p>\n", "bases": "pypamguard.core.serializable.Serializable, abc.ABC"}, "pypamguard.core.filters.BaseFilter.check": {"fullname": "pypamguard.core.filters.BaseFilter.check", "modulename": "pypamguard.core.filters", "qualname": "BaseFilter.check", "kind": "function", "doc": "<p>Apply the filter to the value and return either <code>KEEP</code>, <code>SKIP</code> or <code>STOP</code>\nfrom the <code>FILTER_POSITION</code> enum.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">filters</span><span class=\"o\">.</span><span class=\"n\">FILTER_POSITION</span>:</span></span>", "funcdef": "def"}, "pypamguard.core.filters.BaseFilter.from_json": {"fullname": "pypamguard.core.filters.BaseFilter.from_json", "modulename": "pypamguard.core.filters", "qualname": "BaseFilter.from_json", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">json</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.filters.WhitelistFilter": {"fullname": "pypamguard.core.filters.WhitelistFilter", "modulename": "pypamguard.core.filters", "qualname": "WhitelistFilter", "kind": "class", "doc": "<p>A filter that checks if a value is in a set of whitelisted values.</p>\n", "bases": "BaseFilter"}, "pypamguard.core.filters.WhitelistFilter.__init__": {"fullname": "pypamguard.core.filters.WhitelistFilter.__init__", "modulename": "pypamguard.core.filters", "qualname": "WhitelistFilter.__init__", "kind": "function", "doc": "<p>Pass in an unordered list or a set of values to include in the whitelist.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">whitelist</span><span class=\"p\">:</span> <span class=\"nb\">set</span> <span class=\"o\">|</span> <span class=\"nb\">list</span></span>)</span>"}, "pypamguard.core.filters.WhitelistFilter.whitelist": {"fullname": "pypamguard.core.filters.WhitelistFilter.whitelist", "modulename": "pypamguard.core.filters", "qualname": "WhitelistFilter.whitelist", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.filters.WhitelistFilter.check": {"fullname": "pypamguard.core.filters.WhitelistFilter.check", "modulename": "pypamguard.core.filters", "qualname": "WhitelistFilter.check", "kind": "function", "doc": "<p>Apply the filter to the value and return either <code>KEEP</code>, <code>SKIP</code> or <code>STOP</code>\nfrom the <code>FILTER_POSITION</code> enum.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.filters.WhitelistFilter.from_json": {"fullname": "pypamguard.core.filters.WhitelistFilter.from_json", "modulename": "pypamguard.core.filters", "qualname": "WhitelistFilter.from_json", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">json</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.filters.RangeFilter": {"fullname": "pypamguard.core.filters.RangeFilter", "modulename": "pypamguard.core.filters", "qualname": "RangeFilter", "kind": "class", "doc": "<p>Base class for all filters.</p>\n", "bases": "BaseFilter"}, "pypamguard.core.filters.RangeFilter.__init__": {"fullname": "pypamguard.core.filters.RangeFilter.__init__", "modulename": "pypamguard.core.filters", "qualname": "RangeFilter.__init__", "kind": "function", "doc": "<p>Process a value and return KEEP either when the value is between the start and end values.\nReturn SKIP or STOP when the value is outside the range, depending on the ordered flag.</p>\n\n<p>@param start: The start value of the range.\n@param end: The end value of the range.\n@param comparator: A function that takes two values and returns a boolean (defaults to &lt;=).\n@param validation_func: A function that takes a value and returns a boolean (defaults to None).\n@param ordered: A boolean that indicates if the range is ordered (defaults to False). An ordered filter\n                will offer improved efficiency as once it gets outside of range it will throw a <code>STOP</code>.\n@param ignore_none: A boolean that indicates if None values should be ignored (defaults to False). If\n                set to True it will return <code>KEEP</code> if the value is None.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">start</span>,</span><span class=\"param\">\t<span class=\"n\">end</span>,</span><span class=\"param\">\t<span class=\"n\">comparator</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">validation_func</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ordered</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_none</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, "pypamguard.core.filters.RangeFilter.start": {"fullname": "pypamguard.core.filters.RangeFilter.start", "modulename": "pypamguard.core.filters", "qualname": "RangeFilter.start", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.filters.RangeFilter.end": {"fullname": "pypamguard.core.filters.RangeFilter.end", "modulename": "pypamguard.core.filters", "qualname": "RangeFilter.end", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.filters.RangeFilter.comparator": {"fullname": "pypamguard.core.filters.RangeFilter.comparator", "modulename": "pypamguard.core.filters", "qualname": "RangeFilter.comparator", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.filters.RangeFilter.validation_func": {"fullname": "pypamguard.core.filters.RangeFilter.validation_func", "modulename": "pypamguard.core.filters", "qualname": "RangeFilter.validation_func", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.filters.RangeFilter.ordered": {"fullname": "pypamguard.core.filters.RangeFilter.ordered", "modulename": "pypamguard.core.filters", "qualname": "RangeFilter.ordered", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.filters.RangeFilter.ignore_none": {"fullname": "pypamguard.core.filters.RangeFilter.ignore_none", "modulename": "pypamguard.core.filters", "qualname": "RangeFilter.ignore_none", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.filters.RangeFilter.default_comparator": {"fullname": "pypamguard.core.filters.RangeFilter.default_comparator", "modulename": "pypamguard.core.filters", "qualname": "RangeFilter.default_comparator", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">a</span>, </span><span class=\"param\"><span class=\"n\">b</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.filters.RangeFilter.check": {"fullname": "pypamguard.core.filters.RangeFilter.check", "modulename": "pypamguard.core.filters", "qualname": "RangeFilter.check", "kind": "function", "doc": "<p>Apply the filter to the value and return either <code>KEEP</code>, <code>SKIP</code> or <code>STOP</code>\nfrom the <code>FILTER_POSITION</code> enum.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.filters.RangeFilter.from_json": {"fullname": "pypamguard.core.filters.RangeFilter.from_json", "modulename": "pypamguard.core.filters", "qualname": "RangeFilter.from_json", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">json</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.filters.DateFilter": {"fullname": "pypamguard.core.filters.DateFilter", "modulename": "pypamguard.core.filters", "qualname": "DateFilter", "kind": "class", "doc": "<p>Base class for all filters.</p>\n", "bases": "RangeFilter"}, "pypamguard.core.filters.DateFilter.__init__": {"fullname": "pypamguard.core.filters.DateFilter.__init__", "modulename": "pypamguard.core.filters", "qualname": "DateFilter.__init__", "kind": "function", "doc": "<p>Process a datetime object and return KEEP either when the date\nis between the start and end date or when the date is None. Return\nSKIP when the date is before the start date and STOP when the date\nis after the end date.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">start_date</span>,</span><span class=\"param\">\t<span class=\"n\">end_date</span>,</span><span class=\"param\">\t<span class=\"n\">ordered</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_timezone</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_none</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, "pypamguard.core.filters.DateFilter.ignore_timezone": {"fullname": "pypamguard.core.filters.DateFilter.ignore_timezone", "modulename": "pypamguard.core.filters", "qualname": "DateFilter.ignore_timezone", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.filters.DateFilter.from_json": {"fullname": "pypamguard.core.filters.DateFilter.from_json", "modulename": "pypamguard.core.filters", "qualname": "DateFilter.from_json", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">json</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.filters.Filters": {"fullname": "pypamguard.core.filters.Filters", "modulename": "pypamguard.core.filters", "qualname": "Filters", "kind": "class", "doc": "<p></p>\n"}, "pypamguard.core.filters.Filters.__init__": {"fullname": "pypamguard.core.filters.Filters.__init__", "modulename": "pypamguard.core.filters", "qualname": "Filters.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filters</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">filters</span><span class=\"o\">.</span><span class=\"n\">BaseFilter</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"fullname": "pypamguard.core.filters.Filters.INSTALLED_FILTERS", "modulename": "pypamguard.core.filters", "qualname": "Filters.INSTALLED_FILTERS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;uidlist&#x27;: &lt;class &#x27;pypamguard.core.filters.WhitelistFilter&#x27;&gt;, &#x27;uidrange&#x27;: &lt;class &#x27;pypamguard.core.filters.RangeFilter&#x27;&gt;, &#x27;daterange&#x27;: &lt;class &#x27;pypamguard.core.filters.DateFilter&#x27;&gt;}"}, "pypamguard.core.filters.Filters.position": {"fullname": "pypamguard.core.filters.Filters.position", "modulename": "pypamguard.core.filters", "qualname": "Filters.position", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pypamguard.core.filters.FILTER_POSITION"}, "pypamguard.core.filters.Filters.add": {"fullname": "pypamguard.core.filters.Filters.add", "modulename": "pypamguard.core.filters", "qualname": "Filters.add", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.filters.Filters.to_json": {"fullname": "pypamguard.core.filters.Filters.to_json", "modulename": "pypamguard.core.filters", "qualname": "Filters.to_json", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.filters.Filters.filter": {"fullname": "pypamguard.core.filters.Filters.filter", "modulename": "pypamguard.core.filters", "qualname": "Filters.filter", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.pgbfile": {"fullname": "pypamguard.core.pgbfile", "modulename": "pypamguard.core.pgbfile", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.core.pgbfile.Report": {"fullname": "pypamguard.core.pgbfile.Report", "modulename": "pypamguard.core.pgbfile", "qualname": "Report", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.core.serializable.Serializable"}, "pypamguard.core.pgbfile.Report.warnings": {"fullname": "pypamguard.core.pgbfile.Report.warnings", "modulename": "pypamguard.core.pgbfile", "qualname": "Report.warnings", "kind": "variable", "doc": "<p></p>\n", "default_value": "[]"}, "pypamguard.core.pgbfile.Report.add_warning": {"fullname": "pypamguard.core.pgbfile.Report.add_warning", "modulename": "pypamguard.core.pgbfile", "qualname": "Report.add_warning", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">warning</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">exceptions</span><span class=\"o\">.</span><span class=\"n\">WarningException</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.pgbfile.report": {"fullname": "pypamguard.core.pgbfile.report", "modulename": "pypamguard.core.pgbfile", "qualname": "report", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;pypamguard.core.pgbfile.Report object&gt;"}, "pypamguard.core.pgbfile.mmap_file": {"fullname": "pypamguard.core.pgbfile.mmap_file", "modulename": "pypamguard.core.pgbfile", "qualname": "mmap_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">access</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.pgbfile.process_chunk1": {"fullname": "pypamguard.core.pgbfile.process_chunk1", "modulename": "pypamguard.core.pgbfile", "qualname": "process_chunk1", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">pos</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">chunk</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genfileheader</span><span class=\"o\">.</span><span class=\"n\">GenericFileHeader</span> <span class=\"o\">|</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genmoduleheader</span><span class=\"o\">.</span><span class=\"n\">GenericModuleHeader</span> <span class=\"o\">|</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genmodule</span><span class=\"o\">.</span><span class=\"n\">GenericModule</span> <span class=\"o\">|</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genmodulefooter</span><span class=\"o\">.</span><span class=\"n\">GenericModuleFooter</span> <span class=\"o\">|</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genfilefooter</span><span class=\"o\">.</span><span class=\"n\">GenericFileFooter</span>,</span><span class=\"param\">\t<span class=\"n\">chunk_info</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">standard</span><span class=\"o\">.</span><span class=\"n\">stdchunkinfo</span><span class=\"o\">.</span><span class=\"n\">StandardChunkInfo</span>,</span><span class=\"param\">\t<span class=\"n\">absorb_errors</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"fullname": "pypamguard.core.pgbfile.create_mmap_and_process_chunk", "modulename": "pypamguard.core.pgbfile", "qualname": "create_mmap_and_process_chunk", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chunk</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genfileheader</span><span class=\"o\">.</span><span class=\"n\">GenericFileHeader</span> <span class=\"o\">|</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genmoduleheader</span><span class=\"o\">.</span><span class=\"n\">GenericModuleHeader</span> <span class=\"o\">|</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genmodule</span><span class=\"o\">.</span><span class=\"n\">GenericModule</span> <span class=\"o\">|</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genmodulefooter</span><span class=\"o\">.</span><span class=\"n\">GenericModuleFooter</span> <span class=\"o\">|</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genfilefooter</span><span class=\"o\">.</span><span class=\"n\">GenericFileFooter</span>,</span><span class=\"param\">\t<span class=\"n\">chunk_info</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">standard</span><span class=\"o\">.</span><span class=\"n\">stdchunkinfo</span><span class=\"o\">.</span><span class=\"n\">StandardChunkInfo</span>,</span><span class=\"param\">\t<span class=\"n\">fileno</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">pos</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">aborb_errors</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.pgbfile.process_chunk": {"fullname": "pypamguard.core.pgbfile.process_chunk", "modulename": "pypamguard.core.pgbfile", "qualname": "process_chunk", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chunk</span>,</span><span class=\"param\">\t<span class=\"n\">chunk_info</span>,</span><span class=\"param\">\t<span class=\"n\">mm</span><span class=\"p\">:</span> <span class=\"n\">mmap</span><span class=\"o\">.</span><span class=\"n\">mmap</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">pos</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">absorb_errors</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.pgbfile.PGBFile": {"fullname": "pypamguard.core.pgbfile.PGBFile", "modulename": "pypamguard.core.pgbfile", "qualname": "PGBFile", "kind": "class", "doc": "<p>This class represents a PAMGuard Binary File</p>\n", "bases": "pypamguard.core.serializable.Serializable"}, "pypamguard.core.pgbfile.PGBFile.__init__": {"fullname": "pypamguard.core.pgbfile.PGBFile.__init__", "modulename": "pypamguard.core.pgbfile", "qualname": "PGBFile.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filename</strong>:  The name of the file</li>\n<li><strong>fp</strong>:  The file pointer</li>\n<li><strong>order</strong>:  Override byte order of the file (optional)</li>\n<li><strong>module_registry</strong>:  Override the module registry (optional)</li>\n<li><strong>filters</strong>:  The filters (optional)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">fp</span><span class=\"p\">:</span> <span class=\"n\">_io</span><span class=\"o\">.</span><span class=\"n\">BufferedReader</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">BYTE_ORDERS</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">BYTE_ORDERS</span><span class=\"o\">.</span><span class=\"n\">BIG_ENDIAN</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&gt;&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">module_registry</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">registry</span><span class=\"o\">.</span><span class=\"n\">ModuleRegistry</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">registry</span><span class=\"o\">.</span><span class=\"n\">ModuleRegistry</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">filters</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">filters</span><span class=\"o\">.</span><span class=\"n\">Filters</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">filters</span><span class=\"o\">.</span><span class=\"n\">Filters</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, "pypamguard.core.pgbfile.PGBFile.total_time": {"fullname": "pypamguard.core.pgbfile.PGBFile.total_time", "modulename": "pypamguard.core.pgbfile", "qualname": "PGBFile.total_time", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.core.pgbfile.PGBFile.size": {"fullname": "pypamguard.core.pgbfile.PGBFile.size", "modulename": "pypamguard.core.pgbfile", "qualname": "PGBFile.size", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.pgbfile.PGBFile.file_header": {"fullname": "pypamguard.core.pgbfile.PGBFile.file_header", "modulename": "pypamguard.core.pgbfile", "qualname": "PGBFile.file_header", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.pgbfile.PGBFile.module_header": {"fullname": "pypamguard.core.pgbfile.PGBFile.module_header", "modulename": "pypamguard.core.pgbfile", "qualname": "PGBFile.module_header", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.pgbfile.PGBFile.module_footer": {"fullname": "pypamguard.core.pgbfile.PGBFile.module_footer", "modulename": "pypamguard.core.pgbfile", "qualname": "PGBFile.module_footer", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.pgbfile.PGBFile.file_footer": {"fullname": "pypamguard.core.pgbfile.PGBFile.file_footer", "modulename": "pypamguard.core.pgbfile", "qualname": "PGBFile.file_footer", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.pgbfile.PGBFile.filters": {"fullname": "pypamguard.core.pgbfile.PGBFile.filters", "modulename": "pypamguard.core.pgbfile", "qualname": "PGBFile.filters", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.pgbfile.PGBFile.module_class": {"fullname": "pypamguard.core.pgbfile.PGBFile.module_class", "modulename": "pypamguard.core.pgbfile", "qualname": "PGBFile.module_class", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.pgbfile.PGBFile.order": {"fullname": "pypamguard.core.pgbfile.PGBFile.order", "modulename": "pypamguard.core.pgbfile", "qualname": "PGBFile.order", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.pgbfile.PGBFile.path": {"fullname": "pypamguard.core.pgbfile.PGBFile.path", "modulename": "pypamguard.core.pgbfile", "qualname": "PGBFile.path", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.pgbfile.PGBFile.module_registry": {"fullname": "pypamguard.core.pgbfile.PGBFile.module_registry", "modulename": "pypamguard.core.pgbfile", "qualname": "PGBFile.module_registry", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.pgbfile.PGBFile.data": {"fullname": "pypamguard.core.pgbfile.PGBFile.data", "modulename": "pypamguard.core.pgbfile", "qualname": "PGBFile.data", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.pgbfile.PGBFile.load": {"fullname": "pypamguard.core.pgbfile.PGBFile.load", "modulename": "pypamguard.core.pgbfile", "qualname": "PGBFile.load", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.pgbfile.PGBFile.to_json": {"fullname": "pypamguard.core.pgbfile.PGBFile.to_json", "modulename": "pypamguard.core.pgbfile", "qualname": "PGBFile.to_json", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.readers": {"fullname": "pypamguard.core.readers", "modulename": "pypamguard.core.readers", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.core.readers.TypeFormat": {"fullname": "pypamguard.core.readers.TypeFormat", "modulename": "pypamguard.core.readers", "qualname": "TypeFormat", "kind": "class", "doc": "<p></p>\n"}, "pypamguard.core.readers.TypeFormat.__init__": {"fullname": "pypamguard.core.readers.TypeFormat.__init__", "modulename": "pypamguard.core.readers", "qualname": "TypeFormat.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">formatter</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, "pypamguard.core.readers.TypeFormat.formatter": {"fullname": "pypamguard.core.readers.TypeFormat.formatter", "modulename": "pypamguard.core.readers", "qualname": "TypeFormat.formatter", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.readers.TypeFormat.size": {"fullname": "pypamguard.core.readers.TypeFormat.size", "modulename": "pypamguard.core.readers", "qualname": "TypeFormat.size", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.readers.DTYPES": {"fullname": "pypamguard.core.readers.DTYPES", "modulename": "pypamguard.core.readers", "qualname": "DTYPES", "kind": "class", "doc": "<p></p>\n", "bases": "enum.Enum"}, "pypamguard.core.readers.DTYPES.CHAR": {"fullname": "pypamguard.core.readers.DTYPES.CHAR", "modulename": "pypamguard.core.readers", "qualname": "DTYPES.CHAR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DTYPES.CHAR: &lt;pypamguard.core.readers.TypeFormat object&gt;&gt;"}, "pypamguard.core.readers.DTYPES.UCHAR": {"fullname": "pypamguard.core.readers.DTYPES.UCHAR", "modulename": "pypamguard.core.readers", "qualname": "DTYPES.UCHAR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DTYPES.UCHAR: &lt;pypamguard.core.readers.TypeFormat object&gt;&gt;"}, "pypamguard.core.readers.DTYPES.SHORT": {"fullname": "pypamguard.core.readers.DTYPES.SHORT", "modulename": "pypamguard.core.readers", "qualname": "DTYPES.SHORT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DTYPES.SHORT: &lt;pypamguard.core.readers.TypeFormat object&gt;&gt;"}, "pypamguard.core.readers.DTYPES.USHORT": {"fullname": "pypamguard.core.readers.DTYPES.USHORT", "modulename": "pypamguard.core.readers", "qualname": "DTYPES.USHORT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DTYPES.USHORT: &lt;pypamguard.core.readers.TypeFormat object&gt;&gt;"}, "pypamguard.core.readers.DTYPES.INT": {"fullname": "pypamguard.core.readers.DTYPES.INT", "modulename": "pypamguard.core.readers", "qualname": "DTYPES.INT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DTYPES.INT: &lt;pypamguard.core.readers.TypeFormat object&gt;&gt;"}, "pypamguard.core.readers.DTYPES.UINT": {"fullname": "pypamguard.core.readers.DTYPES.UINT", "modulename": "pypamguard.core.readers", "qualname": "DTYPES.UINT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DTYPES.UINT: &lt;pypamguard.core.readers.TypeFormat object&gt;&gt;"}, "pypamguard.core.readers.DTYPES.LONG": {"fullname": "pypamguard.core.readers.DTYPES.LONG", "modulename": "pypamguard.core.readers", "qualname": "DTYPES.LONG", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DTYPES.LONG: &lt;pypamguard.core.readers.TypeFormat object&gt;&gt;"}, "pypamguard.core.readers.DTYPES.ULONG": {"fullname": "pypamguard.core.readers.DTYPES.ULONG", "modulename": "pypamguard.core.readers", "qualname": "DTYPES.ULONG", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DTYPES.ULONG: &lt;pypamguard.core.readers.TypeFormat object&gt;&gt;"}, "pypamguard.core.readers.DTYPES.FLOAT": {"fullname": "pypamguard.core.readers.DTYPES.FLOAT", "modulename": "pypamguard.core.readers", "qualname": "DTYPES.FLOAT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DTYPES.FLOAT: &lt;pypamguard.core.readers.TypeFormat object&gt;&gt;"}, "pypamguard.core.readers.DTYPES.DOUBLE": {"fullname": "pypamguard.core.readers.DTYPES.DOUBLE", "modulename": "pypamguard.core.readers", "qualname": "DTYPES.DOUBLE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DTYPES.DOUBLE: &lt;pypamguard.core.readers.TypeFormat object&gt;&gt;"}, "pypamguard.core.readers.INTS": {"fullname": "pypamguard.core.readers.INTS", "modulename": "pypamguard.core.readers", "qualname": "INTS", "kind": "class", "doc": "<p></p>\n", "bases": "enum.Enum"}, "pypamguard.core.readers.INTS.CHAR": {"fullname": "pypamguard.core.readers.INTS.CHAR", "modulename": "pypamguard.core.readers", "qualname": "INTS.CHAR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;INTS.CHAR: &lt;pypamguard.core.readers.TypeFormat object&gt;&gt;"}, "pypamguard.core.readers.INTS.UCHAR": {"fullname": "pypamguard.core.readers.INTS.UCHAR", "modulename": "pypamguard.core.readers", "qualname": "INTS.UCHAR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;INTS.UCHAR: &lt;pypamguard.core.readers.TypeFormat object&gt;&gt;"}, "pypamguard.core.readers.INTS.SHORT": {"fullname": "pypamguard.core.readers.INTS.SHORT", "modulename": "pypamguard.core.readers", "qualname": "INTS.SHORT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;INTS.SHORT: &lt;pypamguard.core.readers.TypeFormat object&gt;&gt;"}, "pypamguard.core.readers.INTS.USHORT": {"fullname": "pypamguard.core.readers.INTS.USHORT", "modulename": "pypamguard.core.readers", "qualname": "INTS.USHORT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;INTS.USHORT: &lt;pypamguard.core.readers.TypeFormat object&gt;&gt;"}, "pypamguard.core.readers.INTS.INT": {"fullname": "pypamguard.core.readers.INTS.INT", "modulename": "pypamguard.core.readers", "qualname": "INTS.INT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;INTS.INT: &lt;pypamguard.core.readers.TypeFormat object&gt;&gt;"}, "pypamguard.core.readers.INTS.UINT": {"fullname": "pypamguard.core.readers.INTS.UINT", "modulename": "pypamguard.core.readers", "qualname": "INTS.UINT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;INTS.UINT: &lt;pypamguard.core.readers.TypeFormat object&gt;&gt;"}, "pypamguard.core.readers.INTS.LONG": {"fullname": "pypamguard.core.readers.INTS.LONG", "modulename": "pypamguard.core.readers", "qualname": "INTS.LONG", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;INTS.LONG: &lt;pypamguard.core.readers.TypeFormat object&gt;&gt;"}, "pypamguard.core.readers.INTS.ULONG": {"fullname": "pypamguard.core.readers.INTS.ULONG", "modulename": "pypamguard.core.readers", "qualname": "INTS.ULONG", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;INTS.ULONG: &lt;pypamguard.core.readers.TypeFormat object&gt;&gt;"}, "pypamguard.core.readers.FLOATS": {"fullname": "pypamguard.core.readers.FLOATS", "modulename": "pypamguard.core.readers", "qualname": "FLOATS", "kind": "class", "doc": "<p></p>\n", "bases": "enum.Enum"}, "pypamguard.core.readers.FLOATS.FLOAT": {"fullname": "pypamguard.core.readers.FLOATS.FLOAT", "modulename": "pypamguard.core.readers", "qualname": "FLOATS.FLOAT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FLOATS.FLOAT: &lt;pypamguard.core.readers.TypeFormat object&gt;&gt;"}, "pypamguard.core.readers.FLOATS.DOUBLE": {"fullname": "pypamguard.core.readers.FLOATS.DOUBLE", "modulename": "pypamguard.core.readers", "qualname": "FLOATS.DOUBLE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FLOATS.DOUBLE: &lt;pypamguard.core.readers.TypeFormat object&gt;&gt;"}, "pypamguard.core.readers.BinaryReader": {"fullname": "pypamguard.core.readers.BinaryReader", "modulename": "pypamguard.core.readers", "qualname": "BinaryReader", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "abc.ABC"}, "pypamguard.core.readers.BinaryReader.__init__": {"fullname": "pypamguard.core.readers.BinaryReader.__init__", "modulename": "pypamguard.core.readers", "qualname": "BinaryReader.__init__", "kind": "function", "doc": "<p>A class that represents a field in a PAMGuard Binary File. This class is used\nto define a data type (during construction) and then read the data from a binary\nfile (using the <code>process()</code> method).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">as_helper</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">var_name</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "pypamguard.core.readers.BinaryReader.as_helper": {"fullname": "pypamguard.core.readers.BinaryReader.as_helper", "modulename": "pypamguard.core.readers", "qualname": "BinaryReader.as_helper", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.readers.BinaryReader.var_name": {"fullname": "pypamguard.core.readers.BinaryReader.var_name", "modulename": "pypamguard.core.readers", "qualname": "BinaryReader.var_name", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.readers.BinaryReader.process": {"fullname": "pypamguard.core.readers.BinaryReader.process", "modulename": "pypamguard.core.readers", "qualname": "BinaryReader.process", "kind": "function", "doc": "<p>Reads data from a binary file (as configured in the constructor).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">_io</span><span class=\"o\">.</span><span class=\"n\">BufferedReader</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">BYTE_ORDERS</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">BYTE_ORDERS</span><span class=\"o\">.</span><span class=\"n\">BIG_ENDIAN</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&gt;&#39;</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.readers.BinaryReader.print": {"fullname": "pypamguard.core.readers.BinaryReader.print", "modulename": "pypamguard.core.readers", "qualname": "BinaryReader.print", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">result</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.readers.NumericalBinaryReader": {"fullname": "pypamguard.core.readers.NumericalBinaryReader", "modulename": "pypamguard.core.readers", "qualname": "NumericalBinaryReader", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "BinaryReader"}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"fullname": "pypamguard.core.readers.NumericalBinaryReader.__init__", "modulename": "pypamguard.core.readers", "qualname": "NumericalBinaryReader.__init__", "kind": "function", "doc": "<p>A reader class for numerical data types in a PAMGuard Binary File. The constructure will configure the reader\nto read data of a specific format and optionally apply a post processor.</p>\n\n<p>@param format: The format of the data to read (see constants.INTS and constants.FLOATS).\n@param post_processor: A function that will be applied to the data read from the file (must be callable).\n@param shape: The shape of the data to be read. For example <code>shape=(5)</code> means that 5 values will be read and returned\n            as a 1D numpy array. <code>shape=(2,40)</code> means that 2 rows, with 40 elements  each will be read and returned as\n            a 2D numpy array (an entire row is read from the binary file before starting on the next one). If shape is\n            left as <code>None</code> then a single primitive (<code>int</code> or <code>float</code>) will be returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">format</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">readers</span><span class=\"o\">.</span><span class=\"n\">INTS</span> <span class=\"o\">|</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">readers</span><span class=\"o\">.</span><span class=\"n\">FLOATS</span>,</span><span class=\"param\">\t<span class=\"n\">shape</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">post_processor</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"nb\">callable</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">as_helper</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">var_name</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "pypamguard.core.readers.NumericalBinaryReader.shape": {"fullname": "pypamguard.core.readers.NumericalBinaryReader.shape", "modulename": "pypamguard.core.readers", "qualname": "NumericalBinaryReader.shape", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.readers.NumericalBinaryReader.format": {"fullname": "pypamguard.core.readers.NumericalBinaryReader.format", "modulename": "pypamguard.core.readers", "qualname": "NumericalBinaryReader.format", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.readers.NumericalBinaryReader.post_processor": {"fullname": "pypamguard.core.readers.NumericalBinaryReader.post_processor", "modulename": "pypamguard.core.readers", "qualname": "NumericalBinaryReader.post_processor", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.readers.NumericalBinaryReader.process": {"fullname": "pypamguard.core.readers.NumericalBinaryReader.process", "modulename": "pypamguard.core.readers", "qualname": "NumericalBinaryReader.process", "kind": "function", "doc": "<p>Reads data from a binary file (as configured in the constructor).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">data</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">BYTE_ORDERS</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">BYTE_ORDERS</span><span class=\"o\">.</span><span class=\"n\">BIG_ENDIAN</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&gt;&#39;</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "pypamguard.core.readers.StringNBinaryReader": {"fullname": "pypamguard.core.readers.StringNBinaryReader", "modulename": "pypamguard.core.readers", "qualname": "StringNBinaryReader", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "BinaryReader"}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"fullname": "pypamguard.core.readers.StringNBinaryReader.__init__", "modulename": "pypamguard.core.readers", "qualname": "StringNBinaryReader.__init__", "kind": "function", "doc": "<p>A class that represents a string field in a PAM file.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">length</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">post_processor</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"nb\">callable</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">as_helper</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">var_name</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "pypamguard.core.readers.StringNBinaryReader.length": {"fullname": "pypamguard.core.readers.StringNBinaryReader.length", "modulename": "pypamguard.core.readers", "qualname": "StringNBinaryReader.length", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.readers.StringNBinaryReader.post_processor": {"fullname": "pypamguard.core.readers.StringNBinaryReader.post_processor", "modulename": "pypamguard.core.readers", "qualname": "StringNBinaryReader.post_processor", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.readers.StringNBinaryReader.process": {"fullname": "pypamguard.core.readers.StringNBinaryReader.process", "modulename": "pypamguard.core.readers", "qualname": "StringNBinaryReader.process", "kind": "function", "doc": "<p>Reads data from a binary file (as configured in the constructor).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">data</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">BYTE_ORDERS</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">BYTE_ORDERS</span><span class=\"o\">.</span><span class=\"n\">BIG_ENDIAN</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&gt;&#39;</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.readers.StringBinaryReader": {"fullname": "pypamguard.core.readers.StringBinaryReader", "modulename": "pypamguard.core.readers", "qualname": "StringBinaryReader", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "BinaryReader"}, "pypamguard.core.readers.StringBinaryReader.__init__": {"fullname": "pypamguard.core.readers.StringBinaryReader.__init__", "modulename": "pypamguard.core.readers", "qualname": "StringBinaryReader.__init__", "kind": "function", "doc": "<p>A class that represents a string field in a PAM file,\nwhere the length of the string is preceeded by a 16 bit integer.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">as_helper</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">var_name</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "pypamguard.core.readers.StringBinaryReader.length_type": {"fullname": "pypamguard.core.readers.StringBinaryReader.length_type", "modulename": "pypamguard.core.readers", "qualname": "StringBinaryReader.length_type", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.readers.StringBinaryReader.process": {"fullname": "pypamguard.core.readers.StringBinaryReader.process", "modulename": "pypamguard.core.readers", "qualname": "StringBinaryReader.process", "kind": "function", "doc": "<p>Reads data from a binary file (as configured in the constructor).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">data</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">BYTE_ORDERS</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">BYTE_ORDERS</span><span class=\"o\">.</span><span class=\"n\">BIG_ENDIAN</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&gt;&#39;</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.readers.CustomBinaryReader": {"fullname": "pypamguard.core.readers.CustomBinaryReader", "modulename": "pypamguard.core.readers", "qualname": "CustomBinaryReader", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "BinaryReader"}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"fullname": "pypamguard.core.readers.CustomBinaryReader.__init__", "modulename": "pypamguard.core.readers", "qualname": "CustomBinaryReader.__init__", "kind": "function", "doc": "<p>A class that represents a field in a PAMGuard Binary File. This class is used\nto define a data type (during construction) and then read the data from a binary\nfile (using the <code>process()</code> method).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">function</span>, </span><span class=\"param\"><span class=\"n\">count</span>, </span><span class=\"param\"><span class=\"n\">var_name</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "pypamguard.core.readers.CustomBinaryReader.function": {"fullname": "pypamguard.core.readers.CustomBinaryReader.function", "modulename": "pypamguard.core.readers", "qualname": "CustomBinaryReader.function", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.readers.CustomBinaryReader.count": {"fullname": "pypamguard.core.readers.CustomBinaryReader.count", "modulename": "pypamguard.core.readers", "qualname": "CustomBinaryReader.count", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.readers.CustomBinaryReader.process": {"fullname": "pypamguard.core.readers.CustomBinaryReader.process", "modulename": "pypamguard.core.readers", "qualname": "CustomBinaryReader.process", "kind": "function", "doc": "<p>Reads data from a binary file (as configured in the constructor).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">order</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.readers.DateBinaryReader": {"fullname": "pypamguard.core.readers.DateBinaryReader", "modulename": "pypamguard.core.readers", "qualname": "DateBinaryReader", "kind": "class", "doc": "<p>Date in millis</p>\n", "bases": "BinaryReader"}, "pypamguard.core.readers.DateBinaryReader.__init__": {"fullname": "pypamguard.core.readers.DateBinaryReader.__init__", "modulename": "pypamguard.core.readers", "qualname": "DateBinaryReader.__init__", "kind": "function", "doc": "<p>A class that represents a field in a PAMGuard Binary File. This class is used\nto define a data type (during construction) and then read the data from a binary\nfile (using the <code>process()</code> method).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">as_helper</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">var_name</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "pypamguard.core.readers.DateBinaryReader.process": {"fullname": "pypamguard.core.readers.DateBinaryReader.process", "modulename": "pypamguard.core.readers", "qualname": "DateBinaryReader.process", "kind": "function", "doc": "<p>Reads data from a binary file (as configured in the constructor).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.readers.BitmapBinaryReader": {"fullname": "pypamguard.core.readers.BitmapBinaryReader", "modulename": "pypamguard.core.readers", "qualname": "BitmapBinaryReader", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "BinaryReader"}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"fullname": "pypamguard.core.readers.BitmapBinaryReader.__init__", "modulename": "pypamguard.core.readers", "qualname": "BitmapBinaryReader.__init__", "kind": "function", "doc": "<p>A class that represents a field in a PAMGuard Binary File. This class is used\nto define a data type (during construction) and then read the data from a binary\nfile (using the <code>process()</code> method).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">format</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">readers</span><span class=\"o\">.</span><span class=\"n\">INTS</span>,</span><span class=\"param\">\t<span class=\"n\">labels</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">as_helper</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">var_name</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "pypamguard.core.readers.BitmapBinaryReader.format": {"fullname": "pypamguard.core.readers.BitmapBinaryReader.format", "modulename": "pypamguard.core.readers", "qualname": "BitmapBinaryReader.format", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.readers.BitmapBinaryReader.labels": {"fullname": "pypamguard.core.readers.BitmapBinaryReader.labels", "modulename": "pypamguard.core.readers", "qualname": "BitmapBinaryReader.labels", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.readers.BitmapBinaryReader.bm": {"fullname": "pypamguard.core.readers.BitmapBinaryReader.bm", "modulename": "pypamguard.core.readers", "qualname": "BitmapBinaryReader.bm", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.readers.BitmapBinaryReader.process": {"fullname": "pypamguard.core.readers.BitmapBinaryReader.process", "modulename": "pypamguard.core.readers", "qualname": "BitmapBinaryReader.process", "kind": "function", "doc": "<p>Reads data from a binary file (as configured in the constructor).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.readers_new": {"fullname": "pypamguard.core.readers_new", "modulename": "pypamguard.core.readers_new", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.core.readers_new.DTYPES": {"fullname": "pypamguard.core.readers_new.DTYPES", "modulename": "pypamguard.core.readers_new", "qualname": "DTYPES", "kind": "class", "doc": "<p></p>\n", "bases": "enum.Enum"}, "pypamguard.core.readers_new.DTYPES.INT8": {"fullname": "pypamguard.core.readers_new.DTYPES.INT8", "modulename": "pypamguard.core.readers_new", "qualname": "DTYPES.INT8", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DTYPES.INT8: dtype(&#x27;int8&#x27;)&gt;"}, "pypamguard.core.readers_new.DTYPES.UINT8": {"fullname": "pypamguard.core.readers_new.DTYPES.UINT8", "modulename": "pypamguard.core.readers_new", "qualname": "DTYPES.UINT8", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DTYPES.UINT8: dtype(&#x27;uint8&#x27;)&gt;"}, "pypamguard.core.readers_new.DTYPES.INT16": {"fullname": "pypamguard.core.readers_new.DTYPES.INT16", "modulename": "pypamguard.core.readers_new", "qualname": "DTYPES.INT16", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DTYPES.INT16: dtype(&#x27;int16&#x27;)&gt;"}, "pypamguard.core.readers_new.DTYPES.UINT16": {"fullname": "pypamguard.core.readers_new.DTYPES.UINT16", "modulename": "pypamguard.core.readers_new", "qualname": "DTYPES.UINT16", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DTYPES.UINT16: dtype(&#x27;uint16&#x27;)&gt;"}, "pypamguard.core.readers_new.DTYPES.INT32": {"fullname": "pypamguard.core.readers_new.DTYPES.INT32", "modulename": "pypamguard.core.readers_new", "qualname": "DTYPES.INT32", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DTYPES.INT32: dtype(&#x27;int32&#x27;)&gt;"}, "pypamguard.core.readers_new.DTYPES.UINT32": {"fullname": "pypamguard.core.readers_new.DTYPES.UINT32", "modulename": "pypamguard.core.readers_new", "qualname": "DTYPES.UINT32", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DTYPES.UINT32: dtype(&#x27;uint32&#x27;)&gt;"}, "pypamguard.core.readers_new.DTYPES.INT64": {"fullname": "pypamguard.core.readers_new.DTYPES.INT64", "modulename": "pypamguard.core.readers_new", "qualname": "DTYPES.INT64", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DTYPES.INT64: dtype(&#x27;int64&#x27;)&gt;"}, "pypamguard.core.readers_new.DTYPES.UINT64": {"fullname": "pypamguard.core.readers_new.DTYPES.UINT64", "modulename": "pypamguard.core.readers_new", "qualname": "DTYPES.UINT64", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DTYPES.UINT64: dtype(&#x27;uint64&#x27;)&gt;"}, "pypamguard.core.readers_new.DTYPES.FLOAT32": {"fullname": "pypamguard.core.readers_new.DTYPES.FLOAT32", "modulename": "pypamguard.core.readers_new", "qualname": "DTYPES.FLOAT32", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DTYPES.FLOAT32: dtype(&#x27;float32&#x27;)&gt;"}, "pypamguard.core.readers_new.DTYPES.FLOAT64": {"fullname": "pypamguard.core.readers_new.DTYPES.FLOAT64", "modulename": "pypamguard.core.readers_new", "qualname": "DTYPES.FLOAT64", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DTYPES.FLOAT64: dtype(&#x27;float64&#x27;)&gt;"}, "pypamguard.core.readers_new.Shape": {"fullname": "pypamguard.core.readers_new.Shape", "modulename": "pypamguard.core.readers_new", "qualname": "Shape", "kind": "class", "doc": "<p></p>\n"}, "pypamguard.core.readers_new.Shape.__init__": {"fullname": "pypamguard.core.readers_new.Shape.__init__", "modulename": "pypamguard.core.readers_new", "qualname": "Shape.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">shape</span>, </span><span class=\"param\"><span class=\"n\">length</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, "pypamguard.core.readers_new.Shape.shape": {"fullname": "pypamguard.core.readers_new.Shape.shape", "modulename": "pypamguard.core.readers_new", "qualname": "Shape.shape", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.readers_new.Shape.length": {"fullname": "pypamguard.core.readers_new.Shape.length", "modulename": "pypamguard.core.readers_new", "qualname": "Shape.length", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.readers_new.BinaryReader": {"fullname": "pypamguard.core.readers_new.BinaryReader", "modulename": "pypamguard.core.readers_new", "qualname": "BinaryReader", "kind": "class", "doc": "<p></p>\n"}, "pypamguard.core.readers_new.BinaryReader.__init__": {"fullname": "pypamguard.core.readers_new.BinaryReader.__init__", "modulename": "pypamguard.core.readers_new", "qualname": "BinaryReader.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fp</span><span class=\"p\">:</span> <span class=\"n\">mmap</span><span class=\"o\">.</span><span class=\"n\">mmap</span>, </span><span class=\"param\"><span class=\"n\">endianess</span><span class=\"o\">=</span><span class=\"s1\">&#39;&gt;&#39;</span></span>)</span>"}, "pypamguard.core.readers_new.BinaryReader.fp": {"fullname": "pypamguard.core.readers_new.BinaryReader.fp", "modulename": "pypamguard.core.readers_new", "qualname": "BinaryReader.fp", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.readers_new.BinaryReader.set_endianess": {"fullname": "pypamguard.core.readers_new.BinaryReader.set_endianess", "modulename": "pypamguard.core.readers_new", "qualname": "BinaryReader.set_endianess", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">endianess</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.readers_new.BinaryReader.tell": {"fullname": "pypamguard.core.readers_new.BinaryReader.tell", "modulename": "pypamguard.core.readers_new", "qualname": "BinaryReader.tell", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"fullname": "pypamguard.core.readers_new.BinaryReader.bin_read", "modulename": "pypamguard.core.readers_new", "qualname": "BinaryReader.bin_read", "kind": "function", "doc": "<p>Read data from the file. This function is polymorphic in the sense that it\ncan be used for any of the following purposes:</p>\n\n<ol>\n<li>Read in a single value of a given datatype (for example <code>read_numeric(DTYPES.INT32)</code>).</li>\n<li>Read in an array of values of a given datatype (for example <code>read_numeric(DTYPES.INT32, (5,))</code>).</li>\n<li>Read in an n-dimensional array of values of a given datatype (for example <code>read_numeric(DTYPES.INT32, (5, 5))</code>).</li>\n<li>Read in an interleaved array of values of a given datatype (for example <code>read_numeric([DTYPES.INT32, DTYPES.INT32], (5,))</code>).</li>\n</ol>\n\n<p>Read in an array of 5 integers (32-bit).\nReturn a single <code>np.ndarray</code> of type <code>np.int32</code>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">bin_read</span><span class=\"p\">(</span><span class=\"n\">DTYPES</span><span class=\"o\">.</span><span class=\"n\">INT32</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,))</span>\n</code></pre>\n</div>\n\n<p>Read in two 5-length arrays (interleaved int32, int32).\nReturn a tuple of two <code>np.ndarray</code>s of type <code>np.int16</code>\nand <code>np.int64</code>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">bin_read</span><span class=\"p\">([</span><span class=\"n\">DTYPES</span><span class=\"o\">.</span><span class=\"n\">INT16</span><span class=\"p\">,</span> <span class=\"n\">DTYPES</span><span class=\"o\">.</span><span class=\"n\">INT64</span><span class=\"p\">],</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,))</span>\n</code></pre>\n</div>\n\n<p>Read in a single float (32-bit) and divide by 100.\nReturn a single <code>np.float32</code>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">bin_read</span><span class=\"p\">((</span><span class=\"n\">DTYPES</span><span class=\"o\">.</span><span class=\"n\">FLOAT32</span><span class=\"p\">,</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">/</span> <span class=\"mi\">100</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p>Read in two 5-length arrays (interleaved float32, int8).\nDivide the int8 array by 100.\nReturn a tuple of two <code>np.ndarray</code>s of type <code>np.float32</code> and <code>np.float32</code>.\n(NOTE: the int8 array is returned as a float32 array due to the division by 100.)</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">bin_read</span><span class=\"p\">([(</span><span class=\"n\">DTYPES</span><span class=\"o\">.</span><span class=\"n\">FLOAT32</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">DTYPES</span><span class=\"o\">.</span><span class=\"n\">INT8</span><span class=\"p\">,</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">/</span><span class=\"mi\">100</span><span class=\"p\">)],</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,))</span>\n</code></pre>\n</div>\n\n<p>Read in a single 5x2 array of floats (32-bit).\nReturn a 2d <code>np.ndarray</code> of type <code>np.float32</code>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">bin_read</span><span class=\"p\">(</span><span class=\"n\">DTYPES</span><span class=\"o\">.</span><span class=\"n\">FLOAT32</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">readers_new</span><span class=\"o\">.</span><span class=\"n\">DTYPES</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">shape</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,)</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pypamguard.core.readers_new.BinaryReader.millis_to_timestamp": {"fullname": "pypamguard.core.readers_new.BinaryReader.millis_to_timestamp", "modulename": "pypamguard.core.readers_new", "qualname": "BinaryReader.millis_to_timestamp", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">millis</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.readers_new.BinaryReader.timestamp_read": {"fullname": "pypamguard.core.readers_new.BinaryReader.timestamp_read", "modulename": "pypamguard.core.readers_new", "qualname": "BinaryReader.timestamp_read", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "pypamguard.core.readers_new.BinaryReader.nstring_read": {"fullname": "pypamguard.core.readers_new.BinaryReader.nstring_read", "modulename": "pypamguard.core.readers_new", "qualname": "BinaryReader.nstring_read", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">length</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "pypamguard.core.readers_new.BinaryReader.string_read": {"fullname": "pypamguard.core.readers_new.BinaryReader.string_read", "modulename": "pypamguard.core.readers_new", "qualname": "BinaryReader.string_read", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"fullname": "pypamguard.core.readers_new.BinaryReader.bitmap_read", "modulename": "pypamguard.core.readers_new", "qualname": "BinaryReader.bitmap_read", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">readers_new</span><span class=\"o\">.</span><span class=\"n\">DTYPES</span>,</span><span class=\"param\">\t<span class=\"n\">labels</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">bitmap</span><span class=\"o\">.</span><span class=\"n\">Bitmap</span>:</span></span>", "funcdef": "def"}, "pypamguard.core.registry": {"fullname": "pypamguard.core.registry", "modulename": "pypamguard.core.registry", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.core.registry.ais_config": {"fullname": "pypamguard.core.registry.ais_config", "modulename": "pypamguard.core.registry", "qualname": "ais_config", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pypamguard.modules.processing.ais.AISProcessing&#x27;&gt;"}, "pypamguard.core.registry.click_config": {"fullname": "pypamguard.core.registry.click_config", "modulename": "pypamguard.core.registry", "qualname": "click_config", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;Clicks&#x27;: &lt;class &#x27;pypamguard.modules.detectors.click.ClickDetector&#x27;&gt;, &#x27;Trigger Background&#x27;: &lt;class &#x27;pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground&#x27;&gt;}"}, "pypamguard.core.registry.clipgenerator_config": {"fullname": "pypamguard.core.registry.clipgenerator_config", "modulename": "pypamguard.core.registry", "qualname": "clipgenerator_config", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pypamguard.modules.processing.clipgenerator.ClipGenerator&#x27;&gt;"}, "pypamguard.core.registry.deeplearningclassifier_config": {"fullname": "pypamguard.core.registry.deeplearningclassifier_config", "modulename": "pypamguard.core.registry", "qualname": "deeplearningclassifier_config", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;DL_detection&#x27;: &lt;class &#x27;pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections&#x27;&gt;, &#x27;DL detection&#x27;: &lt;class &#x27;pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections&#x27;&gt;, &#x27;DL_Model_Data&#x27;: &lt;class &#x27;pypamguard.modules.classifiers.deeplearningclassifier.DLCModels&#x27;&gt;, &#x27;DL Model Data&#x27;: &lt;class &#x27;pypamguard.modules.classifiers.deeplearningclassifier.DLCModels&#x27;&gt;}"}, "pypamguard.core.registry.dbht_config": {"fullname": "pypamguard.core.registry.dbht_config", "modulename": "pypamguard.core.registry", "qualname": "dbht_config", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pypamguard.modules.processing.dbht.DbHtProcessing&#x27;&gt;"}, "pypamguard.core.registry.difar_config": {"fullname": "pypamguard.core.registry.difar_config", "modulename": "pypamguard.core.registry", "qualname": "difar_config", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pypamguard.modules.processing.difar.DIFARProcessing&#x27;&gt;"}, "pypamguard.core.registry.noisemonitor_config": {"fullname": "pypamguard.core.registry.noisemonitor_config", "modulename": "pypamguard.core.registry", "qualname": "noisemonitor_config", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pypamguard.modules.processing.noisemonitor.NoiseMonitor&#x27;&gt;"}, "pypamguard.core.registry.noiseband_config": {"fullname": "pypamguard.core.registry.noiseband_config", "modulename": "pypamguard.core.registry", "qualname": "noiseband_config", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pypamguard.modules.processing.noiseband.NoiseBandMonitor&#x27;&gt;"}, "pypamguard.core.registry.gpl_config": {"fullname": "pypamguard.core.registry.gpl_config", "modulename": "pypamguard.core.registry", "qualname": "gpl_config", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pypamguard.modules.detectors.gpl.GPLDetector&#x27;&gt;"}, "pypamguard.core.registry.rwedge_config": {"fullname": "pypamguard.core.registry.rwedge_config", "modulename": "pypamguard.core.registry", "qualname": "rwedge_config", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pypamguard.modules.detectors.rwedge.RWEdgeDetector&#x27;&gt;"}, "pypamguard.core.registry.whistleandmoan_config": {"fullname": "pypamguard.core.registry.whistleandmoan_config", "modulename": "pypamguard.core.registry", "qualname": "whistleandmoan_config", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector&#x27;&gt;"}, "pypamguard.core.registry.longtermspectralaverage_config": {"fullname": "pypamguard.core.registry.longtermspectralaverage_config", "modulename": "pypamguard.core.registry", "qualname": "longtermspectralaverage_config", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage&#x27;&gt;"}, "pypamguard.core.registry.ishmael_config": {"fullname": "pypamguard.core.registry.ishmael_config", "modulename": "pypamguard.core.registry", "qualname": "ishmael_config", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;Ishmael Peak Data&#x27;: &lt;class &#x27;pypamguard.modules.processing.ishmael.IshmaelData&#x27;&gt;, &#x27;Ishmael Detections&#x27;: &lt;class &#x27;pypamguard.modules.processing.ishmael.IshmaelDetections&#x27;&gt;}"}, "pypamguard.core.registry.spermwhaleipi_config": {"fullname": "pypamguard.core.registry.spermwhaleipi_config", "modulename": "pypamguard.core.registry", "qualname": "spermwhaleipi_config", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI&#x27;&gt;"}, "pypamguard.core.registry.geminithreshold_config": {"fullname": "pypamguard.core.registry.geminithreshold_config", "modulename": "pypamguard.core.registry", "qualname": "geminithreshold_config", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector&#x27;&gt;"}, "pypamguard.core.registry.MODULES": {"fullname": "pypamguard.core.registry.MODULES", "modulename": "pypamguard.core.registry", "qualname": "MODULES", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;AIS Processing&#x27;: &lt;class &#x27;pypamguard.modules.processing.ais.AISProcessing&#x27;&gt;, &#x27;Click Detector&#x27;: {&#x27;Clicks&#x27;: &lt;class &#x27;pypamguard.modules.detectors.click.ClickDetector&#x27;&gt;, &#x27;Trigger Background&#x27;: &lt;class &#x27;pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground&#x27;&gt;}, &#x27;SoundTrap Click Detector&#x27;: {&#x27;Clicks&#x27;: &lt;class &#x27;pypamguard.modules.detectors.click.ClickDetector&#x27;&gt;, &#x27;Trigger Background&#x27;: &lt;class &#x27;pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground&#x27;&gt;}, &#x27;Clip Generator&#x27;: &lt;class &#x27;pypamguard.modules.processing.clipgenerator.ClipGenerator&#x27;&gt;, &#x27;Deep Learning Classifier&#x27;: {&#x27;DL_detection&#x27;: &lt;class &#x27;pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections&#x27;&gt;, &#x27;DL detection&#x27;: &lt;class &#x27;pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections&#x27;&gt;, &#x27;DL_Model_Data&#x27;: &lt;class &#x27;pypamguard.modules.classifiers.deeplearningclassifier.DLCModels&#x27;&gt;, &#x27;DL Model Data&#x27;: &lt;class &#x27;pypamguard.modules.classifiers.deeplearningclassifier.DLCModels&#x27;&gt;}, &#x27;DbHt&#x27;: &lt;class &#x27;pypamguard.modules.processing.dbht.DbHtProcessing&#x27;&gt;, &#x27;DIFAR Processing&#x27;: &lt;class &#x27;pypamguard.modules.processing.difar.DIFARProcessing&#x27;&gt;, &#x27;LTSA&#x27;: &lt;class &#x27;pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage&#x27;&gt;, &#x27;Noise Monitor&#x27;: &lt;class &#x27;pypamguard.modules.processing.noisemonitor.NoiseMonitor&#x27;&gt;, &#x27;Noise Band&#x27;: &lt;class &#x27;pypamguard.modules.processing.noisemonitor.NoiseMonitor&#x27;&gt;, &#x27;NoiseBand&#x27;: &lt;class &#x27;pypamguard.modules.processing.noiseband.NoiseBandMonitor&#x27;&gt;, &#x27;GPL Detector&#x27;: &lt;class &#x27;pypamguard.modules.detectors.gpl.GPLDetector&#x27;&gt;, &#x27;RW Edge Detector&#x27;: &lt;class &#x27;pypamguard.modules.detectors.rwedge.RWEdgeDetector&#x27;&gt;, &#x27;WhistlesMoans&#x27;: &lt;class &#x27;pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector&#x27;&gt;, &#x27;Energy Sum Detector&#x27;: {&#x27;Ishmael Peak Data&#x27;: &lt;class &#x27;pypamguard.modules.processing.ishmael.IshmaelData&#x27;&gt;, &#x27;Ishmael Detections&#x27;: &lt;class &#x27;pypamguard.modules.processing.ishmael.IshmaelDetections&#x27;&gt;}, &#x27;Spectrogram Correlation Detector&#x27;: {&#x27;Ishmael Peak Data&#x27;: &lt;class &#x27;pypamguard.modules.processing.ishmael.IshmaelData&#x27;&gt;, &#x27;Ishmael Detections&#x27;: &lt;class &#x27;pypamguard.modules.processing.ishmael.IshmaelDetections&#x27;&gt;}, &#x27;Matched Filter Detector&#x27;: {&#x27;Ishmael Peak Data&#x27;: &lt;class &#x27;pypamguard.modules.processing.ishmael.IshmaelData&#x27;&gt;, &#x27;Ishmael Detections&#x27;: &lt;class &#x27;pypamguard.modules.processing.ishmael.IshmaelDetections&#x27;&gt;}, &#x27;Ipi module&#x27;: &lt;class &#x27;pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI&#x27;&gt;, &#x27;Gemini Threshold Detector&#x27;: &lt;class &#x27;pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector&#x27;&gt;}"}, "pypamguard.core.registry.module_metadata": {"fullname": "pypamguard.core.registry.module_metadata", "modulename": "pypamguard.core.registry", "qualname": "module_metadata", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">module</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.registry.ModuleRegistry": {"fullname": "pypamguard.core.registry.ModuleRegistry", "modulename": "pypamguard.core.registry", "qualname": "ModuleRegistry", "kind": "class", "doc": "<p></p>\n"}, "pypamguard.core.registry.ModuleRegistry.modules": {"fullname": "pypamguard.core.registry.ModuleRegistry.modules", "modulename": "pypamguard.core.registry", "qualname": "ModuleRegistry.modules", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.core.registry.ModuleRegistry.register_module": {"fullname": "pypamguard.core.registry.ModuleRegistry.register_module", "modulename": "pypamguard.core.registry", "qualname": "ModuleRegistry.register_module", "kind": "function", "doc": "<p>Register a new module (must be a subclass of GenericModule or a dictionary)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">module_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">module_class</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genmodule</span><span class=\"o\">.</span><span class=\"n\">GenericModule</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"fullname": "pypamguard.core.registry.ModuleRegistry.deregister_module", "modulename": "pypamguard.core.registry", "qualname": "ModuleRegistry.deregister_module", "kind": "function", "doc": "<p>Deregister a module. Returns the number of modules deregistered (either 0 or 1)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">module_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "pypamguard.core.registry.ModuleRegistry.get_module": {"fullname": "pypamguard.core.registry.ModuleRegistry.get_module", "modulename": "pypamguard.core.registry", "qualname": "ModuleRegistry.get_module", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">module_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">module_stream</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genmodule</span><span class=\"o\">.</span><span class=\"n\">GenericModule</span>:</span></span>", "funcdef": "def"}, "pypamguard.core.registry.register_preinstalled_modules": {"fullname": "pypamguard.core.registry.register_preinstalled_modules", "modulename": "pypamguard.core.registry", "qualname": "register_preinstalled_modules", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">registry</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">registry</span><span class=\"o\">.</span><span class=\"n\">ModuleRegistry</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.serializable": {"fullname": "pypamguard.core.serializable", "modulename": "pypamguard.core.serializable", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.core.serializable.Serializable": {"fullname": "pypamguard.core.serializable.Serializable", "modulename": "pypamguard.core.serializable", "qualname": "Serializable", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "abc.ABC"}, "pypamguard.core.serializable.Serializable.serialize": {"fullname": "pypamguard.core.serializable.Serializable.serialize", "modulename": "pypamguard.core.serializable", "qualname": "Serializable.serialize", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.serializable.Serializable.to_json": {"fullname": "pypamguard.core.serializable.Serializable.to_json", "modulename": "pypamguard.core.serializable", "qualname": "Serializable.to_json", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.core.serializable.Serializable.from_json": {"fullname": "pypamguard.core.serializable.Serializable.from_json", "modulename": "pypamguard.core.serializable", "qualname": "Serializable.from_json", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">json</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.generics": {"fullname": "pypamguard.generics", "modulename": "pypamguard.generics", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.generics.genbackground": {"fullname": "pypamguard.generics.genbackground", "modulename": "pypamguard.generics.genbackground", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.generics.genbackground.GenericBackground": {"fullname": "pypamguard.generics.genbackground.GenericBackground", "modulename": "pypamguard.generics.genbackground", "qualname": "GenericBackground", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.base.chunk.BaseChunk, abc.ABC"}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"fullname": "pypamguard.generics.genbackground.GenericBackground.__init__", "modulename": "pypamguard.generics.genbackground", "qualname": "GenericBackground.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">file_header</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genfileheader</span><span class=\"o\">.</span><span class=\"n\">GenericFileHeader</span>,</span><span class=\"param\">\t<span class=\"n\">module_header</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genmoduleheader</span><span class=\"o\">.</span><span class=\"n\">GenericModuleHeader</span>,</span><span class=\"param\">\t<span class=\"n\">filters</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">filters</span><span class=\"o\">.</span><span class=\"n\">Filters</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.generics.genchunkinfo": {"fullname": "pypamguard.generics.genchunkinfo", "modulename": "pypamguard.generics.genchunkinfo", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"fullname": "pypamguard.generics.genchunkinfo.GenericChunkInfo", "modulename": "pypamguard.generics.genchunkinfo", "qualname": "GenericChunkInfo", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.base.chunk.BaseChunk, abc.ABC"}, "pypamguard.generics.genchunkinfo.GenericChunkInfo.__init__": {"fullname": "pypamguard.generics.genchunkinfo.GenericChunkInfo.__init__", "modulename": "pypamguard.generics.genchunkinfo", "qualname": "GenericChunkInfo.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.generics.genfilefooter": {"fullname": "pypamguard.generics.genfilefooter", "modulename": "pypamguard.generics.genfilefooter", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"fullname": "pypamguard.generics.genfilefooter.GenericFileFooter", "modulename": "pypamguard.generics.genfilefooter", "qualname": "GenericFileFooter", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.base.chunk.BaseChunk, abc.ABC"}, "pypamguard.generics.genfilefooter.GenericFileFooter.__init__": {"fullname": "pypamguard.generics.genfilefooter.GenericFileFooter.__init__", "modulename": "pypamguard.generics.genfilefooter", "qualname": "GenericFileFooter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_header</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genfileheader</span><span class=\"o\">.</span><span class=\"n\">GenericFileHeader</span></span>)</span>"}, "pypamguard.generics.genfilefooter.GenericFileFooter.length": {"fullname": "pypamguard.generics.genfilefooter.GenericFileFooter.length", "modulename": "pypamguard.generics.genfilefooter", "qualname": "GenericFileFooter.length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.generics.genfilefooter.GenericFileFooter.identifier": {"fullname": "pypamguard.generics.genfilefooter.GenericFileFooter.identifier", "modulename": "pypamguard.generics.genfilefooter", "qualname": "GenericFileFooter.identifier", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.generics.genfileheader": {"fullname": "pypamguard.generics.genfileheader", "modulename": "pypamguard.generics.genfileheader", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.generics.genfileheader.GenericFileHeader": {"fullname": "pypamguard.generics.genfileheader.GenericFileHeader", "modulename": "pypamguard.generics.genfileheader", "qualname": "GenericFileHeader", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.base.chunk.BaseChunk, abc.ABC"}, "pypamguard.generics.genfileheader.GenericFileHeader.__init__": {"fullname": "pypamguard.generics.genfileheader.GenericFileHeader.__init__", "modulename": "pypamguard.generics.genfileheader", "qualname": "GenericFileHeader.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.generics.genfileheader.GenericFileHeader.length": {"fullname": "pypamguard.generics.genfileheader.GenericFileHeader.length", "modulename": "pypamguard.generics.genfileheader", "qualname": "GenericFileHeader.length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.generics.genfileheader.GenericFileHeader.identifier": {"fullname": "pypamguard.generics.genfileheader.GenericFileHeader.identifier", "modulename": "pypamguard.generics.genfileheader", "qualname": "GenericFileHeader.identifier", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.generics.genfileheader.GenericFileHeader.file_format": {"fullname": "pypamguard.generics.genfileheader.GenericFileHeader.file_format", "modulename": "pypamguard.generics.genfileheader", "qualname": "GenericFileHeader.file_format", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.generics.genfileheader.GenericFileHeader.pamguard": {"fullname": "pypamguard.generics.genfileheader.GenericFileHeader.pamguard", "modulename": "pypamguard.generics.genfileheader", "qualname": "GenericFileHeader.pamguard", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "pypamguard.generics.genfileheader.GenericFileHeader.version": {"fullname": "pypamguard.generics.genfileheader.GenericFileHeader.version", "modulename": "pypamguard.generics.genfileheader", "qualname": "GenericFileHeader.version", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "pypamguard.generics.genfileheader.GenericFileHeader.branch": {"fullname": "pypamguard.generics.genfileheader.GenericFileHeader.branch", "modulename": "pypamguard.generics.genfileheader", "qualname": "GenericFileHeader.branch", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "pypamguard.generics.genfileheader.GenericFileHeader.data_date": {"fullname": "pypamguard.generics.genfileheader.GenericFileHeader.data_date", "modulename": "pypamguard.generics.genfileheader", "qualname": "GenericFileHeader.data_date", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.generics.genfileheader.GenericFileHeader.analysis_date": {"fullname": "pypamguard.generics.genfileheader.GenericFileHeader.analysis_date", "modulename": "pypamguard.generics.genfileheader", "qualname": "GenericFileHeader.analysis_date", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.generics.genfileheader.GenericFileHeader.start_sample": {"fullname": "pypamguard.generics.genfileheader.GenericFileHeader.start_sample", "modulename": "pypamguard.generics.genfileheader", "qualname": "GenericFileHeader.start_sample", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.generics.genfileheader.GenericFileHeader.module_type": {"fullname": "pypamguard.generics.genfileheader.GenericFileHeader.module_type", "modulename": "pypamguard.generics.genfileheader", "qualname": "GenericFileHeader.module_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "pypamguard.generics.genfileheader.GenericFileHeader.module_name": {"fullname": "pypamguard.generics.genfileheader.GenericFileHeader.module_name", "modulename": "pypamguard.generics.genfileheader", "qualname": "GenericFileHeader.module_name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "pypamguard.generics.genfileheader.GenericFileHeader.stream_name": {"fullname": "pypamguard.generics.genfileheader.GenericFileHeader.stream_name", "modulename": "pypamguard.generics.genfileheader", "qualname": "GenericFileHeader.stream_name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "pypamguard.generics.genfileheader.GenericFileHeader.extra_info_len": {"fullname": "pypamguard.generics.genfileheader.GenericFileHeader.extra_info_len", "modulename": "pypamguard.generics.genfileheader", "qualname": "GenericFileHeader.extra_info_len", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.generics.genmodule": {"fullname": "pypamguard.generics.genmodule", "modulename": "pypamguard.generics.genmodule", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.generics.genmodule.GenericModule": {"fullname": "pypamguard.generics.genmodule.GenericModule", "modulename": "pypamguard.generics.genmodule", "qualname": "GenericModule", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.base.chunk.BaseChunk, abc.ABC"}, "pypamguard.generics.genmodule.GenericModule.__init__": {"fullname": "pypamguard.generics.genmodule.GenericModule.__init__", "modulename": "pypamguard.generics.genmodule", "qualname": "GenericModule.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">file_header</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genfileheader</span><span class=\"o\">.</span><span class=\"n\">GenericFileHeader</span>,</span><span class=\"param\">\t<span class=\"n\">module_header</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genmoduleheader</span><span class=\"o\">.</span><span class=\"n\">GenericModuleHeader</span>,</span><span class=\"param\">\t<span class=\"n\">filters</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">filters</span><span class=\"o\">.</span><span class=\"n\">Filters</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.generics.genmodulefooter": {"fullname": "pypamguard.generics.genmodulefooter", "modulename": "pypamguard.generics.genmodulefooter", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"fullname": "pypamguard.generics.genmodulefooter.GenericModuleFooter", "modulename": "pypamguard.generics.genmodulefooter", "qualname": "GenericModuleFooter", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.base.chunk.BaseChunk, abc.ABC"}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"fullname": "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__", "modulename": "pypamguard.generics.genmodulefooter", "qualname": "GenericModuleFooter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">file_header</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genfileheader</span><span class=\"o\">.</span><span class=\"n\">GenericFileHeader</span>,</span><span class=\"param\">\t<span class=\"n\">module_header</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genmoduleheader</span><span class=\"o\">.</span><span class=\"n\">GenericModuleHeader</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.length": {"fullname": "pypamguard.generics.genmodulefooter.GenericModuleFooter.length", "modulename": "pypamguard.generics.genmodulefooter", "qualname": "GenericModuleFooter.length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.identifier": {"fullname": "pypamguard.generics.genmodulefooter.GenericModuleFooter.identifier", "modulename": "pypamguard.generics.genmodulefooter", "qualname": "GenericModuleFooter.identifier", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.generics.genmoduleheader": {"fullname": "pypamguard.generics.genmoduleheader", "modulename": "pypamguard.generics.genmoduleheader", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"fullname": "pypamguard.generics.genmoduleheader.GenericModuleHeader", "modulename": "pypamguard.generics.genmoduleheader", "qualname": "GenericModuleHeader", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.base.chunk.BaseChunk, abc.ABC"}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__": {"fullname": "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__", "modulename": "pypamguard.generics.genmoduleheader", "qualname": "GenericModuleHeader.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">file_header</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genfileheader</span><span class=\"o\">.</span><span class=\"n\">GenericFileHeader</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.length": {"fullname": "pypamguard.generics.genmoduleheader.GenericModuleHeader.length", "modulename": "pypamguard.generics.genmoduleheader", "qualname": "GenericModuleHeader.length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.identifier": {"fullname": "pypamguard.generics.genmoduleheader.GenericModuleHeader.identifier", "modulename": "pypamguard.generics.genmoduleheader", "qualname": "GenericModuleHeader.identifier", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.load_pamguard_binary_file": {"fullname": "pypamguard.load_pamguard_binary_file", "modulename": "pypamguard.load_pamguard_binary_file", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.load_pamguard_binary_file.timer": {"fullname": "pypamguard.load_pamguard_binary_file.timer", "modulename": "pypamguard.load_pamguard_binary_file", "qualname": "timer", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">label</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"fullname": "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file", "modulename": "pypamguard.load_pamguard_binary_file", "qualname": "load_pamguard_binary_file", "kind": "function", "doc": "<p>Read a binary PAMGuard data file into a PAMFile object</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filename</strong>:  absolute or relative path to the .pgdt file to read</li>\n<li><strong>order</strong>:  endianess of data (defaults to 'network')</li>\n<li><strong>buffering</strong>:  number of bytes to buffer</li>\n<li><strong>verbosity</strong>:  logger verbosity level</li>\n<li><strong>filters</strong>:  filters to apply to data</li>\n<li><strong>json_path</strong>:  write json to a specific path</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">filename</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">constants</span><span class=\"o\">.</span><span class=\"n\">BYTE_ORDERS</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">BYTE_ORDERS</span><span class=\"o\">.</span><span class=\"n\">BIG_ENDIAN</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&gt;&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">buffering</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"mi\">1024</span>,</span><span class=\"param\">\t<span class=\"n\">verbosity</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">Verbosity</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Verbosity</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">filters</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">filters</span><span class=\"o\">.</span><span class=\"n\">Filters</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">filters</span><span class=\"o\">.</span><span class=\"n\">Filters</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">json_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">pgbfile</span><span class=\"o\">.</span><span class=\"n\">PGBFile</span>:</span></span>", "funcdef": "def"}, "pypamguard.logger": {"fullname": "pypamguard.logger", "modulename": "pypamguard.logger", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.logger.Verbosity": {"fullname": "pypamguard.logger.Verbosity", "modulename": "pypamguard.logger", "qualname": "Verbosity", "kind": "class", "doc": "<p></p>\n", "bases": "enum.IntEnum"}, "pypamguard.logger.Verbosity.CRITICAL": {"fullname": "pypamguard.logger.Verbosity.CRITICAL", "modulename": "pypamguard.logger", "qualname": "Verbosity.CRITICAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Verbosity.CRITICAL: 0&gt;"}, "pypamguard.logger.Verbosity.ERROR": {"fullname": "pypamguard.logger.Verbosity.ERROR", "modulename": "pypamguard.logger", "qualname": "Verbosity.ERROR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Verbosity.ERROR: 1&gt;"}, "pypamguard.logger.Verbosity.WARNING": {"fullname": "pypamguard.logger.Verbosity.WARNING", "modulename": "pypamguard.logger", "qualname": "Verbosity.WARNING", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Verbosity.WARNING: 2&gt;"}, "pypamguard.logger.Verbosity.INFO": {"fullname": "pypamguard.logger.Verbosity.INFO", "modulename": "pypamguard.logger", "qualname": "Verbosity.INFO", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Verbosity.INFO: 3&gt;"}, "pypamguard.logger.Verbosity.DEBUG": {"fullname": "pypamguard.logger.Verbosity.DEBUG", "modulename": "pypamguard.logger", "qualname": "Verbosity.DEBUG", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Verbosity.DEBUG: 4&gt;"}, "pypamguard.logger.logger_config": {"fullname": "pypamguard.logger.logger_config", "modulename": "pypamguard.logger", "qualname": "logger_config", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">verbosity</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">Verbosity</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.logger.Logger": {"fullname": "pypamguard.logger.Logger", "modulename": "pypamguard.logger", "qualname": "Logger", "kind": "class", "doc": "<p></p>\n"}, "pypamguard.logger.Logger.verbosity": {"fullname": "pypamguard.logger.Logger.verbosity", "modulename": "pypamguard.logger", "qualname": "Logger.verbosity", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.logger.Logger.set_verbosity": {"fullname": "pypamguard.logger.Logger.set_verbosity", "modulename": "pypamguard.logger", "qualname": "Logger.set_verbosity", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">verbosity</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.logger.Logger.info": {"fullname": "pypamguard.logger.Logger.info", "modulename": "pypamguard.logger", "qualname": "Logger.info", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.logger.Logger.debug": {"fullname": "pypamguard.logger.Logger.debug", "modulename": "pypamguard.logger", "qualname": "Logger.debug", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.logger.Logger.warning": {"fullname": "pypamguard.logger.Logger.warning", "modulename": "pypamguard.logger", "qualname": "Logger.warning", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.logger.Logger.error": {"fullname": "pypamguard.logger.Logger.error", "modulename": "pypamguard.logger", "qualname": "Logger.error", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.logger.logger": {"fullname": "pypamguard.logger.logger", "modulename": "pypamguard.logger", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;pypamguard.logger.Logger object&gt;"}, "pypamguard.main": {"fullname": "pypamguard.main", "modulename": "pypamguard.main", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules": {"fullname": "pypamguard.modules", "modulename": "pypamguard.modules", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.classifiers": {"fullname": "pypamguard.modules.classifiers", "modulename": "pypamguard.modules.classifiers", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.classifiers.deeplearningclassifier": {"fullname": "pypamguard.modules.classifiers.deeplearningclassifier", "modulename": "pypamguard.modules.classifiers.deeplearningclassifier", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"fullname": "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels", "modulename": "pypamguard.modules.classifiers.deeplearningclassifier", "qualname": "DLCModels", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmodule.StandardModule"}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.__init__": {"fullname": "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.__init__", "modulename": "pypamguard.modules.classifiers.deeplearningclassifier", "qualname": "DLCModels.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.type": {"fullname": "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.type", "modulename": "pypamguard.modules.classifiers.deeplearningclassifier", "qualname": "DLCModels.type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int8"}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.is_binary": {"fullname": "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.is_binary", "modulename": "pypamguard.modules.classifiers.deeplearningclassifier", "qualname": "DLCModels.is_binary", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.uint8"}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.scale": {"fullname": "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.scale", "modulename": "pypamguard.modules.classifiers.deeplearningclassifier", "qualname": "DLCModels.scale", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_species": {"fullname": "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_species", "modulename": "pypamguard.modules.classifiers.deeplearningclassifier", "qualname": "DLCModels.n_species", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int16"}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.predictions": {"fullname": "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.predictions", "modulename": "pypamguard.modules.classifiers.deeplearningclassifier", "qualname": "DLCModels.predictions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[numpy.float32]"}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_class": {"fullname": "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_class", "modulename": "pypamguard.modules.classifiers.deeplearningclassifier", "qualname": "DLCModels.n_class", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int16"}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"fullname": "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections", "modulename": "pypamguard.modules.classifiers.deeplearningclassifier", "qualname": "DLCDetections", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmodule.StandardModule"}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.__init__": {"fullname": "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.__init__", "modulename": "pypamguard.modules.classifiers.deeplearningclassifier", "qualname": "DLCDetections.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_chan": {"fullname": "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_chan", "modulename": "pypamguard.modules.classifiers.deeplearningclassifier", "qualname": "DLCDetections.n_chan", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int16"}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_samps": {"fullname": "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_samps", "modulename": "pypamguard.modules.classifiers.deeplearningclassifier", "qualname": "DLCDetections.n_samps", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int32"}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.scale": {"fullname": "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.scale", "modulename": "pypamguard.modules.classifiers.deeplearningclassifier", "qualname": "DLCDetections.scale", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.wave": {"fullname": "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.wave", "modulename": "pypamguard.modules.classifiers.deeplearningclassifier", "qualname": "DLCDetections.wave", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[numpy.float32]"}, "pypamguard.modules.detectors": {"fullname": "pypamguard.modules.detectors", "modulename": "pypamguard.modules.detectors", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.detectors.click": {"fullname": "pypamguard.modules.detectors.click", "modulename": "pypamguard.modules.detectors.click", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"fullname": "pypamguard.modules.detectors.click.ClickDetectorFooter", "modulename": "pypamguard.modules.detectors.click", "qualname": "ClickDetectorFooter", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmodulefooter.StandardModuleFooter"}, "pypamguard.modules.detectors.click.ClickDetectorFooter.__init__": {"fullname": "pypamguard.modules.detectors.click.ClickDetectorFooter.__init__", "modulename": "pypamguard.modules.detectors.click", "qualname": "ClickDetectorFooter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_header</span>, </span><span class=\"param\"><span class=\"n\">module_header</span></span>)</span>"}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count_length": {"fullname": "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count_length", "modulename": "pypamguard.modules.detectors.click", "qualname": "ClickDetectorFooter.types_count_length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count": {"fullname": "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count", "modulename": "pypamguard.modules.detectors.click", "qualname": "ClickDetectorFooter.types_count", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[int]"}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"fullname": "pypamguard.modules.detectors.click.ClickDetectorBackgound", "modulename": "pypamguard.modules.detectors.click", "qualname": "ClickDetectorBackgound", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdbackground.StandardBackground"}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.__init__": {"fullname": "pypamguard.modules.detectors.click.ClickDetectorBackgound.__init__", "modulename": "pypamguard.modules.detectors.click", "qualname": "ClickDetectorBackgound.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_header</span>, </span><span class=\"param\"><span class=\"n\">module_header</span>, </span><span class=\"param\"><span class=\"n\">filters</span></span>)</span>"}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.noise_len": {"fullname": "pypamguard.modules.detectors.click.ClickDetectorBackgound.noise_len", "modulename": "pypamguard.modules.detectors.click", "qualname": "ClickDetectorBackgound.noise_len", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int16"}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.background": {"fullname": "pypamguard.modules.detectors.click.ClickDetectorBackgound.background", "modulename": "pypamguard.modules.detectors.click", "qualname": "ClickDetectorBackgound.background", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[numpy.float32]"}, "pypamguard.modules.detectors.click.ClickDetector": {"fullname": "pypamguard.modules.detectors.click.ClickDetector", "modulename": "pypamguard.modules.detectors.click", "qualname": "ClickDetector", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmodule.StandardModule"}, "pypamguard.modules.detectors.click.ClickDetector.__init__": {"fullname": "pypamguard.modules.detectors.click.ClickDetector.__init__", "modulename": "pypamguard.modules.detectors.click", "qualname": "ClickDetector.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_header</span>, </span><span class=\"param\"><span class=\"n\">module_header</span>, </span><span class=\"param\"><span class=\"n\">filters</span></span>)</span>"}, "pypamguard.modules.detectors.click.ClickDetector.start_sample": {"fullname": "pypamguard.modules.detectors.click.ClickDetector.start_sample", "modulename": "pypamguard.modules.detectors.click", "qualname": "ClickDetector.start_sample", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.modules.detectors.click.ClickDetector.channel_map": {"fullname": "pypamguard.modules.detectors.click.ClickDetector.channel_map", "modulename": "pypamguard.modules.detectors.click", "qualname": "ClickDetector.channel_map", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pypamguard.utils.bitmap.Bitmap"}, "pypamguard.modules.detectors.click.ClickDetector.trigger_map": {"fullname": "pypamguard.modules.detectors.click.ClickDetector.trigger_map", "modulename": "pypamguard.modules.detectors.click", "qualname": "ClickDetector.trigger_map", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pypamguard.utils.bitmap.Bitmap"}, "pypamguard.modules.detectors.click.ClickDetector.type": {"fullname": "pypamguard.modules.detectors.click.ClickDetector.type", "modulename": "pypamguard.modules.detectors.click", "qualname": "ClickDetector.type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.modules.detectors.click.ClickDetector.flags": {"fullname": "pypamguard.modules.detectors.click.ClickDetector.flags", "modulename": "pypamguard.modules.detectors.click", "qualname": "ClickDetector.flags", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pypamguard.utils.bitmap.Bitmap"}, "pypamguard.modules.detectors.click.ClickDetector.delays": {"fullname": "pypamguard.modules.detectors.click.ClickDetector.delays", "modulename": "pypamguard.modules.detectors.click", "qualname": "ClickDetector.delays", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, "pypamguard.modules.detectors.click.ClickDetector.angles": {"fullname": "pypamguard.modules.detectors.click.ClickDetector.angles", "modulename": "pypamguard.modules.detectors.click", "qualname": "ClickDetector.angles", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "pypamguard.modules.detectors.click.ClickDetector.angle_errors": {"fullname": "pypamguard.modules.detectors.click.ClickDetector.angle_errors", "modulename": "pypamguard.modules.detectors.click", "qualname": "ClickDetector.angle_errors", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "pypamguard.modules.detectors.click.ClickDetector.duration": {"fullname": "pypamguard.modules.detectors.click.ClickDetector.duration", "modulename": "pypamguard.modules.detectors.click", "qualname": "ClickDetector.duration", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.modules.detectors.click.ClickDetector.wave": {"fullname": "pypamguard.modules.detectors.click.ClickDetector.wave", "modulename": "pypamguard.modules.detectors.click", "qualname": "ClickDetector.wave", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "pypamguard.modules.detectors.clicktriggerbackground": {"fullname": "pypamguard.modules.detectors.clicktriggerbackground", "modulename": "pypamguard.modules.detectors.clicktriggerbackground", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"fullname": "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader", "modulename": "pypamguard.modules.detectors.clicktriggerbackground", "qualname": "ClickTriggerBackgroundHeader", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmoduleheader.StandardModuleHeader"}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader.__init__": {"fullname": "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader.__init__", "modulename": "pypamguard.modules.detectors.clicktriggerbackground", "qualname": "ClickTriggerBackgroundHeader.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"fullname": "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground", "modulename": "pypamguard.modules.detectors.clicktriggerbackground", "qualname": "ClickTriggerBackground", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmodule.StandardModule"}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.__init__": {"fullname": "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.__init__", "modulename": "pypamguard.modules.detectors.clicktriggerbackground", "qualname": "ClickTriggerBackground.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.scale": {"fullname": "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.scale", "modulename": "pypamguard.modules.detectors.clicktriggerbackground", "qualname": "ClickTriggerBackground.scale", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.raw_levels": {"fullname": "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.raw_levels", "modulename": "pypamguard.modules.detectors.clicktriggerbackground", "qualname": "ClickTriggerBackground.raw_levels", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[numpy.float64]"}, "pypamguard.modules.detectors.gpl": {"fullname": "pypamguard.modules.detectors.gpl", "modulename": "pypamguard.modules.detectors.gpl", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.detectors.gpl.GPLDetector": {"fullname": "pypamguard.modules.detectors.gpl.GPLDetector", "modulename": "pypamguard.modules.detectors.gpl", "qualname": "GPLDetector", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmodule.StandardModule"}, "pypamguard.modules.detectors.gpl.GPLDetector.__init__": {"fullname": "pypamguard.modules.detectors.gpl.GPLDetector.__init__", "modulename": "pypamguard.modules.detectors.gpl", "qualname": "GPLDetector.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.modules.detectors.rwedge": {"fullname": "pypamguard.modules.detectors.rwedge", "modulename": "pypamguard.modules.detectors.rwedge", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"fullname": "pypamguard.modules.detectors.rwedge.RWEdgeDetector", "modulename": "pypamguard.modules.detectors.rwedge", "qualname": "RWEdgeDetector", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmodule.StandardModule"}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.__init__": {"fullname": "pypamguard.modules.detectors.rwedge.RWEdgeDetector.__init__", "modulename": "pypamguard.modules.detectors.rwedge", "qualname": "RWEdgeDetector.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_header</span>, </span><span class=\"param\"><span class=\"n\">module_header</span>, </span><span class=\"param\"><span class=\"n\">filters</span></span>)</span>"}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.type": {"fullname": "pypamguard.modules.detectors.rwedge.RWEdgeDetector.type", "modulename": "pypamguard.modules.detectors.rwedge", "qualname": "RWEdgeDetector.type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.signal": {"fullname": "pypamguard.modules.detectors.rwedge.RWEdgeDetector.signal", "modulename": "pypamguard.modules.detectors.rwedge", "qualname": "RWEdgeDetector.signal", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.noise": {"fullname": "pypamguard.modules.detectors.rwedge.RWEdgeDetector.noise", "modulename": "pypamguard.modules.detectors.rwedge", "qualname": "RWEdgeDetector.noise", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.n_slices": {"fullname": "pypamguard.modules.detectors.rwedge.RWEdgeDetector.n_slices", "modulename": "pypamguard.modules.detectors.rwedge", "qualname": "RWEdgeDetector.n_slices", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.slice_nums": {"fullname": "pypamguard.modules.detectors.rwedge.RWEdgeDetector.slice_nums", "modulename": "pypamguard.modules.detectors.rwedge", "qualname": "RWEdgeDetector.slice_nums", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.lo_freqs": {"fullname": "pypamguard.modules.detectors.rwedge.RWEdgeDetector.lo_freqs", "modulename": "pypamguard.modules.detectors.rwedge", "qualname": "RWEdgeDetector.lo_freqs", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_freqs": {"fullname": "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_freqs", "modulename": "pypamguard.modules.detectors.rwedge", "qualname": "RWEdgeDetector.peak_freqs", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.hi_freqs": {"fullname": "pypamguard.modules.detectors.rwedge.RWEdgeDetector.hi_freqs", "modulename": "pypamguard.modules.detectors.rwedge", "qualname": "RWEdgeDetector.hi_freqs", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_amp": {"fullname": "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_amp", "modulename": "pypamguard.modules.detectors.rwedge", "qualname": "RWEdgeDetector.peak_amp", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "pypamguard.modules.detectors.spectralbackground": {"fullname": "pypamguard.modules.detectors.spectralbackground", "modulename": "pypamguard.modules.detectors.spectralbackground", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"fullname": "pypamguard.modules.detectors.spectralbackground.SpectralBackground", "modulename": "pypamguard.modules.detectors.spectralbackground", "qualname": "SpectralBackground", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdbackground.StandardBackground"}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.__init__": {"fullname": "pypamguard.modules.detectors.spectralbackground.SpectralBackground.__init__", "modulename": "pypamguard.modules.detectors.spectralbackground", "qualname": "SpectralBackground.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.first_bin": {"fullname": "pypamguard.modules.detectors.spectralbackground.SpectralBackground.first_bin", "modulename": "pypamguard.modules.detectors.spectralbackground", "qualname": "SpectralBackground.first_bin", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int32"}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.noise_len": {"fullname": "pypamguard.modules.detectors.spectralbackground.SpectralBackground.noise_len", "modulename": "pypamguard.modules.detectors.spectralbackground", "qualname": "SpectralBackground.noise_len", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int32"}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.background": {"fullname": "pypamguard.modules.detectors.spectralbackground.SpectralBackground.background", "modulename": "pypamguard.modules.detectors.spectralbackground", "qualname": "SpectralBackground.background", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[numpy.float32]"}, "pypamguard.modules.detectors.whistleandmoan": {"fullname": "pypamguard.modules.detectors.whistleandmoan", "modulename": "pypamguard.modules.detectors.whistleandmoan", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"fullname": "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader", "modulename": "pypamguard.modules.detectors.whistleandmoan", "qualname": "WhistleAndMoanDetectorHeader", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmoduleheader.StandardModuleHeader"}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.__init__": {"fullname": "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.__init__", "modulename": "pypamguard.modules.detectors.whistleandmoan", "qualname": "WhistleAndMoanDetectorHeader.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_header</span></span>)</span>"}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.delay_scale": {"fullname": "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.delay_scale", "modulename": "pypamguard.modules.detectors.whistleandmoan", "qualname": "WhistleAndMoanDetectorHeader.delay_scale", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"fullname": "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector", "modulename": "pypamguard.modules.detectors.whistleandmoan", "qualname": "WhistleAndMoanDetector", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmodule.StandardModule"}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.__init__": {"fullname": "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.__init__", "modulename": "pypamguard.modules.detectors.whistleandmoan", "qualname": "WhistleAndMoanDetector.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_header</span>, </span><span class=\"param\"><span class=\"n\">module_header</span>, </span><span class=\"param\"><span class=\"n\">filters</span></span>)</span>"}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_slices": {"fullname": "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_slices", "modulename": "pypamguard.modules.detectors.whistleandmoan", "qualname": "WhistleAndMoanDetector.n_slices", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.amplitude": {"fullname": "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.amplitude", "modulename": "pypamguard.modules.detectors.whistleandmoan", "qualname": "WhistleAndMoanDetector.amplitude", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour": {"fullname": "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour", "modulename": "pypamguard.modules.detectors.whistleandmoan", "qualname": "WhistleAndMoanDetector.contour", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour_width": {"fullname": "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour_width", "modulename": "pypamguard.modules.detectors.whistleandmoan", "qualname": "WhistleAndMoanDetector.contour_width", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.slice_numbers": {"fullname": "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.slice_numbers", "modulename": "pypamguard.modules.detectors.whistleandmoan", "qualname": "WhistleAndMoanDetector.slice_numbers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_peaks": {"fullname": "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_peaks", "modulename": "pypamguard.modules.detectors.whistleandmoan", "qualname": "WhistleAndMoanDetector.n_peaks", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.peak_data": {"fullname": "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.peak_data", "modulename": "pypamguard.modules.detectors.whistleandmoan", "qualname": "WhistleAndMoanDetector.peak_data", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "pypamguard.modules.plugins": {"fullname": "pypamguard.modules.plugins", "modulename": "pypamguard.modules.plugins", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.plugins.geminithreshold": {"fullname": "pypamguard.modules.plugins.geminithreshold", "modulename": "pypamguard.modules.plugins.geminithreshold", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetectorBackgroundHeader", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.base.chunk.BaseChunk"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetectorBackgroundGLFRecord", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.base.chunk.BaseChunk"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetectorBackground", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdbackground.StandardBackground"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground.__init__": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground.__init__", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetectorBackground.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmodule.StandardModule"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.__init__": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.__init__", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_points": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_points", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector.n_points", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int32"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_sonar": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_sonar", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector.n_sonar", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int8"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_ids": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_ids", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector.sonar_ids", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[numpy.int16]"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.straight_length": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.straight_length", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector.straight_length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.wobbly_length": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.wobbly_length", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector.wobbly_length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.mean_occupancy": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.mean_occupancy", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector.mean_occupancy", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.time_millis": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.time_millis", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector.time_millis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[numpy.int64]"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_id": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_id", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector.sonar_id", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[numpy.int16]"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_bearing": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_bearing", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector.min_bearing", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[numpy.float32]"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_bearing": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_bearing", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector.max_bearing", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[numpy.float32]"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_bearing": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_bearing", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector.peak_bearing", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[numpy.float32]"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_range": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_range", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector.min_range", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[numpy.float32]"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_range": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_range", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector.max_range", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[numpy.float32]"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_range": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_range", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector.peak_range", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[numpy.float32]"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.obj_size": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.obj_size", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector.obj_size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[numpy.float32]"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.occupancy": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.occupancy", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector.occupancy", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[numpy.float32]"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.ave_value": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.ave_value", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector.ave_value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[numpy.int16]"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.tot_value": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.tot_value", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector.tot_value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[numpy.int32]"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_value": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_value", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector.max_value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[numpy.int16]"}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.dates": {"fullname": "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.dates", "modulename": "pypamguard.modules.plugins.geminithreshold", "qualname": "GeminiThresholdDetector.dates", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[datetime.datetime]"}, "pypamguard.modules.plugins.spermwhaleipi": {"fullname": "pypamguard.modules.plugins.spermwhaleipi", "modulename": "pypamguard.modules.plugins.spermwhaleipi", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"fullname": "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI", "modulename": "pypamguard.modules.plugins.spermwhaleipi", "qualname": "SpermWhaleIPI", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmodule.StandardModule"}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.__init__": {"fullname": "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.__init__", "modulename": "pypamguard.modules.plugins.spermwhaleipi", "qualname": "SpermWhaleIPI.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.parent_uid": {"fullname": "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.parent_uid", "modulename": "pypamguard.modules.plugins.spermwhaleipi", "qualname": "SpermWhaleIPI.parent_uid", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int64"}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi": {"fullname": "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi", "modulename": "pypamguard.modules.plugins.spermwhaleipi", "qualname": "SpermWhaleIPI.ipi", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi_amplitude": {"fullname": "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi_amplitude", "modulename": "pypamguard.modules.plugins.spermwhaleipi", "qualname": "SpermWhaleIPI.ipi_amplitude", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.sample_rate": {"fullname": "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.sample_rate", "modulename": "pypamguard.modules.plugins.spermwhaleipi", "qualname": "SpermWhaleIPI.sample_rate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.max_val": {"fullname": "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.max_val", "modulename": "pypamguard.modules.plugins.spermwhaleipi", "qualname": "SpermWhaleIPI.max_val", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_len": {"fullname": "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_len", "modulename": "pypamguard.modules.plugins.spermwhaleipi", "qualname": "SpermWhaleIPI.echo_len", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int32"}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_data": {"fullname": "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_data", "modulename": "pypamguard.modules.plugins.spermwhaleipi", "qualname": "SpermWhaleIPI.echo_data", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "pypamguard.modules.processing": {"fullname": "pypamguard.modules.processing", "modulename": "pypamguard.modules.processing", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.processing.ais": {"fullname": "pypamguard.modules.processing.ais", "modulename": "pypamguard.modules.processing.ais", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.processing.ais.AISProcessing": {"fullname": "pypamguard.modules.processing.ais.AISProcessing", "modulename": "pypamguard.modules.processing.ais", "qualname": "AISProcessing", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmodule.StandardModule"}, "pypamguard.modules.processing.ais.AISProcessing.__init__": {"fullname": "pypamguard.modules.processing.ais.AISProcessing.__init__", "modulename": "pypamguard.modules.processing.ais", "qualname": "AISProcessing.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.modules.processing.ais.AISProcessing.mmsi_number": {"fullname": "pypamguard.modules.processing.ais.AISProcessing.mmsi_number", "modulename": "pypamguard.modules.processing.ais", "qualname": "AISProcessing.mmsi_number", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int32"}, "pypamguard.modules.processing.ais.AISProcessing.fill_bits": {"fullname": "pypamguard.modules.processing.ais.AISProcessing.fill_bits", "modulename": "pypamguard.modules.processing.ais", "qualname": "AISProcessing.fill_bits", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int16"}, "pypamguard.modules.processing.ais.AISProcessing.char_data": {"fullname": "pypamguard.modules.processing.ais.AISProcessing.char_data", "modulename": "pypamguard.modules.processing.ais", "qualname": "AISProcessing.char_data", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "pypamguard.modules.processing.ais.AISProcessing.ais_channel": {"fullname": "pypamguard.modules.processing.ais.AISProcessing.ais_channel", "modulename": "pypamguard.modules.processing.ais", "qualname": "AISProcessing.ais_channel", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "pypamguard.modules.processing.clipgenerator": {"fullname": "pypamguard.modules.processing.clipgenerator", "modulename": "pypamguard.modules.processing.clipgenerator", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"fullname": "pypamguard.modules.processing.clipgenerator.ClipGenerator", "modulename": "pypamguard.modules.processing.clipgenerator", "qualname": "ClipGenerator", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmodule.StandardModule"}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.__init__": {"fullname": "pypamguard.modules.processing.clipgenerator.ClipGenerator.__init__", "modulename": "pypamguard.modules.processing.clipgenerator", "qualname": "ClipGenerator.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_millis": {"fullname": "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_millis", "modulename": "pypamguard.modules.processing.clipgenerator", "qualname": "ClipGenerator.trigger_millis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int64"}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.file_name": {"fullname": "pypamguard.modules.processing.clipgenerator.ClipGenerator.file_name", "modulename": "pypamguard.modules.processing.clipgenerator", "qualname": "ClipGenerator.file_name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_name": {"fullname": "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_name", "modulename": "pypamguard.modules.processing.clipgenerator", "qualname": "ClipGenerator.trigger_name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_uid": {"fullname": "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_uid", "modulename": "pypamguard.modules.processing.clipgenerator", "qualname": "ClipGenerator.trigger_uid", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int64"}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_chan": {"fullname": "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_chan", "modulename": "pypamguard.modules.processing.clipgenerator", "qualname": "ClipGenerator.n_chan", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int16"}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_samps": {"fullname": "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_samps", "modulename": "pypamguard.modules.processing.clipgenerator", "qualname": "ClipGenerator.n_samps", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int32"}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.scale": {"fullname": "pypamguard.modules.processing.clipgenerator.ClipGenerator.scale", "modulename": "pypamguard.modules.processing.clipgenerator", "qualname": "ClipGenerator.scale", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.wave": {"fullname": "pypamguard.modules.processing.clipgenerator.ClipGenerator.wave", "modulename": "pypamguard.modules.processing.clipgenerator", "qualname": "ClipGenerator.wave", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[numpy.floating]"}, "pypamguard.modules.processing.dbht": {"fullname": "pypamguard.modules.processing.dbht", "modulename": "pypamguard.modules.processing.dbht", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"fullname": "pypamguard.modules.processing.dbht.DbHtProcessing", "modulename": "pypamguard.modules.processing.dbht", "qualname": "DbHtProcessing", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmodule.StandardModule"}, "pypamguard.modules.processing.dbht.DbHtProcessing.__init__": {"fullname": "pypamguard.modules.processing.dbht.DbHtProcessing.__init__", "modulename": "pypamguard.modules.processing.dbht", "qualname": "DbHtProcessing.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.modules.processing.dbht.DbHtProcessing.rms": {"fullname": "pypamguard.modules.processing.dbht.DbHtProcessing.rms", "modulename": "pypamguard.modules.processing.dbht", "qualname": "DbHtProcessing.rms", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.processing.dbht.DbHtProcessing.zero_peak": {"fullname": "pypamguard.modules.processing.dbht.DbHtProcessing.zero_peak", "modulename": "pypamguard.modules.processing.dbht", "qualname": "DbHtProcessing.zero_peak", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.processing.dbht.DbHtProcessing.peak_peak": {"fullname": "pypamguard.modules.processing.dbht.DbHtProcessing.peak_peak", "modulename": "pypamguard.modules.processing.dbht", "qualname": "DbHtProcessing.peak_peak", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.processing.difar": {"fullname": "pypamguard.modules.processing.difar", "modulename": "pypamguard.modules.processing.difar", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.processing.difar.DIFARProcessing": {"fullname": "pypamguard.modules.processing.difar.DIFARProcessing", "modulename": "pypamguard.modules.processing.difar", "qualname": "DIFARProcessing", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmodule.StandardModule"}, "pypamguard.modules.processing.difar.DIFARProcessing.__init__": {"fullname": "pypamguard.modules.processing.difar.DIFARProcessing.__init__", "modulename": "pypamguard.modules.processing.difar", "qualname": "DIFARProcessing.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.modules.processing.difar.DIFARProcessing.clip_start": {"fullname": "pypamguard.modules.processing.difar.DIFARProcessing.clip_start", "modulename": "pypamguard.modules.processing.difar", "qualname": "DIFARProcessing.clip_start", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int16"}, "pypamguard.modules.processing.difar.DIFARProcessing.display_sample_rate": {"fullname": "pypamguard.modules.processing.difar.DIFARProcessing.display_sample_rate", "modulename": "pypamguard.modules.processing.difar", "qualname": "DIFARProcessing.display_sample_rate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.processing.difar.DIFARProcessing.demuxed_length": {"fullname": "pypamguard.modules.processing.difar.DIFARProcessing.demuxed_length", "modulename": "pypamguard.modules.processing.difar", "qualname": "DIFARProcessing.demuxed_length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int32"}, "pypamguard.modules.processing.difar.DIFARProcessing.amplitude": {"fullname": "pypamguard.modules.processing.difar.DIFARProcessing.amplitude", "modulename": "pypamguard.modules.processing.difar", "qualname": "DIFARProcessing.amplitude", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.processing.difar.DIFARProcessing.gain": {"fullname": "pypamguard.modules.processing.difar.DIFARProcessing.gain", "modulename": "pypamguard.modules.processing.difar", "qualname": "DIFARProcessing.gain", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_angle": {"fullname": "pypamguard.modules.processing.difar.DIFARProcessing.sel_angle", "modulename": "pypamguard.modules.processing.difar", "qualname": "DIFARProcessing.sel_angle", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_freq": {"fullname": "pypamguard.modules.processing.difar.DIFARProcessing.sel_freq", "modulename": "pypamguard.modules.processing.difar", "qualname": "DIFARProcessing.sel_freq", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.processing.difar.DIFARProcessing.species_code": {"fullname": "pypamguard.modules.processing.difar.DIFARProcessing.species_code", "modulename": "pypamguard.modules.processing.difar", "qualname": "DIFARProcessing.species_code", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "pypamguard.modules.processing.difar.DIFARProcessing.tracked_group": {"fullname": "pypamguard.modules.processing.difar.DIFARProcessing.tracked_group", "modulename": "pypamguard.modules.processing.difar", "qualname": "DIFARProcessing.tracked_group", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "pypamguard.modules.processing.difar.DIFARProcessing.max_val": {"fullname": "pypamguard.modules.processing.difar.DIFARProcessing.max_val", "modulename": "pypamguard.modules.processing.difar", "qualname": "DIFARProcessing.max_val", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.processing.difar.DIFARProcessing.demux_data": {"fullname": "pypamguard.modules.processing.difar.DIFARProcessing.demux_data", "modulename": "pypamguard.modules.processing.difar", "qualname": "DIFARProcessing.demux_data", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "pypamguard.modules.processing.difar.DIFARProcessing.num_matches": {"fullname": "pypamguard.modules.processing.difar.DIFARProcessing.num_matches", "modulename": "pypamguard.modules.processing.difar", "qualname": "DIFARProcessing.num_matches", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int16"}, "pypamguard.modules.processing.difar.DIFARProcessing.latitude": {"fullname": "pypamguard.modules.processing.difar.DIFARProcessing.latitude", "modulename": "pypamguard.modules.processing.difar", "qualname": "DIFARProcessing.latitude", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.processing.difar.DIFARProcessing.longitude": {"fullname": "pypamguard.modules.processing.difar.DIFARProcessing.longitude", "modulename": "pypamguard.modules.processing.difar", "qualname": "DIFARProcessing.longitude", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.processing.difar.DIFARProcessing.errors": {"fullname": "pypamguard.modules.processing.difar.DIFARProcessing.errors", "modulename": "pypamguard.modules.processing.difar", "qualname": "DIFARProcessing.errors", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "pypamguard.modules.processing.ishmael": {"fullname": "pypamguard.modules.processing.ishmael", "modulename": "pypamguard.modules.processing.ishmael", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"fullname": "pypamguard.modules.processing.ishmael.IshmaelDetections", "modulename": "pypamguard.modules.processing.ishmael", "qualname": "IshmaelDetections", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmodule.StandardModule"}, "pypamguard.modules.processing.ishmael.IshmaelDetections.__init__": {"fullname": "pypamguard.modules.processing.ishmael.IshmaelDetections.__init__", "modulename": "pypamguard.modules.processing.ishmael", "qualname": "IshmaelDetections.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.modules.processing.ishmael.IshmaelDetections.peak_height": {"fullname": "pypamguard.modules.processing.ishmael.IshmaelDetections.peak_height", "modulename": "pypamguard.modules.processing.ishmael", "qualname": "IshmaelDetections.peak_height", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float64"}, "pypamguard.modules.processing.ishmael.IshmaelDetections.time_sample": {"fullname": "pypamguard.modules.processing.ishmael.IshmaelDetections.time_sample", "modulename": "pypamguard.modules.processing.ishmael", "qualname": "IshmaelDetections.time_sample", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float64"}, "pypamguard.modules.processing.ishmael.IshmaelData": {"fullname": "pypamguard.modules.processing.ishmael.IshmaelData", "modulename": "pypamguard.modules.processing.ishmael", "qualname": "IshmaelData", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmodule.StandardModule"}, "pypamguard.modules.processing.longtermspectralaverage": {"fullname": "pypamguard.modules.processing.longtermspectralaverage", "modulename": "pypamguard.modules.processing.longtermspectralaverage", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"fullname": "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader", "modulename": "pypamguard.modules.processing.longtermspectralaverage", "qualname": "LongTermSpectralAverageHeader", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmoduleheader.StandardModuleHeader"}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader.__init__": {"fullname": "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader.__init__", "modulename": "pypamguard.modules.processing.longtermspectralaverage", "qualname": "LongTermSpectralAverageHeader.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"fullname": "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage", "modulename": "pypamguard.modules.processing.longtermspectralaverage", "qualname": "LongTermSpectralAverage", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmodule.StandardModule"}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.__init__": {"fullname": "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.__init__", "modulename": "pypamguard.modules.processing.longtermspectralaverage", "qualname": "LongTermSpectralAverage.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.a": {"fullname": "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.a", "modulename": "pypamguard.modules.processing.longtermspectralaverage", "qualname": "LongTermSpectralAverage.a", "kind": "variable", "doc": "<p></p>\n", "default_value": "np.float64(24.429707732173224)"}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.b": {"fullname": "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.b", "modulename": "pypamguard.modules.processing.longtermspectralaverage", "qualname": "LongTermSpectralAverage.b", "kind": "variable", "doc": "<p></p>\n", "default_value": "-127"}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_millis": {"fullname": "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_millis", "modulename": "pypamguard.modules.processing.longtermspectralaverage", "qualname": "LongTermSpectralAverage.end_millis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"fullname": "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date", "modulename": "pypamguard.modules.processing.longtermspectralaverage", "qualname": "LongTermSpectralAverage.end_date", "kind": "variable", "doc": "<p></p>\n", "annotation": ": &lt;module &#x27;datetime&#x27; from &#x27;/usr/lib/python3.12/datetime.py&#x27;&gt;"}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.n_fft": {"fullname": "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.n_fft", "modulename": "pypamguard.modules.processing.longtermspectralaverage", "qualname": "LongTermSpectralAverage.n_fft", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int32"}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.max_val": {"fullname": "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.max_val", "modulename": "pypamguard.modules.processing.longtermspectralaverage", "qualname": "LongTermSpectralAverage.max_val", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.float32"}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.bytes_data": {"fullname": "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.bytes_data", "modulename": "pypamguard.modules.processing.longtermspectralaverage", "qualname": "LongTermSpectralAverage.bytes_data", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.data": {"fullname": "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.data", "modulename": "pypamguard.modules.processing.longtermspectralaverage", "qualname": "LongTermSpectralAverage.data", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "pypamguard.modules.processing.noiseband": {"fullname": "pypamguard.modules.processing.noiseband", "modulename": "pypamguard.modules.processing.noiseband", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"fullname": "pypamguard.modules.processing.noiseband.NoiseBandMonitor", "modulename": "pypamguard.modules.processing.noiseband", "qualname": "NoiseBandMonitor", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmodule.StandardModule"}, "pypamguard.modules.processing.noisemonitor": {"fullname": "pypamguard.modules.processing.noisemonitor", "modulename": "pypamguard.modules.processing.noisemonitor", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"fullname": "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader", "modulename": "pypamguard.modules.processing.noisemonitor", "qualname": "NoiseMonitorHeader", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmoduleheader.StandardModuleHeader"}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.__init__": {"fullname": "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.__init__", "modulename": "pypamguard.modules.processing.noisemonitor", "qualname": "NoiseMonitorHeader.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.n_bands": {"fullname": "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.n_bands", "modulename": "pypamguard.modules.processing.noisemonitor", "qualname": "NoiseMonitorHeader.n_bands", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int16"}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.stats_types": {"fullname": "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.stats_types", "modulename": "pypamguard.modules.processing.noisemonitor", "qualname": "NoiseMonitorHeader.stats_types", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int16"}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.lo_edges": {"fullname": "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.lo_edges", "modulename": "pypamguard.modules.processing.noisemonitor", "qualname": "NoiseMonitorHeader.lo_edges", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.hi_edges": {"fullname": "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.hi_edges", "modulename": "pypamguard.modules.processing.noisemonitor", "qualname": "NoiseMonitorHeader.hi_edges", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"fullname": "pypamguard.modules.processing.noisemonitor.NoiseMonitor", "modulename": "pypamguard.modules.processing.noisemonitor", "qualname": "NoiseMonitor", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.standard.stdmodule.StandardModule"}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.__init__": {"fullname": "pypamguard.modules.processing.noisemonitor.NoiseMonitor.__init__", "modulename": "pypamguard.modules.processing.noisemonitor", "qualname": "NoiseMonitor.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.i_chan": {"fullname": "pypamguard.modules.processing.noisemonitor.NoiseMonitor.i_chan", "modulename": "pypamguard.modules.processing.noisemonitor", "qualname": "NoiseMonitor.i_chan", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int16"}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_bands": {"fullname": "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_bands", "modulename": "pypamguard.modules.processing.noisemonitor", "qualname": "NoiseMonitor.n_bands", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int16"}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_measures": {"fullname": "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_measures", "modulename": "pypamguard.modules.processing.noisemonitor", "qualname": "NoiseMonitor.n_measures", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int16"}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.noise": {"fullname": "pypamguard.modules.processing.noisemonitor.NoiseMonitor.noise", "modulename": "pypamguard.modules.processing.noisemonitor", "qualname": "NoiseMonitor.noise", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray"}, "pypamguard.standard": {"fullname": "pypamguard.standard", "modulename": "pypamguard.standard", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.standard.stdbackground": {"fullname": "pypamguard.standard.stdbackground", "modulename": "pypamguard.standard.stdbackground", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.standard.stdbackground.StandardBackground": {"fullname": "pypamguard.standard.stdbackground.StandardBackground", "modulename": "pypamguard.standard.stdbackground", "qualname": "StandardBackground", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.generics.genbackground.GenericBackground, pypamguard.standard.stddata.StandardDataMixin"}, "pypamguard.standard.stdbackground.StandardBackground.__init__": {"fullname": "pypamguard.standard.stdbackground.StandardBackground.__init__", "modulename": "pypamguard.standard.stdbackground", "qualname": "StandardBackground.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_header</span>, </span><span class=\"param\"><span class=\"n\">module_header</span>, </span><span class=\"param\"><span class=\"n\">filters</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.standard.stdchunkinfo": {"fullname": "pypamguard.standard.stdchunkinfo", "modulename": "pypamguard.standard.stdchunkinfo", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"fullname": "pypamguard.standard.stdchunkinfo.StandardChunkInfo", "modulename": "pypamguard.standard.stdchunkinfo", "qualname": "StandardChunkInfo", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.generics.genchunkinfo.GenericChunkInfo"}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.__init__": {"fullname": "pypamguard.standard.stdchunkinfo.StandardChunkInfo.__init__", "modulename": "pypamguard.standard.stdchunkinfo", "qualname": "StandardChunkInfo.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.length": {"fullname": "pypamguard.standard.stdchunkinfo.StandardChunkInfo.length", "modulename": "pypamguard.standard.stdchunkinfo", "qualname": "StandardChunkInfo.length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.identifier": {"fullname": "pypamguard.standard.stdchunkinfo.StandardChunkInfo.identifier", "modulename": "pypamguard.standard.stdchunkinfo", "qualname": "StandardChunkInfo.identifier", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.standard.stddata": {"fullname": "pypamguard.standard.stddata", "modulename": "pypamguard.standard.stddata", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"fullname": "pypamguard.standard.stddata.DATA_FLAG_FIELDS", "modulename": "pypamguard.standard.stddata", "qualname": "DATA_FLAG_FIELDS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;TIMEMILLISECONDS&#x27;, &#x27;TIMENANOSECONDS&#x27;, &#x27;CHANNELMAP&#x27;, &#x27;UID&#x27;, &#x27;STARTSAMPLE&#x27;, &#x27;SAMPLEDURATION&#x27;, &#x27;FREQUENCYLIMITS&#x27;, &#x27;MILLISDURATION&#x27;, &#x27;TIMEDELAYSECONDS&#x27;, &#x27;HASBINARYANNOTATIONS&#x27;, &#x27;HASSEQUENCEMAP&#x27;, &#x27;HASNOISE&#x27;, &#x27;HASSIGNAL&#x27;, &#x27;HASSIGNALEXCESS&#x27;]"}, "pypamguard.standard.stddata.StandardDataMixin": {"fullname": "pypamguard.standard.stddata.StandardDataMixin", "modulename": "pypamguard.standard.stddata", "qualname": "StandardDataMixin", "kind": "class", "doc": "<p></p>\n"}, "pypamguard.standard.stdfilefooter": {"fullname": "pypamguard.standard.stdfilefooter", "modulename": "pypamguard.standard.stdfilefooter", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.standard.stdfilefooter.StandardFileFooter": {"fullname": "pypamguard.standard.stdfilefooter.StandardFileFooter", "modulename": "pypamguard.standard.stdfilefooter", "qualname": "StandardFileFooter", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.generics.genfilefooter.GenericFileFooter"}, "pypamguard.standard.stdfilefooter.StandardFileFooter.__init__": {"fullname": "pypamguard.standard.stdfilefooter.StandardFileFooter.__init__", "modulename": "pypamguard.standard.stdfilefooter", "qualname": "StandardFileFooter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_header</span><span class=\"p\">:</span> <span class=\"n\">pypamguard</span><span class=\"o\">.</span><span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">genfileheader</span><span class=\"o\">.</span><span class=\"n\">GenericFileHeader</span></span>)</span>"}, "pypamguard.standard.stdfilefooter.StandardFileFooter.n_objects": {"fullname": "pypamguard.standard.stdfilefooter.StandardFileFooter.n_objects", "modulename": "pypamguard.standard.stdfilefooter", "qualname": "StandardFileFooter.n_objects", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date_raw": {"fullname": "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date_raw", "modulename": "pypamguard.standard.stdfilefooter", "qualname": "StandardFileFooter.data_date_raw", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int64"}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date": {"fullname": "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date", "modulename": "pypamguard.standard.stdfilefooter", "qualname": "StandardFileFooter.data_date", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime"}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date_raw": {"fullname": "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date_raw", "modulename": "pypamguard.standard.stdfilefooter", "qualname": "StandardFileFooter.analysis_date_raw", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int64"}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date": {"fullname": "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date", "modulename": "pypamguard.standard.stdfilefooter", "qualname": "StandardFileFooter.analysis_date", "kind": "variable", "doc": "<p></p>\n", "annotation": ": datetime.datetime"}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_sample": {"fullname": "pypamguard.standard.stdfilefooter.StandardFileFooter.end_sample", "modulename": "pypamguard.standard.stdfilefooter", "qualname": "StandardFileFooter.end_sample", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int64"}, "pypamguard.standard.stdfilefooter.StandardFileFooter.lowest_uid": {"fullname": "pypamguard.standard.stdfilefooter.StandardFileFooter.lowest_uid", "modulename": "pypamguard.standard.stdfilefooter", "qualname": "StandardFileFooter.lowest_uid", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int64"}, "pypamguard.standard.stdfilefooter.StandardFileFooter.highest_uid": {"fullname": "pypamguard.standard.stdfilefooter.StandardFileFooter.highest_uid", "modulename": "pypamguard.standard.stdfilefooter", "qualname": "StandardFileFooter.highest_uid", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int64"}, "pypamguard.standard.stdfilefooter.StandardFileFooter.file_length": {"fullname": "pypamguard.standard.stdfilefooter.StandardFileFooter.file_length", "modulename": "pypamguard.standard.stdfilefooter", "qualname": "StandardFileFooter.file_length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int64"}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_reason": {"fullname": "pypamguard.standard.stdfilefooter.StandardFileFooter.end_reason", "modulename": "pypamguard.standard.stdfilefooter", "qualname": "StandardFileFooter.end_reason", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.int32"}, "pypamguard.standard.stdfileheader": {"fullname": "pypamguard.standard.stdfileheader", "modulename": "pypamguard.standard.stdfileheader", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.standard.stdfileheader.StandardFileHeader": {"fullname": "pypamguard.standard.stdfileheader.StandardFileHeader", "modulename": "pypamguard.standard.stdfileheader", "qualname": "StandardFileHeader", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.generics.genfileheader.GenericFileHeader"}, "pypamguard.standard.stdfileheader.StandardFileHeader.__init__": {"fullname": "pypamguard.standard.stdfileheader.StandardFileHeader.__init__", "modulename": "pypamguard.standard.stdfileheader", "qualname": "StandardFileHeader.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.standard.stdmodule": {"fullname": "pypamguard.standard.stdmodule", "modulename": "pypamguard.standard.stdmodule", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.standard.stdmodule.StandardModule": {"fullname": "pypamguard.standard.stdmodule.StandardModule", "modulename": "pypamguard.standard.stdmodule", "qualname": "StandardModule", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.generics.genmodule.GenericModule, pypamguard.standard.stddata.StandardDataMixin"}, "pypamguard.standard.stdmodule.StandardModule.__init__": {"fullname": "pypamguard.standard.stdmodule.StandardModule.__init__", "modulename": "pypamguard.standard.stdmodule", "qualname": "StandardModule.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_header</span>, </span><span class=\"param\"><span class=\"n\">module_header</span>, </span><span class=\"param\"><span class=\"n\">filters</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.standard.stdmodulefooter": {"fullname": "pypamguard.standard.stdmodulefooter", "modulename": "pypamguard.standard.stdmodulefooter", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"fullname": "pypamguard.standard.stdmodulefooter.StandardModuleFooter", "modulename": "pypamguard.standard.stdmodulefooter", "qualname": "StandardModuleFooter", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.generics.genmodulefooter.GenericModuleFooter"}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.__init__": {"fullname": "pypamguard.standard.stdmodulefooter.StandardModuleFooter.__init__", "modulename": "pypamguard.standard.stdmodulefooter", "qualname": "StandardModuleFooter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_header</span>, </span><span class=\"param\"><span class=\"n\">module_header</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.length": {"fullname": "pypamguard.standard.stdmodulefooter.StandardModuleFooter.length", "modulename": "pypamguard.standard.stdmodulefooter", "qualname": "StandardModuleFooter.length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.identifier": {"fullname": "pypamguard.standard.stdmodulefooter.StandardModuleFooter.identifier", "modulename": "pypamguard.standard.stdmodulefooter", "qualname": "StandardModuleFooter.identifier", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.binary_length": {"fullname": "pypamguard.standard.stdmodulefooter.StandardModuleFooter.binary_length", "modulename": "pypamguard.standard.stdmodulefooter", "qualname": "StandardModuleFooter.binary_length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.standard.stdmoduleheader": {"fullname": "pypamguard.standard.stdmoduleheader", "modulename": "pypamguard.standard.stdmoduleheader", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"fullname": "pypamguard.standard.stdmoduleheader.StandardModuleHeader", "modulename": "pypamguard.standard.stdmoduleheader", "qualname": "StandardModuleHeader", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "pypamguard.generics.genmoduleheader.GenericModuleHeader"}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.__init__": {"fullname": "pypamguard.standard.stdmoduleheader.StandardModuleHeader.__init__", "modulename": "pypamguard.standard.stdmoduleheader", "qualname": "StandardModuleHeader.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_header</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.length": {"fullname": "pypamguard.standard.stdmoduleheader.StandardModuleHeader.length", "modulename": "pypamguard.standard.stdmoduleheader", "qualname": "StandardModuleHeader.length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.identifier": {"fullname": "pypamguard.standard.stdmoduleheader.StandardModuleHeader.identifier", "modulename": "pypamguard.standard.stdmoduleheader", "qualname": "StandardModuleHeader.identifier", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.version": {"fullname": "pypamguard.standard.stdmoduleheader.StandardModuleHeader.version", "modulename": "pypamguard.standard.stdmoduleheader", "qualname": "StandardModuleHeader.version", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.binary_length": {"fullname": "pypamguard.standard.stdmoduleheader.StandardModuleHeader.binary_length", "modulename": "pypamguard.standard.stdmoduleheader", "qualname": "StandardModuleHeader.binary_length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "pypamguard.utils": {"fullname": "pypamguard.utils", "modulename": "pypamguard.utils", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.utils.annotations": {"fullname": "pypamguard.utils.annotations", "modulename": "pypamguard.utils.annotations", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.utils.annotations.read_beam_former_annotation": {"fullname": "pypamguard.utils.annotations.read_beam_former_annotation", "modulename": "pypamguard.utils.annotations", "qualname": "read_beam_former_annotation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.utils.annotations.read_bearing_annotation": {"fullname": "pypamguard.utils.annotations.read_bearing_annotation", "modulename": "pypamguard.utils.annotations", "qualname": "read_bearing_annotation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">annotation_version</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.utils.bitmap": {"fullname": "pypamguard.utils.bitmap", "modulename": "pypamguard.utils.bitmap", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.utils.bitmap.Bitmap": {"fullname": "pypamguard.utils.bitmap.Bitmap", "modulename": "pypamguard.utils.bitmap", "qualname": "Bitmap", "kind": "class", "doc": "<p></p>\n"}, "pypamguard.utils.bitmap.Bitmap.__init__": {"fullname": "pypamguard.utils.bitmap.Bitmap.__init__", "modulename": "pypamguard.utils.bitmap", "qualname": "Bitmap.__init__", "kind": "function", "doc": "<p>A class that represents a [labelled] bitmap. A bitmap\nis labelled when a list of fields is provided and each\nbit corresponds to a field.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>size</strong>:  the number of bytes in the bitmap</li>\n<li><strong>fields</strong>:  a list of fields to label the bitmap from least significant to most significant.\n(defaults to None, in which case the bitmap is unlabelled and each bit corresponds only to an index)</li>\n<li><strong>value</strong>:  the initial value of the bitmap (defaults to 0)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">fields</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span>)</span>"}, "pypamguard.utils.bitmap.Bitmap.fields2index": {"fullname": "pypamguard.utils.bitmap.Bitmap.fields2index", "modulename": "pypamguard.utils.bitmap", "qualname": "Bitmap.fields2index", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.utils.bitmap.Bitmap.index2fields": {"fullname": "pypamguard.utils.bitmap.Bitmap.index2fields", "modulename": "pypamguard.utils.bitmap", "qualname": "Bitmap.index2fields", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.utils.bitmap.Bitmap.size": {"fullname": "pypamguard.utils.bitmap.Bitmap.size", "modulename": "pypamguard.utils.bitmap", "qualname": "Bitmap.size", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.utils.bitmap.Bitmap.bits": {"fullname": "pypamguard.utils.bitmap.Bitmap.bits", "modulename": "pypamguard.utils.bitmap", "qualname": "Bitmap.bits", "kind": "variable", "doc": "<p></p>\n"}, "pypamguard.utils.bitmap.Bitmap.set": {"fullname": "pypamguard.utils.bitmap.Bitmap.set", "modulename": "pypamguard.utils.bitmap", "qualname": "Bitmap.set", "kind": "function", "doc": "<p>Sets the field or index in the bitmap.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">field_or_index</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.utils.bitmap.Bitmap.clear": {"fullname": "pypamguard.utils.bitmap.Bitmap.clear", "modulename": "pypamguard.utils.bitmap", "qualname": "Bitmap.clear", "kind": "function", "doc": "<p>Clears the field or index in the bitmap.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">field_or_index</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.utils.bitmap.Bitmap.is_set": {"fullname": "pypamguard.utils.bitmap.Bitmap.is_set", "modulename": "pypamguard.utils.bitmap", "qualname": "Bitmap.is_set", "kind": "function", "doc": "<p>Returns True if the field or index is set in the bitmap.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">field_or_index</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"fullname": "pypamguard.utils.bitmap.Bitmap.get_set_bits", "modulename": "pypamguard.utils.bitmap", "qualname": "Bitmap.get_set_bits", "kind": "function", "doc": "<p>Returns a list of fields or indices that are set in the bitmap.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.utils.bitmap.Bitmap.get_binary_representation": {"fullname": "pypamguard.utils.bitmap.Bitmap.get_binary_representation", "modulename": "pypamguard.utils.bitmap", "qualname": "Bitmap.get_binary_representation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "pypamguard.utils.constants": {"fullname": "pypamguard.utils.constants", "modulename": "pypamguard.utils.constants", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.utils.constants.TIME_RANGE": {"fullname": "pypamguard.utils.constants.TIME_RANGE", "modulename": "pypamguard.utils.constants", "qualname": "TIME_RANGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;timerange&#x27;"}, "pypamguard.utils.constants.UID_RANGE": {"fullname": "pypamguard.utils.constants.UID_RANGE", "modulename": "pypamguard.utils.constants", "qualname": "UID_RANGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;uidrange&#x27;"}, "pypamguard.utils.constants.UID_LIST": {"fullname": "pypamguard.utils.constants.UID_LIST", "modulename": "pypamguard.utils.constants", "qualname": "UID_LIST", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;uidlist&#x27;"}, "pypamguard.utils.constants.FILTER": {"fullname": "pypamguard.utils.constants.FILTER", "modulename": "pypamguard.utils.constants", "qualname": "FILTER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;filter&#x27;"}, "pypamguard.utils.constants.CHANNEL": {"fullname": "pypamguard.utils.constants.CHANNEL", "modulename": "pypamguard.utils.constants", "qualname": "CHANNEL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;channel&#x27;"}, "pypamguard.utils.constants.DEFAULT_BUFFER_SIZE": {"fullname": "pypamguard.utils.constants.DEFAULT_BUFFER_SIZE", "modulename": "pypamguard.utils.constants", "qualname": "DEFAULT_BUFFER_SIZE", "kind": "variable", "doc": "<p></p>\n", "default_value": "1024"}, "pypamguard.utils.constants.BYTE_ORDERS": {"fullname": "pypamguard.utils.constants.BYTE_ORDERS", "modulename": "pypamguard.utils.constants", "qualname": "BYTE_ORDERS", "kind": "class", "doc": "<p></p>\n", "bases": "enum.Enum"}, "pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"fullname": "pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN", "modulename": "pypamguard.utils.constants", "qualname": "BYTE_ORDERS.LITTLE_ENDIAN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;BYTE_ORDERS.LITTLE_ENDIAN: &#x27;&lt;&#x27;&gt;"}, "pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"fullname": "pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN", "modulename": "pypamguard.utils.constants", "qualname": "BYTE_ORDERS.BIG_ENDIAN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;BYTE_ORDERS.BIG_ENDIAN: &#x27;&gt;&#x27;&gt;"}, "pypamguard.utils.constants.IdentifierType": {"fullname": "pypamguard.utils.constants.IdentifierType", "modulename": "pypamguard.utils.constants", "qualname": "IdentifierType", "kind": "class", "doc": "<p></p>\n", "bases": "enum.Enum"}, "pypamguard.utils.constants.IdentifierType.FILE_HEADER": {"fullname": "pypamguard.utils.constants.IdentifierType.FILE_HEADER", "modulename": "pypamguard.utils.constants", "qualname": "IdentifierType.FILE_HEADER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;IdentifierType.FILE_HEADER: -1&gt;"}, "pypamguard.utils.constants.IdentifierType.FILE_FOOTER": {"fullname": "pypamguard.utils.constants.IdentifierType.FILE_FOOTER", "modulename": "pypamguard.utils.constants", "qualname": "IdentifierType.FILE_FOOTER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;IdentifierType.FILE_FOOTER: -2&gt;"}, "pypamguard.utils.constants.IdentifierType.MODULE_HEADER": {"fullname": "pypamguard.utils.constants.IdentifierType.MODULE_HEADER", "modulename": "pypamguard.utils.constants", "qualname": "IdentifierType.MODULE_HEADER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;IdentifierType.MODULE_HEADER: -3&gt;"}, "pypamguard.utils.constants.IdentifierType.MODULE_FOOTER": {"fullname": "pypamguard.utils.constants.IdentifierType.MODULE_FOOTER", "modulename": "pypamguard.utils.constants", "qualname": "IdentifierType.MODULE_FOOTER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;IdentifierType.MODULE_FOOTER: -4&gt;"}, "pypamguard.utils.constants.IdentifierType.IGNORE": {"fullname": "pypamguard.utils.constants.IdentifierType.IGNORE", "modulename": "pypamguard.utils.constants", "qualname": "IdentifierType.IGNORE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;IdentifierType.IGNORE: -5&gt;"}, "pypamguard.utils.constants.IdentifierType.FILE_BACKGROUND": {"fullname": "pypamguard.utils.constants.IdentifierType.FILE_BACKGROUND", "modulename": "pypamguard.utils.constants", "qualname": "IdentifierType.FILE_BACKGROUND", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;IdentifierType.FILE_BACKGROUND: -6&gt;"}, "pypamguard.utils.serializer": {"fullname": "pypamguard.utils.serializer", "modulename": "pypamguard.utils.serializer", "kind": "module", "doc": "<p></p>\n"}, "pypamguard.utils.serializer.serialize": {"fullname": "pypamguard.utils.serializer.serialize", "modulename": "pypamguard.utils.serializer", "qualname": "serialize", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"pypamguard": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.base": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.base.chunk": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.base.chunk.BaseChunk": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 16}, "pypamguard.base.chunk.BaseChunk.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.base.chunk.BaseChunk.process": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 3}, "pypamguard.base.chunk.BaseChunk.get_attrs": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pypamguard.base.chunk.BaseChunk.signature": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "pypamguard.core": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.exceptions": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.exceptions.BinaryFileException": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 11}, "pypamguard.core.exceptions.BinaryFileException.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 3}, "pypamguard.core.exceptions.BinaryFileException.position": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.exceptions.WarningException": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 11}, "pypamguard.core.exceptions.WarningException.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 77, "bases": 0, "doc": 3}, "pypamguard.core.exceptions.WarningException.chunk_info": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.exceptions.WarningException.chunk": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.exceptions.ChunkLengthMismatch": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 11}, "pypamguard.core.exceptions.ChunkLengthMismatch.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 3}, "pypamguard.core.exceptions.CriticalException": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 11}, "pypamguard.core.exceptions.ModuleNotFoundException": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 11}, "pypamguard.core.exceptions.FileCorruptedException": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 11}, "pypamguard.core.exceptions.StructuralException": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 11}, "pypamguard.core.exceptions.StructuralException.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 3}, "pypamguard.core.exceptions.StructuralException.message": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.exceptions.NoFileHeaderException": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 11}, "pypamguard.core.exceptions.NoModuleHeaderException": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 11}, "pypamguard.core.exceptions.NoModuleFooterException": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 11}, "pypamguard.core.exceptions.NoFileFooterException": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 11}, "pypamguard.core.filters": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.filters.FilterMismatchException": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 26}, "pypamguard.core.filters.FILTER_POSITION": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "pypamguard.core.filters.FILTER_POSITION.SKIP": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.filters.FILTER_POSITION.KEEP": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.filters.FILTER_POSITION.STOP": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.filters.BaseFilter": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 8}, "pypamguard.core.filters.BaseFilter.check": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 29}, "pypamguard.core.filters.BaseFilter.from_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pypamguard.core.filters.WhitelistFilter": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 17}, "pypamguard.core.filters.WhitelistFilter.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 18}, "pypamguard.core.filters.WhitelistFilter.whitelist": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.filters.WhitelistFilter.check": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 29}, "pypamguard.core.filters.WhitelistFilter.from_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pypamguard.core.filters.RangeFilter": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "pypamguard.core.filters.RangeFilter.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 62, "bases": 0, "doc": 152}, "pypamguard.core.filters.RangeFilter.start": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.filters.RangeFilter.end": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.filters.RangeFilter.comparator": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.filters.RangeFilter.validation_func": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.filters.RangeFilter.ordered": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.filters.RangeFilter.ignore_none": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.filters.RangeFilter.default_comparator": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "pypamguard.core.filters.RangeFilter.check": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 29}, "pypamguard.core.filters.RangeFilter.from_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pypamguard.core.filters.DateFilter": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "pypamguard.core.filters.DateFilter.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 47}, "pypamguard.core.filters.DateFilter.ignore_timezone": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.filters.DateFilter.from_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pypamguard.core.filters.Filters": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.filters.Filters.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 3}, "pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 41, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.filters.Filters.position": {"qualname": 2, "fullname": 5, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.filters.Filters.add": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "pypamguard.core.filters.Filters.to_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pypamguard.core.filters.Filters.filter": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile.Report": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.core.pgbfile.Report.warnings": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile.Report.add_warning": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile.report": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile.mmap_file": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile.process_chunk1": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 184, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 184, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile.process_chunk": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile.PGBFile": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 9}, "pypamguard.core.pgbfile.PGBFile.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 209, "bases": 0, "doc": 59}, "pypamguard.core.pgbfile.PGBFile.total_time": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile.PGBFile.size": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile.PGBFile.file_header": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile.PGBFile.module_header": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile.PGBFile.module_footer": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile.PGBFile.file_footer": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile.PGBFile.filters": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile.PGBFile.module_class": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile.PGBFile.order": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile.PGBFile.path": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile.PGBFile.module_registry": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile.PGBFile.data": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile.PGBFile.load": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pypamguard.core.pgbfile.PGBFile.to_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pypamguard.core.readers": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.TypeFormat": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.TypeFormat.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "pypamguard.core.readers.TypeFormat.formatter": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.TypeFormat.size": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.DTYPES": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "pypamguard.core.readers.DTYPES.CHAR": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.DTYPES.UCHAR": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.DTYPES.SHORT": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.DTYPES.USHORT": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.DTYPES.INT": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.DTYPES.UINT": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.DTYPES.LONG": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.DTYPES.ULONG": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.DTYPES.FLOAT": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.DTYPES.DOUBLE": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.INTS": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "pypamguard.core.readers.INTS.CHAR": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.INTS.UCHAR": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.INTS.SHORT": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.INTS.USHORT": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.INTS.INT": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.INTS.UINT": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.INTS.LONG": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.INTS.ULONG": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.FLOATS": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "pypamguard.core.readers.FLOATS.FLOAT": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.FLOATS.DOUBLE": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.BinaryReader": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 16}, "pypamguard.core.readers.BinaryReader.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 41}, "pypamguard.core.readers.BinaryReader.as_helper": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.BinaryReader.var_name": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.BinaryReader.process": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 87, "bases": 0, "doc": 14}, "pypamguard.core.readers.BinaryReader.print": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "pypamguard.core.readers.NumericalBinaryReader": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 16}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 137, "bases": 0, "doc": 163}, "pypamguard.core.readers.NumericalBinaryReader.shape": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.NumericalBinaryReader.format": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.NumericalBinaryReader.post_processor": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.NumericalBinaryReader.process": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 96, "bases": 0, "doc": 14}, "pypamguard.core.readers.StringNBinaryReader": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 16}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 77, "bases": 0, "doc": 14}, "pypamguard.core.readers.StringNBinaryReader.length": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.StringNBinaryReader.post_processor": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.StringNBinaryReader.process": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 14}, "pypamguard.core.readers.StringBinaryReader": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 16}, "pypamguard.core.readers.StringBinaryReader.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 27}, "pypamguard.core.readers.StringBinaryReader.length_type": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.StringBinaryReader.process": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 14}, "pypamguard.core.readers.CustomBinaryReader": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 16}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 41}, "pypamguard.core.readers.CustomBinaryReader.function": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.CustomBinaryReader.count": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.CustomBinaryReader.process": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 14}, "pypamguard.core.readers.DateBinaryReader": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 5}, "pypamguard.core.readers.DateBinaryReader.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 41}, "pypamguard.core.readers.DateBinaryReader.process": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 14}, "pypamguard.core.readers.BitmapBinaryReader": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 16}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 65, "bases": 0, "doc": 41}, "pypamguard.core.readers.BitmapBinaryReader.format": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.BitmapBinaryReader.labels": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.BitmapBinaryReader.bm": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers.BitmapBinaryReader.process": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 14}, "pypamguard.core.readers_new": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.DTYPES": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "pypamguard.core.readers_new.DTYPES.INT8": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.DTYPES.UINT8": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.DTYPES.INT16": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.DTYPES.UINT16": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.DTYPES.INT32": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.DTYPES.UINT32": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.DTYPES.INT64": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.DTYPES.UINT64": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.DTYPES.FLOAT32": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.DTYPES.FLOAT64": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.Shape": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.Shape.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.Shape.shape": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.Shape.length": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.BinaryReader": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.BinaryReader.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.BinaryReader.fp": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.BinaryReader.set_endianess": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.BinaryReader.tell": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 141, "bases": 0, "doc": 530}, "pypamguard.core.readers_new.BinaryReader.millis_to_timestamp": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.BinaryReader.timestamp_read": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.BinaryReader.nstring_read": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.BinaryReader.string_read": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 81, "bases": 0, "doc": 3}, "pypamguard.core.registry": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.registry.ais_config": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 12, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.registry.click_config": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 31, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.registry.clipgenerator_config": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 12, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.registry.deeplearningclassifier_config": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 64, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.registry.dbht_config": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 12, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.registry.difar_config": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 12, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.registry.noisemonitor_config": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 12, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.registry.noiseband_config": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 12, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.registry.gpl_config": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 12, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.registry.rwedge_config": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 12, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.registry.whistleandmoan_config": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 12, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.registry.longtermspectralaverage_config": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 12, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.registry.ishmael_config": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 33, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.registry.spermwhaleipi_config": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 12, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.registry.geminithreshold_config": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 12, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.registry.MODULES": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 455, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.registry.module_metadata": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pypamguard.core.registry.ModuleRegistry": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.registry.ModuleRegistry.modules": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.registry.ModuleRegistry.register_module": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 16}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 16}, "pypamguard.core.registry.ModuleRegistry.get_module": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 3}, "pypamguard.core.registry.register_preinstalled_modules": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "pypamguard.core.serializable": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.core.serializable.Serializable": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 16}, "pypamguard.core.serializable.Serializable.serialize": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pypamguard.core.serializable.Serializable.to_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pypamguard.core.serializable.Serializable.from_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pypamguard.generics": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genbackground": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genbackground.GenericBackground": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 16}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 100, "bases": 0, "doc": 3}, "pypamguard.generics.genchunkinfo": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 16}, "pypamguard.generics.genchunkinfo.GenericChunkInfo.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.generics.genfilefooter": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 16}, "pypamguard.generics.genfilefooter.GenericFileFooter.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 3}, "pypamguard.generics.genfilefooter.GenericFileFooter.length": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genfilefooter.GenericFileFooter.identifier": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genfileheader": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genfileheader.GenericFileHeader": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 16}, "pypamguard.generics.genfileheader.GenericFileHeader.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.generics.genfileheader.GenericFileHeader.length": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genfileheader.GenericFileHeader.identifier": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genfileheader.GenericFileHeader.file_format": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genfileheader.GenericFileHeader.pamguard": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genfileheader.GenericFileHeader.version": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genfileheader.GenericFileHeader.branch": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genfileheader.GenericFileHeader.data_date": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genfileheader.GenericFileHeader.analysis_date": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genfileheader.GenericFileHeader.start_sample": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genfileheader.GenericFileHeader.module_type": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genfileheader.GenericFileHeader.module_name": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genfileheader.GenericFileHeader.stream_name": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genfileheader.GenericFileHeader.extra_info_len": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genmodule": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genmodule.GenericModule": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 16}, "pypamguard.generics.genmodule.GenericModule.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 100, "bases": 0, "doc": 3}, "pypamguard.generics.genmodulefooter": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 16}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 3}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.length": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.identifier": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genmoduleheader": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 16}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 3}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.length": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.identifier": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.load_pamguard_binary_file": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.load_pamguard_binary_file.timer": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 236, "bases": 0, "doc": 86}, "pypamguard.logger": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.logger.Verbosity": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "pypamguard.logger.Verbosity.CRITICAL": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.logger.Verbosity.ERROR": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.logger.Verbosity.WARNING": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.logger.Verbosity.INFO": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.logger.Verbosity.DEBUG": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.logger.logger_config": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "pypamguard.logger.Logger": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.logger.Logger.verbosity": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.logger.Logger.set_verbosity": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pypamguard.logger.Logger.info": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pypamguard.logger.Logger.debug": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pypamguard.logger.Logger.warning": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pypamguard.logger.Logger.error": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pypamguard.logger.logger": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.main": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.classifiers": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.classifiers.deeplearningclassifier": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.type": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.is_binary": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.scale": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_species": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.predictions": {"qualname": 2, "fullname": 6, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_class": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_chan": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_samps": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.scale": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.wave": {"qualname": 2, "fullname": 6, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.click": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.detectors.click.ClickDetectorFooter.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count_length": {"qualname": 4, "fullname": 8, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.noise_len": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.background": {"qualname": 2, "fullname": 6, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.click.ClickDetector": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.detectors.click.ClickDetector.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.click.ClickDetector.start_sample": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.click.ClickDetector.channel_map": {"qualname": 3, "fullname": 7, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.click.ClickDetector.trigger_map": {"qualname": 3, "fullname": 7, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.click.ClickDetector.type": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.click.ClickDetector.flags": {"qualname": 2, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.click.ClickDetector.delays": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.click.ClickDetector.angles": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.click.ClickDetector.angle_errors": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.click.ClickDetector.duration": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.click.ClickDetector.wave": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.clicktriggerbackground": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.scale": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.raw_levels": {"qualname": 3, "fullname": 7, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.gpl": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.gpl.GPLDetector": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.detectors.gpl.GPLDetector.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.rwedge": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.type": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.signal": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.noise": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.n_slices": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.slice_nums": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.lo_freqs": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_freqs": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.hi_freqs": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_amp": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.spectralbackground": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.first_bin": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.noise_len": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.background": {"qualname": 2, "fullname": 6, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.whistleandmoan": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.delay_scale": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_slices": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.amplitude": {"qualname": 2, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour_width": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.slice_numbers": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_peaks": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.peak_data": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_points": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_sonar": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_ids": {"qualname": 3, "fullname": 7, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.straight_length": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.wobbly_length": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.mean_occupancy": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.time_millis": {"qualname": 3, "fullname": 7, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_id": {"qualname": 3, "fullname": 7, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_bearing": {"qualname": 3, "fullname": 7, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_bearing": {"qualname": 3, "fullname": 7, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_bearing": {"qualname": 3, "fullname": 7, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_range": {"qualname": 3, "fullname": 7, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_range": {"qualname": 3, "fullname": 7, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_range": {"qualname": 3, "fullname": 7, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.obj_size": {"qualname": 3, "fullname": 7, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.occupancy": {"qualname": 2, "fullname": 6, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.ave_value": {"qualname": 3, "fullname": 7, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.tot_value": {"qualname": 3, "fullname": 7, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_value": {"qualname": 3, "fullname": 7, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.dates": {"qualname": 2, "fullname": 6, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.spermwhaleipi": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.parent_uid": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi_amplitude": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.sample_rate": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.max_val": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_len": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_data": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.ais": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.ais.AISProcessing": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.processing.ais.AISProcessing.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.modules.processing.ais.AISProcessing.mmsi_number": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.ais.AISProcessing.fill_bits": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.ais.AISProcessing.char_data": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.ais.AISProcessing.ais_channel": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.clipgenerator": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_millis": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.file_name": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_name": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_uid": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_chan": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_samps": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.scale": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.wave": {"qualname": 2, "fullname": 6, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.dbht": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.processing.dbht.DbHtProcessing.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.modules.processing.dbht.DbHtProcessing.rms": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.dbht.DbHtProcessing.zero_peak": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.dbht.DbHtProcessing.peak_peak": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.difar": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.difar.DIFARProcessing": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.processing.difar.DIFARProcessing.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.modules.processing.difar.DIFARProcessing.clip_start": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.difar.DIFARProcessing.display_sample_rate": {"qualname": 4, "fullname": 8, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.difar.DIFARProcessing.demuxed_length": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.difar.DIFARProcessing.amplitude": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.difar.DIFARProcessing.gain": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_angle": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_freq": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.difar.DIFARProcessing.species_code": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.difar.DIFARProcessing.tracked_group": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.difar.DIFARProcessing.max_val": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.difar.DIFARProcessing.demux_data": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.difar.DIFARProcessing.num_matches": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.difar.DIFARProcessing.latitude": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.difar.DIFARProcessing.longitude": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.difar.DIFARProcessing.errors": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.ishmael": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.processing.ishmael.IshmaelDetections.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.modules.processing.ishmael.IshmaelDetections.peak_height": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.ishmael.IshmaelDetections.time_sample": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.ishmael.IshmaelData": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.processing.longtermspectralaverage": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.a": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.b": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_millis": {"qualname": 3, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"qualname": 3, "fullname": 7, "annotation": 14, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.n_fft": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.max_val": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.bytes_data": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.data": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.noiseband": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.processing.noisemonitor": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.n_bands": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.stats_types": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.lo_edges": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.hi_edges": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.i_chan": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_bands": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_measures": {"qualname": 3, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.noise": {"qualname": 2, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdbackground": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdbackground.StandardBackground": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 8, "doc": 16}, "pypamguard.standard.stdbackground.StandardBackground.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 3}, "pypamguard.standard.stdchunkinfo": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.length": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.identifier": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stddata": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 44, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stddata.StandardDataMixin": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdfilefooter": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdfilefooter.StandardFileFooter": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.standard.stdfilefooter.StandardFileFooter.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 3}, "pypamguard.standard.stdfilefooter.StandardFileFooter.n_objects": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date_raw": {"qualname": 4, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date": {"qualname": 3, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date_raw": {"qualname": 4, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date": {"qualname": 3, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_sample": {"qualname": 3, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdfilefooter.StandardFileFooter.lowest_uid": {"qualname": 3, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdfilefooter.StandardFileFooter.highest_uid": {"qualname": 3, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdfilefooter.StandardFileFooter.file_length": {"qualname": 3, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_reason": {"qualname": 3, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdfileheader": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdfileheader.StandardFileHeader": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.standard.stdfileheader.StandardFileHeader.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "pypamguard.standard.stdmodule": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdmodule.StandardModule": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 8, "doc": 16}, "pypamguard.standard.stdmodule.StandardModule.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 3}, "pypamguard.standard.stdmodulefooter": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 3}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.length": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.identifier": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.binary_length": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdmoduleheader": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.length": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.identifier": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.version": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.binary_length": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.annotations": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.annotations.read_beam_former_annotation": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "pypamguard.utils.annotations.read_bearing_annotation": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "pypamguard.utils.bitmap": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.bitmap.Bitmap": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.bitmap.Bitmap.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 100}, "pypamguard.utils.bitmap.Bitmap.fields2index": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.bitmap.Bitmap.index2fields": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.bitmap.Bitmap.size": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.bitmap.Bitmap.bits": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.bitmap.Bitmap.set": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 11}, "pypamguard.utils.bitmap.Bitmap.clear": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 11}, "pypamguard.utils.bitmap.Bitmap.is_set": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 15}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 16}, "pypamguard.utils.bitmap.Bitmap.get_binary_representation": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "pypamguard.utils.constants": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.constants.TIME_RANGE": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.constants.UID_RANGE": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.constants.UID_LIST": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.constants.FILTER": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.constants.CHANNEL": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.constants.DEFAULT_BUFFER_SIZE": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.constants.BYTE_ORDERS": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.constants.IdentifierType": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "pypamguard.utils.constants.IdentifierType.FILE_HEADER": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.constants.IdentifierType.FILE_FOOTER": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.constants.IdentifierType.MODULE_HEADER": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.constants.IdentifierType.MODULE_FOOTER": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.constants.IdentifierType.IGNORE": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.constants.IdentifierType.FILE_BACKGROUND": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.serializer": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pypamguard.utils.serializer.serialize": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}}, "length": 544, "save": true}, "index": {"qualname": {"root": {"docs": {"pypamguard.base.chunk.BaseChunk.__init__": {"tf": 1}, "pypamguard.core.exceptions.BinaryFileException.__init__": {"tf": 1}, "pypamguard.core.exceptions.WarningException.__init__": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch.__init__": {"tf": 1}, "pypamguard.core.exceptions.StructuralException.__init__": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}, "pypamguard.core.filters.Filters.__init__": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}, "pypamguard.core.readers.TypeFormat.__init__": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.Shape.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.__init__": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo.__init__": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.__init__": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.__init__": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.__init__": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.__init__": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.__init__": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.__init__": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.__init__": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.__init__": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground.__init__": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.__init__": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.__init__": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader.__init__": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule.__init__": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.__init__": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.__init__": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 59, "b": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.b": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"pypamguard.base.chunk.BaseChunk": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.__init__": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.process": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.get_attrs": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.signature": {"tf": 1}}, "df": 5}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.BaseFilter": {"tf": 1}, "pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.BaseFilter.from_json": {"tf": 1}}, "df": 3}}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.modules.detectors.click.ClickDetectorBackgound.background": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.background": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_BACKGROUND": {"tf": 1}}, "df": 3}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_bands": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.first_bin": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.is_binary": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.binary_length": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.binary_length": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_binary_representation": {"tf": 1}}, "df": 5, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.BinaryFileException": {"tf": 1}, "pypamguard.core.exceptions.BinaryFileException.__init__": {"tf": 1}, "pypamguard.core.exceptions.BinaryFileException.position": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.BinaryReader": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BinaryReader.as_helper": {"tf": 1}, "pypamguard.core.readers.BinaryReader.var_name": {"tf": 1}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BinaryReader.print": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.fp": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.set_endianess": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.tell": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.millis_to_timestamp": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.timestamp_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.nstring_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.string_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1}}, "df": 17}}}}}}}}}}, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.fields2index": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.index2fields": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.size": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.bits": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.clear": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_binary_representation": {"tf": 1}}, "df": 12, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.BitmapBinaryReader": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.format": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.labels": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.bm": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}, "s": {"docs": {"pypamguard.modules.processing.ais.AISProcessing.fill_bits": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.bits": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}}, "df": 3}}, "g": {"docs": {"pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"tf": 1}}, "df": 1}}, "m": {"docs": {"pypamguard.core.readers.BitmapBinaryReader.bm": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pypamguard.generics.genfileheader.GenericFileHeader.branch": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_bearing": {"tf": 1}, "pypamguard.utils.annotations.read_bearing_annotation": {"tf": 1}}, "df": 4}}}}, "m": {"docs": {"pypamguard.utils.annotations.read_beam_former_annotation": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.utils.constants.BYTE_ORDERS": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"tf": 1}}, "df": 3, "s": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.bytes_data": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.utils.constants.DEFAULT_BUFFER_SIZE": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {"pypamguard.modules.processing.noisemonitor.NoiseMonitor.i_chan": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.base.chunk.BaseChunk.__init__": {"tf": 1}, "pypamguard.core.exceptions.BinaryFileException.__init__": {"tf": 1}, "pypamguard.core.exceptions.WarningException.__init__": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch.__init__": {"tf": 1}, "pypamguard.core.exceptions.StructuralException.__init__": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}, "pypamguard.core.filters.Filters.__init__": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}, "pypamguard.core.readers.TypeFormat.__init__": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.Shape.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.__init__": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo.__init__": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.__init__": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.__init__": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.__init__": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.__init__": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.__init__": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.__init__": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.__init__": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.__init__": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground.__init__": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.__init__": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.__init__": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader.__init__": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule.__init__": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.__init__": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.__init__": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 59}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.core.exceptions.WarningException.chunk_info": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.extra_info_len": {"tf": 1}, "pypamguard.logger.Verbosity.INFO": {"tf": 1}, "pypamguard.logger.Logger.info": {"tf": 1}}, "df": 4}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"tf": 1}}, "df": 1}}}}}}}, "t": {"1": {"6": {"docs": {"pypamguard.core.readers_new.DTYPES.INT16": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"pypamguard.core.readers_new.DTYPES.INT32": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"pypamguard.core.readers_new.DTYPES.INT64": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "8": {"docs": {"pypamguard.core.readers_new.DTYPES.INT8": {"tf": 1}}, "df": 1}, "docs": {"pypamguard.core.readers.DTYPES.INT": {"tf": 1}, "pypamguard.core.readers.INTS.INT": {"tf": 1}}, "df": 2, "s": {"docs": {"pypamguard.core.readers.INTS": {"tf": 1}, "pypamguard.core.readers.INTS.CHAR": {"tf": 1}, "pypamguard.core.readers.INTS.UCHAR": {"tf": 1}, "pypamguard.core.readers.INTS.SHORT": {"tf": 1}, "pypamguard.core.readers.INTS.USHORT": {"tf": 1}, "pypamguard.core.readers.INTS.INT": {"tf": 1}, "pypamguard.core.readers.INTS.UINT": {"tf": 1}, "pypamguard.core.readers.INTS.LONG": {"tf": 1}, "pypamguard.core.readers.INTS.ULONG": {"tf": 1}}, "df": 9}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"2": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.utils.bitmap.Bitmap.index2fields": {"tf": 1}}, "df": 1}}}}}}}, "docs": {}, "df": 0}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.RangeFilter.ignore_none": {"tf": 1}, "pypamguard.core.filters.DateFilter.ignore_timezone": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.IGNORE": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.is_binary": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.core.registry.ishmael_config": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.__init__": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.peak_height": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.time_sample": {"tf": 1}}, "df": 4}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_id": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.generics.genfilefooter.GenericFileFooter.identifier": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.identifier": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.identifier": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.identifier": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.identifier": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.identifier": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.identifier": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.utils.constants.IdentifierType": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.IGNORE": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_BACKGROUND": {"tf": 1}}, "df": 7}}}}}}}}}}}}, "s": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_ids": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi_amplitude": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.base.chunk.BaseChunk.process": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk": {"tf": 1}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": 1}}, "df": 11, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.post_processor": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.post_processor": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.BinaryReader.print": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.registry.register_preinstalled_modules": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.predictions": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.BinaryFileException.position": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.SKIP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.KEEP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.STOP": {"tf": 1}, "pypamguard.core.filters.Filters.position": {"tf": 1}}, "df": 6}}}}}, "t": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.post_processor": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.post_processor": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_points": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile.PGBFile": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.total_time": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.size": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.file_header": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.module_header": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.module_footer": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.file_footer": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.filters": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.module_class": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.order": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.path": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.module_registry": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.data": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.load": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.to_json": {"tf": 1}}, "df": 16}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pypamguard.core.pgbfile.PGBFile.path": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.generics.genfileheader.GenericFileHeader.pamguard": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.parent_uid": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_amp": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.peak_data": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_range": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.zero_peak": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.peak_peak": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.ishmael.IshmaelDetections.peak_height": {"tf": 1}}, "df": 8, "s": {"docs": {"pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_peaks": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.base.chunk.BaseChunk.get_attrs": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.get_module": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_binary_representation": {"tf": 1}}, "df": 4}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.registry.geminithreshold_config": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_points": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_sonar": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_ids": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.straight_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.wobbly_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.mean_occupancy": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.time_millis": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_id": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.obj_size": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.occupancy": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.ave_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.tot_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.dates": {"tf": 1}}, "df": 22, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground.__init__": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.__init__": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.length": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.identifier": {"tf": 1}}, "df": 4}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.__init__": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.length": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.identifier": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.file_format": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.pamguard": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.version": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.branch": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.data_date": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.analysis_date": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.start_sample": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_type": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_name": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.stream_name": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.extra_info_len": {"tf": 1}}, "df": 15}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.length": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.identifier": {"tf": 1}}, "df": 4}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.length": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.identifier": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.core.registry.gpl_config": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.gain": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.tracked_group": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.a": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.base.chunk.BaseChunk.get_attrs": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.filters.Filters.add": {"tf": 1}, "pypamguard.core.pgbfile.Report.add_warning": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.generics.genfileheader.GenericFileHeader.analysis_date": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date": {"tf": 1}}, "df": 3}}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.detectors.click.ClickDetector.angle_errors": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_angle": {"tf": 1}}, "df": 2, "s": {"docs": {"pypamguard.modules.detectors.click.ClickDetector.angles": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.utils.annotations.read_beam_former_annotation": {"tf": 1}, "pypamguard.utils.annotations.read_bearing_annotation": {"tf": 1}}, "df": 2}}}}}}}}}, "s": {"docs": {"pypamguard.core.readers.BinaryReader.as_helper": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.registry.ais_config": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.ais_channel": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.mmsi_number": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.fill_bits": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.char_data": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.ais_channel": {"tf": 1}}, "df": 6}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_amp": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.amplitude": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi_amplitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.amplitude": {"tf": 1}}, "df": 3}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.ave_value": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.base.chunk.BaseChunk.signature": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {"pypamguard.modules.detectors.rwedge.RWEdgeDetector.signal": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile.PGBFile.size": {"tf": 1}, "pypamguard.core.readers.TypeFormat.size": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.obj_size": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.size": {"tf": 1}, "pypamguard.utils.constants.DEFAULT_BUFFER_SIZE": {"tf": 1}}, "df": 5}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.StructuralException": {"tf": 1}, "pypamguard.core.exceptions.StructuralException.__init__": {"tf": 1}, "pypamguard.core.exceptions.StructuralException.message": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.readers_new.BinaryReader.string_read": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.StringNBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.length": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.post_processor": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.StringBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.length_type": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pypamguard.generics.genfileheader.GenericFileHeader.stream_name": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.straight_length": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.filters.FILTER_POSITION.STOP": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.filters.RangeFilter.start": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.start_sample": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.start_sample": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.clip_start": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.stats_types": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.__init__": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.length": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.identifier": {"tf": 1}}, "df": 4}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.standard.stddata.StandardDataMixin": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.__init__": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.n_objects": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_sample": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.lowest_uid": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.highest_uid": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.file_length": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_reason": {"tf": 1}}, "df": 12}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.standard.stdmodule.StandardModule": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule.__init__": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.__init__": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.length": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.identifier": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.binary_length": {"tf": 1}}, "df": 5}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.__init__": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.length": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.identifier": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.version": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.binary_length": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.filters.FILTER_POSITION.SKIP": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.DTYPES.SHORT": {"tf": 1}, "pypamguard.core.readers.INTS.SHORT": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.shape": {"tf": 1}, "pypamguard.core.readers_new.Shape": {"tf": 1}, "pypamguard.core.readers_new.Shape.__init__": {"tf": 1}, "pypamguard.core.readers_new.Shape.shape": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.Shape.length": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers_new.BinaryReader.set_endianess": {"tf": 1}, "pypamguard.logger.Logger.set_verbosity": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}}, "df": 5}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.serializable.Serializable": {"tf": 1}, "pypamguard.core.serializable.Serializable.serialize": {"tf": 1}, "pypamguard.core.serializable.Serializable.to_json": {"tf": 1}, "pypamguard.core.serializable.Serializable.from_json": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {"pypamguard.core.serializable.Serializable.serialize": {"tf": 1}, "pypamguard.utils.serializer.serialize": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.sel_angle": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_freq": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"pypamguard.core.registry.spermwhaleipi_config": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.__init__": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.parent_uid": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi_amplitude": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.sample_rate": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.max_val": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_len": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_data": {"tf": 1}}, "df": 10}}}}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_species": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.species_code": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.__init__": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.first_bin": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.noise_len": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.background": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.generics.genfileheader.GenericFileHeader.start_sample": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.start_sample": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.sample_rate": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.display_sample_rate": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.time_sample": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_sample": {"tf": 1}}, "df": 6}}, "s": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_samps": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_samps": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.scale": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.scale": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.scale": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.delay_scale": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.scale": {"tf": 1}}, "df": 5}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.detectors.rwedge.RWEdgeDetector.slice_nums": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.slice_numbers": {"tf": 1}}, "df": 2, "s": {"docs": {"pypamguard.modules.detectors.rwedge.RWEdgeDetector.n_slices": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_slices": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_sonar": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_ids": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_id": {"tf": 1}}, "df": 3}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.pgbfile.Report.add_warning": {"tf": 1}, "pypamguard.logger.Verbosity.WARNING": {"tf": 1}, "pypamguard.logger.Logger.warning": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.WarningException": {"tf": 1}, "pypamguard.core.exceptions.WarningException.__init__": {"tf": 1}, "pypamguard.core.exceptions.WarningException.chunk_info": {"tf": 1}, "pypamguard.core.exceptions.WarningException.chunk": {"tf": 1}}, "df": 4}}}}}}}}}, "s": {"docs": {"pypamguard.core.pgbfile.Report.warnings": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.wave": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.wave": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.wave": {"tf": 1}}, "df": 3}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.filters.WhitelistFilter.whitelist": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.WhitelistFilter": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.whitelist": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.from_json": {"tf": 1}}, "df": 5}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.registry.whistleandmoan_config": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_slices": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.amplitude": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour_width": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.slice_numbers": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_peaks": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.peak_data": {"tf": 1}}, "df": 9, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.delay_scale": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour_width": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.wobbly_length": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"1": {"docs": {"pypamguard.core.pgbfile.process_chunk1": {"tf": 1}}, "df": 1}, "docs": {"pypamguard.core.exceptions.WarningException.chunk_info": {"tf": 1}, "pypamguard.core.exceptions.WarningException.chunk": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pypamguard.core.exceptions.ChunkLengthMismatch": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.DTYPES.CHAR": {"tf": 1}, "pypamguard.core.readers.INTS.CHAR": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.char_data": {"tf": 1}}, "df": 3}, "n": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_chan": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_chan": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.i_chan": {"tf": 1}}, "df": 3, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.modules.detectors.click.ClickDetector.channel_map": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.ais_channel": {"tf": 1}, "pypamguard.utils.constants.CHANNEL": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.logger.Verbosity.CRITICAL": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.CriticalException": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.RangeFilter.comparator": {"tf": 1}, "pypamguard.core.filters.RangeFilter.default_comparator": {"tf": 1}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.CustomBinaryReader.count": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count_length": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.registry.ais_config": {"tf": 1}, "pypamguard.core.registry.click_config": {"tf": 1}, "pypamguard.core.registry.clipgenerator_config": {"tf": 1}, "pypamguard.core.registry.deeplearningclassifier_config": {"tf": 1}, "pypamguard.core.registry.dbht_config": {"tf": 1}, "pypamguard.core.registry.difar_config": {"tf": 1}, "pypamguard.core.registry.noisemonitor_config": {"tf": 1}, "pypamguard.core.registry.noiseband_config": {"tf": 1}, "pypamguard.core.registry.gpl_config": {"tf": 1}, "pypamguard.core.registry.rwedge_config": {"tf": 1}, "pypamguard.core.registry.whistleandmoan_config": {"tf": 1}, "pypamguard.core.registry.longtermspectralaverage_config": {"tf": 1}, "pypamguard.core.registry.ishmael_config": {"tf": 1}, "pypamguard.core.registry.spermwhaleipi_config": {"tf": 1}, "pypamguard.core.registry.geminithreshold_config": {"tf": 1}, "pypamguard.logger.logger_config": {"tf": 1}}, "df": 16}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour_width": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.species_code": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.pgbfile.PGBFile.module_class": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_class": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pypamguard.core.registry.click_config": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.start_sample": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.channel_map": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.trigger_map": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.type": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.flags": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.delays": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.angles": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.angle_errors": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.duration": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.wave": {"tf": 1}}, "df": 12, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count_length": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count": {"tf": 1}}, "df": 4}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.noise_len": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.background": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.__init__": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.scale": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.raw_levels": {"tf": 1}}, "df": 4, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.clip_start": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.clipgenerator_config": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.__init__": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_millis": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.file_name": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_name": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_uid": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_chan": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_samps": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.scale": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.wave": {"tf": 1}}, "df": 11}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.utils.bitmap.Bitmap.clear": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.CustomBinaryReader": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.function": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.count": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile.PGBFile.module_header": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.module_footer": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.module_class": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.module_registry": {"tf": 1}, "pypamguard.core.registry.module_metadata": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.get_module": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_type": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_name": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_FOOTER": {"tf": 1}}, "df": 12, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.ModuleNotFoundException": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "s": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.modules": {"tf": 1}, "pypamguard.core.registry.register_preinstalled_modules": {"tf": 1}}, "df": 3}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.core.registry.ModuleRegistry": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.modules": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.get_module": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.exceptions.StructuralException.message": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pypamguard.core.registry.module_metadata": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.mean_occupancy": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_measures": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.pgbfile.mmap_file": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "i": {"docs": {"pypamguard.modules.processing.ais.AISProcessing.mmsi_number": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.readers_new.BinaryReader.millis_to_timestamp": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.time_millis": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_millis": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_millis": {"tf": 1}}, "df": 4}}}}, "n": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_range": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.modules.detectors.click.ClickDetector.channel_map": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.trigger_map": {"tf": 1}}, "df": 2}, "x": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_value": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.max_val": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.max_val": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.max_val": {"tf": 1}}, "df": 6}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.num_matches": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile.mmap_file": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.file_header": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.file_footer": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.file_format": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.file_name": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.file_length": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_BACKGROUND": {"tf": 1}}, "df": 10, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.FileCorruptedException": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.FILTER_POSITION": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.SKIP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.KEEP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.STOP": {"tf": 1}, "pypamguard.core.filters.Filters.filter": {"tf": 1}, "pypamguard.utils.constants.FILTER": {"tf": 1}}, "df": 6, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.filters.FilterMismatchException": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "s": {"docs": {"pypamguard.core.filters.Filters": {"tf": 1}, "pypamguard.core.filters.Filters.__init__": {"tf": 1}, "pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"tf": 1.4142135623730951}, "pypamguard.core.filters.Filters.position": {"tf": 1}, "pypamguard.core.filters.Filters.add": {"tf": 1}, "pypamguard.core.filters.Filters.to_json": {"tf": 1}, "pypamguard.core.filters.Filters.filter": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.filters": {"tf": 1}}, "df": 8}}}}, "l": {"docs": {"pypamguard.modules.processing.ais.AISProcessing.fill_bits": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.modules.detectors.spectralbackground.SpectralBackground.first_bin": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"2": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"pypamguard.utils.bitmap.Bitmap.fields2index": {"tf": 1}}, "df": 1}}}}}}, "docs": {"pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pypamguard.core.filters.BaseFilter.from_json": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.from_json": {"tf": 1}, "pypamguard.core.filters.RangeFilter.from_json": {"tf": 1}, "pypamguard.core.filters.DateFilter.from_json": {"tf": 1}, "pypamguard.core.serializable.Serializable.from_json": {"tf": 1}}, "df": 5}}, "e": {"docs": {}, "df": 0, "q": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.sel_freq": {"tf": 1}}, "df": 1, "s": {"docs": {"pypamguard.modules.detectors.rwedge.RWEdgeDetector.lo_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.hi_freqs": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"pypamguard.core.filters.RangeFilter.validation_func": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.readers.CustomBinaryReader.function": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.pgbfile.PGBFile.module_footer": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.file_footer": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_FOOTER": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.format": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.format": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.file_format": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.TypeFormat.formatter": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.utils.annotations.read_beam_former_annotation": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"pypamguard.core.readers_new.DTYPES.FLOAT32": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"pypamguard.core.readers_new.DTYPES.FLOAT64": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"pypamguard.core.readers.DTYPES.FLOAT": {"tf": 1}, "pypamguard.core.readers.FLOATS.FLOAT": {"tf": 1}}, "df": 2, "s": {"docs": {"pypamguard.core.readers.FLOATS": {"tf": 1}, "pypamguard.core.readers.FLOATS.FLOAT": {"tf": 1}, "pypamguard.core.readers.FLOATS.DOUBLE": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}}, "df": 1, "s": {"docs": {"pypamguard.modules.detectors.click.ClickDetector.flags": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"pypamguard.core.readers_new.BinaryReader.fp": {"tf": 1}}, "df": 1}, "f": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.n_fft": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_species": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_class": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_chan": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_samps": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.n_slices": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_slices": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_peaks": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_points": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_sonar": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_chan": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_samps": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.n_fft": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_measures": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.n_objects": {"tf": 1}}, "df": 16, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.NoFileHeaderException": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.NoFileFooterException": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.NoModuleHeaderException": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.NoModuleFooterException": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.RangeFilter.ignore_none": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.detectors.click.ClickDetectorBackgound.noise_len": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.noise": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.noise_len": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.noise": {"tf": 1}}, "df": 4, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.noisemonitor_config": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.i_chan": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_measures": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.noise": {"tf": 1}}, "df": 7, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.stats_types": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.lo_edges": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.hi_edges": {"tf": 1}}, "df": 6}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.registry.noiseband_config": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.BinaryReader.var_name": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_name": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.stream_name": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.file_name": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_name": {"tf": 1}}, "df": 5}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.num_matches": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.NumericalBinaryReader": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.shape": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.format": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.post_processor": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}, "s": {"docs": {"pypamguard.modules.detectors.rwedge.RWEdgeDetector.slice_nums": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.processing.ais.AISProcessing.mmsi_number": {"tf": 1}}, "df": 1, "s": {"docs": {"pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.slice_numbers": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.readers_new.BinaryReader.nstring_read": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.filters.FILTER_POSITION.KEEP": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.filters.BaseFilter.from_json": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.from_json": {"tf": 1}, "pypamguard.core.filters.RangeFilter.from_json": {"tf": 1}, "pypamguard.core.filters.DateFilter.from_json": {"tf": 1}, "pypamguard.core.filters.Filters.to_json": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.to_json": {"tf": 1}, "pypamguard.core.serializable.Serializable.to_json": {"tf": 1}, "pypamguard.core.serializable.Serializable.from_json": {"tf": 1}}, "df": 8}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_range": {"tf": 1}, "pypamguard.utils.constants.TIME_RANGE": {"tf": 1}, "pypamguard.utils.constants.UID_RANGE": {"tf": 1}}, "df": 5, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.RangeFilter": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.filters.RangeFilter.start": {"tf": 1}, "pypamguard.core.filters.RangeFilter.end": {"tf": 1}, "pypamguard.core.filters.RangeFilter.comparator": {"tf": 1}, "pypamguard.core.filters.RangeFilter.validation_func": {"tf": 1}, "pypamguard.core.filters.RangeFilter.ordered": {"tf": 1}, "pypamguard.core.filters.RangeFilter.ignore_none": {"tf": 1}, "pypamguard.core.filters.RangeFilter.default_comparator": {"tf": 1}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.from_json": {"tf": 1}}, "df": 11}}}}}}}}}, "w": {"docs": {"pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.raw_levels": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date_raw": {"tf": 1}}, "df": 3}, "t": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.sample_rate": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.display_sample_rate": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.pgbfile.Report": {"tf": 1}, "pypamguard.core.pgbfile.Report.warnings": {"tf": 1}, "pypamguard.core.pgbfile.Report.add_warning": {"tf": 1}, "pypamguard.core.pgbfile.report": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.utils.bitmap.Bitmap.get_binary_representation": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.core.pgbfile.PGBFile.module_registry": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}, "pypamguard.core.registry.register_preinstalled_modules": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.timestamp_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.nstring_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.string_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1}, "pypamguard.utils.annotations.read_beam_former_annotation": {"tf": 1}, "pypamguard.utils.annotations.read_bearing_annotation": {"tf": 1}}, "df": 7}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.standard.stdfilefooter.StandardFileFooter.end_reason": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.registry.rwedge_config": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.type": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.signal": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.noise": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.n_slices": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.slice_nums": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.lo_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.hi_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_amp": {"tf": 1}}, "df": 11}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.processing.dbht.DbHtProcessing.rms": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.filters.RangeFilter.end": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_millis": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_sample": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_reason": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.readers_new.BinaryReader.set_endianess": {"tf": 1}}, "df": 1}}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"pypamguard.generics.genfileheader.GenericFileHeader.extra_info_len": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.logger.Verbosity.ERROR": {"tf": 1}, "pypamguard.logger.Logger.error": {"tf": 1}}, "df": 2, "s": {"docs": {"pypamguard.modules.detectors.click.ClickDetector.angle_errors": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.errors": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_len": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_data": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.lo_edges": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.hi_edges": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.max_val": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.max_val": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.max_val": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.filters.RangeFilter.validation_func": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.ave_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.tot_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_value": {"tf": 1}}, "df": 3}}}, "r": {"docs": {"pypamguard.core.readers.BinaryReader.var_name": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.generics.genfileheader.GenericFileHeader.version": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.version": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.logger.Verbosity": {"tf": 1}, "pypamguard.logger.Verbosity.CRITICAL": {"tf": 1}, "pypamguard.logger.Verbosity.ERROR": {"tf": 1}, "pypamguard.logger.Verbosity.WARNING": {"tf": 1}, "pypamguard.logger.Verbosity.INFO": {"tf": 1}, "pypamguard.logger.Verbosity.DEBUG": {"tf": 1}, "pypamguard.logger.Logger.verbosity": {"tf": 1}, "pypamguard.logger.Logger.set_verbosity": {"tf": 1}}, "df": 8}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.pgbfile.PGBFile.order": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.filters.RangeFilter.ordered": {"tf": 1}}, "df": 1}}, "s": {"docs": {"pypamguard.utils.constants.BYTE_ORDERS": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.mean_occupancy": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.occupancy": {"tf": 1}}, "df": 2}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.obj_size": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.standard.stdfilefooter.StandardFileFooter.n_objects": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.filters.RangeFilter.default_comparator": {"tf": 1}, "pypamguard.utils.constants.DEFAULT_BUFFER_SIZE": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.deeplearningclassifier_config": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.logger.Verbosity.DEBUG": {"tf": 1}, "pypamguard.logger.Logger.debug": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.delay_scale": {"tf": 1}}, "df": 1, "s": {"docs": {"pypamguard.modules.detectors.click.ClickDetector.delays": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "x": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.demux_data": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.demuxed_length": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.generics.genfileheader.GenericFileHeader.data_date": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.analysis_date": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date": {"tf": 1}}, "df": 7, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.DateFilter": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}, "pypamguard.core.filters.DateFilter.ignore_timezone": {"tf": 1}, "pypamguard.core.filters.DateFilter.from_json": {"tf": 1}}, "df": 4}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.DateBinaryReader": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "s": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.dates": {"tf": 1}}, "df": 1}}, "a": {"docs": {"pypamguard.core.pgbfile.PGBFile.data": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.data_date": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.peak_data": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_data": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.char_data": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demux_data": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.bytes_data": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.data": {"tf": 1}, "pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date": {"tf": 1}}, "df": 11}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.readers.DTYPES": {"tf": 1}, "pypamguard.core.readers.DTYPES.CHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.UCHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.SHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.USHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.INT": {"tf": 1}, "pypamguard.core.readers.DTYPES.UINT": {"tf": 1}, "pypamguard.core.readers.DTYPES.LONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.ULONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.FLOAT": {"tf": 1}, "pypamguard.core.readers.DTYPES.DOUBLE": {"tf": 1}, "pypamguard.core.readers_new.DTYPES": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT8": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT8": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT16": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT16": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT64": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT64": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.FLOAT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.FLOAT64": {"tf": 1}}, "df": 22}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.DTYPES.DOUBLE": {"tf": 1}, "pypamguard.core.readers.FLOATS.DOUBLE": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.registry.dbht_config": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.rms": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.zero_peak": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.peak_peak": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.difar_config": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.clip_start": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.display_sample_rate": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demuxed_length": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.amplitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.gain": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_angle": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_freq": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.species_code": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.tracked_group": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.max_val": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demux_data": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.num_matches": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.latitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.longitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.errors": {"tf": 1}}, "df": 17}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.display_sample_rate": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.type": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.is_binary": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.scale": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_species": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.predictions": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_class": {"tf": 1}}, "df": 8}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_chan": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_samps": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.scale": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.wave": {"tf": 1}}, "df": 6}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.modules.detectors.click.ClickDetector.duration": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile.PGBFile.total_time": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.time_millis": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.time_sample": {"tf": 1}, "pypamguard.utils.constants.TIME_RANGE": {"tf": 1}}, "df": 4, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.DateFilter.ignore_timezone": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.readers_new.BinaryReader.millis_to_timestamp": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.timestamp_read": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {"pypamguard.load_pamguard_binary_file.timer": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"pypamguard.core.filters.Filters.to_json": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.to_json": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.millis_to_timestamp": {"tf": 1}, "pypamguard.core.serializable.Serializable.to_json": {"tf": 1}}, "df": 4, "t": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.tot_value": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.core.pgbfile.PGBFile.total_time": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.StringBinaryReader.length_type": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_type": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.type": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.type": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.type": {"tf": 1}}, "df": 5, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.TypeFormat": {"tf": 1}, "pypamguard.core.readers.TypeFormat.__init__": {"tf": 1}, "pypamguard.core.readers.TypeFormat.formatter": {"tf": 1}, "pypamguard.core.readers.TypeFormat.size": {"tf": 1}}, "df": 4}}}}}}, "s": {"docs": {"pypamguard.modules.detectors.click.ClickDetectorFooter.types_count_length": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.stats_types": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.core.readers_new.BinaryReader.tell": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.click.ClickDetector.trigger_map": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_millis": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_name": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_uid": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.tracked_group": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.pgbfile.PGBFile.file_header": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.module_header": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_HEADER": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.BinaryReader.as_helper": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.modules.processing.ishmael.IshmaelDetections.peak_height": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {"pypamguard.modules.detectors.rwedge.RWEdgeDetector.hi_freqs": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.hi_edges": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.standard.stdfilefooter.StandardFileFooter.highest_uid": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.modules.detectors.rwedge.RWEdgeDetector.lo_freqs": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.lo_edges": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.pgbfile.PGBFile.load": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.readers.DTYPES.LONG": {"tf": 1}, "pypamguard.core.readers.INTS.LONG": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.registry.longtermspectralaverage_config": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.__init__": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.a": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.b": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_millis": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.n_fft": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.max_val": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.bytes_data": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.data": {"tf": 1}}, "df": 11, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.longitude": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.logger.logger_config": {"tf": 1}, "pypamguard.logger.Logger": {"tf": 1}, "pypamguard.logger.Logger.verbosity": {"tf": 1}, "pypamguard.logger.Logger.set_verbosity": {"tf": 1}, "pypamguard.logger.Logger.info": {"tf": 1}, "pypamguard.logger.Logger.debug": {"tf": 1}, "pypamguard.logger.Logger.warning": {"tf": 1}, "pypamguard.logger.Logger.error": {"tf": 1}, "pypamguard.logger.logger": {"tf": 1}}, "df": 9}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.standard.stdfilefooter.StandardFileFooter.lowest_uid": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.generics.genfileheader.GenericFileHeader.extra_info_len": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.noise_len": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.noise_len": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_len": {"tf": 1}}, "df": 4, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pypamguard.core.readers.StringNBinaryReader.length": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.length_type": {"tf": 1}, "pypamguard.core.readers_new.Shape.length": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.length": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.length": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.length": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.length": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.straight_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.wobbly_length": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demuxed_length": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.length": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.file_length": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.length": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.binary_length": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.length": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.binary_length": {"tf": 1}}, "df": 17}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.raw_levels": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.readers.BitmapBinaryReader.labels": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.latitude": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.utils.constants.UID_LIST": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.DTYPES.UCHAR": {"tf": 1}, "pypamguard.core.readers.INTS.UCHAR": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.DTYPES.USHORT": {"tf": 1}, "pypamguard.core.readers.INTS.USHORT": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"1": {"6": {"docs": {"pypamguard.core.readers_new.DTYPES.UINT16": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"pypamguard.core.readers_new.DTYPES.UINT32": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"pypamguard.core.readers_new.DTYPES.UINT64": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "8": {"docs": {"pypamguard.core.readers_new.DTYPES.UINT8": {"tf": 1}}, "df": 1}, "docs": {"pypamguard.core.readers.DTYPES.UINT": {"tf": 1}, "pypamguard.core.readers.INTS.UINT": {"tf": 1}}, "df": 2}}, "d": {"docs": {"pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.parent_uid": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_uid": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.lowest_uid": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.highest_uid": {"tf": 1}, "pypamguard.utils.constants.UID_RANGE": {"tf": 1}, "pypamguard.utils.constants.UID_LIST": {"tf": 1}}, "df": 6}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.readers.DTYPES.ULONG": {"tf": 1}, "pypamguard.core.readers.INTS.ULONG": {"tf": 1}}, "df": 2}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.modules.processing.dbht.DbHtProcessing.zero_peak": {"tf": 1}}, "df": 1}}}}}}, "fullname": {"root": {"docs": {"pypamguard.base.chunk.BaseChunk.__init__": {"tf": 1}, "pypamguard.core.exceptions.BinaryFileException.__init__": {"tf": 1}, "pypamguard.core.exceptions.WarningException.__init__": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch.__init__": {"tf": 1}, "pypamguard.core.exceptions.StructuralException.__init__": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}, "pypamguard.core.filters.Filters.__init__": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}, "pypamguard.core.readers.TypeFormat.__init__": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.Shape.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.__init__": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo.__init__": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.__init__": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.__init__": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.__init__": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.__init__": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.__init__": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.__init__": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.__init__": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.__init__": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground.__init__": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.__init__": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.__init__": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader.__init__": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule.__init__": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.__init__": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.__init__": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 59, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard": {"tf": 1}, "pypamguard.base": {"tf": 1}, "pypamguard.base.chunk": {"tf": 1}, "pypamguard.base.chunk.BaseChunk": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.__init__": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.process": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.get_attrs": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.signature": {"tf": 1}, "pypamguard.core": {"tf": 1}, "pypamguard.core.exceptions": {"tf": 1}, "pypamguard.core.exceptions.BinaryFileException": {"tf": 1}, "pypamguard.core.exceptions.BinaryFileException.__init__": {"tf": 1}, "pypamguard.core.exceptions.BinaryFileException.position": {"tf": 1}, "pypamguard.core.exceptions.WarningException": {"tf": 1}, "pypamguard.core.exceptions.WarningException.__init__": {"tf": 1}, "pypamguard.core.exceptions.WarningException.chunk_info": {"tf": 1}, "pypamguard.core.exceptions.WarningException.chunk": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch.__init__": {"tf": 1}, "pypamguard.core.exceptions.CriticalException": {"tf": 1}, "pypamguard.core.exceptions.ModuleNotFoundException": {"tf": 1}, "pypamguard.core.exceptions.FileCorruptedException": {"tf": 1}, "pypamguard.core.exceptions.StructuralException": {"tf": 1}, "pypamguard.core.exceptions.StructuralException.__init__": {"tf": 1}, "pypamguard.core.exceptions.StructuralException.message": {"tf": 1}, "pypamguard.core.exceptions.NoFileHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleFooterException": {"tf": 1}, "pypamguard.core.exceptions.NoFileFooterException": {"tf": 1}, "pypamguard.core.filters": {"tf": 1}, "pypamguard.core.filters.FilterMismatchException": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.SKIP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.KEEP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.STOP": {"tf": 1}, "pypamguard.core.filters.BaseFilter": {"tf": 1}, "pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.BaseFilter.from_json": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.whitelist": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.from_json": {"tf": 1}, "pypamguard.core.filters.RangeFilter": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.filters.RangeFilter.start": {"tf": 1}, "pypamguard.core.filters.RangeFilter.end": {"tf": 1}, "pypamguard.core.filters.RangeFilter.comparator": {"tf": 1}, "pypamguard.core.filters.RangeFilter.validation_func": {"tf": 1}, "pypamguard.core.filters.RangeFilter.ordered": {"tf": 1}, "pypamguard.core.filters.RangeFilter.ignore_none": {"tf": 1}, "pypamguard.core.filters.RangeFilter.default_comparator": {"tf": 1}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.from_json": {"tf": 1}, "pypamguard.core.filters.DateFilter": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}, "pypamguard.core.filters.DateFilter.ignore_timezone": {"tf": 1}, "pypamguard.core.filters.DateFilter.from_json": {"tf": 1}, "pypamguard.core.filters.Filters": {"tf": 1}, "pypamguard.core.filters.Filters.__init__": {"tf": 1}, "pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"tf": 1}, "pypamguard.core.filters.Filters.position": {"tf": 1}, "pypamguard.core.filters.Filters.add": {"tf": 1}, "pypamguard.core.filters.Filters.to_json": {"tf": 1}, "pypamguard.core.filters.Filters.filter": {"tf": 1}, "pypamguard.core.pgbfile": {"tf": 1}, "pypamguard.core.pgbfile.Report": {"tf": 1}, "pypamguard.core.pgbfile.Report.warnings": {"tf": 1}, "pypamguard.core.pgbfile.Report.add_warning": {"tf": 1}, "pypamguard.core.pgbfile.report": {"tf": 1}, "pypamguard.core.pgbfile.mmap_file": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.total_time": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.size": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.file_header": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.module_header": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.module_footer": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.file_footer": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.filters": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.module_class": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.order": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.path": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.module_registry": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.data": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.load": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.to_json": {"tf": 1}, "pypamguard.core.readers": {"tf": 1}, "pypamguard.core.readers.TypeFormat": {"tf": 1}, "pypamguard.core.readers.TypeFormat.__init__": {"tf": 1}, "pypamguard.core.readers.TypeFormat.formatter": {"tf": 1}, "pypamguard.core.readers.TypeFormat.size": {"tf": 1}, "pypamguard.core.readers.DTYPES": {"tf": 1}, "pypamguard.core.readers.DTYPES.CHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.UCHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.SHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.USHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.INT": {"tf": 1}, "pypamguard.core.readers.DTYPES.UINT": {"tf": 1}, "pypamguard.core.readers.DTYPES.LONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.ULONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.FLOAT": {"tf": 1}, "pypamguard.core.readers.DTYPES.DOUBLE": {"tf": 1}, "pypamguard.core.readers.INTS": {"tf": 1}, "pypamguard.core.readers.INTS.CHAR": {"tf": 1}, "pypamguard.core.readers.INTS.UCHAR": {"tf": 1}, "pypamguard.core.readers.INTS.SHORT": {"tf": 1}, "pypamguard.core.readers.INTS.USHORT": {"tf": 1}, "pypamguard.core.readers.INTS.INT": {"tf": 1}, "pypamguard.core.readers.INTS.UINT": {"tf": 1}, "pypamguard.core.readers.INTS.LONG": {"tf": 1}, "pypamguard.core.readers.INTS.ULONG": {"tf": 1}, "pypamguard.core.readers.FLOATS": {"tf": 1}, "pypamguard.core.readers.FLOATS.FLOAT": {"tf": 1}, "pypamguard.core.readers.FLOATS.DOUBLE": {"tf": 1}, "pypamguard.core.readers.BinaryReader": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BinaryReader.as_helper": {"tf": 1}, "pypamguard.core.readers.BinaryReader.var_name": {"tf": 1}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BinaryReader.print": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.shape": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.format": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.post_processor": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.length": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.post_processor": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.length_type": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.function": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.count": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.format": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.labels": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.bm": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": 1}, "pypamguard.core.readers_new": {"tf": 1}, "pypamguard.core.readers_new.DTYPES": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT8": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT8": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT16": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT16": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT64": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT64": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.FLOAT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.FLOAT64": {"tf": 1}, "pypamguard.core.readers_new.Shape": {"tf": 1}, "pypamguard.core.readers_new.Shape.__init__": {"tf": 1}, "pypamguard.core.readers_new.Shape.shape": {"tf": 1}, "pypamguard.core.readers_new.Shape.length": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.fp": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.set_endianess": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.tell": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.millis_to_timestamp": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.timestamp_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.nstring_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.string_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1}, "pypamguard.core.registry": {"tf": 1}, "pypamguard.core.registry.ais_config": {"tf": 1}, "pypamguard.core.registry.click_config": {"tf": 1}, "pypamguard.core.registry.clipgenerator_config": {"tf": 1}, "pypamguard.core.registry.deeplearningclassifier_config": {"tf": 1}, "pypamguard.core.registry.dbht_config": {"tf": 1}, "pypamguard.core.registry.difar_config": {"tf": 1}, "pypamguard.core.registry.noisemonitor_config": {"tf": 1}, "pypamguard.core.registry.noiseband_config": {"tf": 1}, "pypamguard.core.registry.gpl_config": {"tf": 1}, "pypamguard.core.registry.rwedge_config": {"tf": 1}, "pypamguard.core.registry.whistleandmoan_config": {"tf": 1}, "pypamguard.core.registry.longtermspectralaverage_config": {"tf": 1}, "pypamguard.core.registry.ishmael_config": {"tf": 1}, "pypamguard.core.registry.spermwhaleipi_config": {"tf": 1}, "pypamguard.core.registry.geminithreshold_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1}, "pypamguard.core.registry.module_metadata": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.modules": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.get_module": {"tf": 1}, "pypamguard.core.registry.register_preinstalled_modules": {"tf": 1}, "pypamguard.core.serializable": {"tf": 1}, "pypamguard.core.serializable.Serializable": {"tf": 1}, "pypamguard.core.serializable.Serializable.serialize": {"tf": 1}, "pypamguard.core.serializable.Serializable.to_json": {"tf": 1}, "pypamguard.core.serializable.Serializable.from_json": {"tf": 1}, "pypamguard.generics": {"tf": 1}, "pypamguard.generics.genbackground": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1}, "pypamguard.generics.genchunkinfo": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo.__init__": {"tf": 1}, "pypamguard.generics.genfilefooter": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.__init__": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.length": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.identifier": {"tf": 1}, "pypamguard.generics.genfileheader": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.__init__": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.length": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.identifier": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.file_format": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.pamguard": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.version": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.branch": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.data_date": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.analysis_date": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.start_sample": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_type": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_name": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.stream_name": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.extra_info_len": {"tf": 1}, "pypamguard.generics.genmodule": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1}, "pypamguard.generics.genmodulefooter": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.length": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.identifier": {"tf": 1}, "pypamguard.generics.genmoduleheader": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.length": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.identifier": {"tf": 1}, "pypamguard.load_pamguard_binary_file": {"tf": 1}, "pypamguard.load_pamguard_binary_file.timer": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}, "pypamguard.logger": {"tf": 1}, "pypamguard.logger.Verbosity": {"tf": 1}, "pypamguard.logger.Verbosity.CRITICAL": {"tf": 1}, "pypamguard.logger.Verbosity.ERROR": {"tf": 1}, "pypamguard.logger.Verbosity.WARNING": {"tf": 1}, "pypamguard.logger.Verbosity.INFO": {"tf": 1}, "pypamguard.logger.Verbosity.DEBUG": {"tf": 1}, "pypamguard.logger.logger_config": {"tf": 1}, "pypamguard.logger.Logger": {"tf": 1}, "pypamguard.logger.Logger.verbosity": {"tf": 1}, "pypamguard.logger.Logger.set_verbosity": {"tf": 1}, "pypamguard.logger.Logger.info": {"tf": 1}, "pypamguard.logger.Logger.debug": {"tf": 1}, "pypamguard.logger.Logger.warning": {"tf": 1}, "pypamguard.logger.Logger.error": {"tf": 1}, "pypamguard.logger.logger": {"tf": 1}, "pypamguard.main": {"tf": 1}, "pypamguard.modules": {"tf": 1}, "pypamguard.modules.classifiers": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.type": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.is_binary": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.scale": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_species": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.predictions": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_class": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_chan": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_samps": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.scale": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.wave": {"tf": 1}, "pypamguard.modules.detectors": {"tf": 1}, "pypamguard.modules.detectors.click": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count_length": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.noise_len": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.background": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.start_sample": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.channel_map": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.trigger_map": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.type": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.flags": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.delays": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.angles": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.angle_errors": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.duration": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.wave": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.__init__": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.scale": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.raw_levels": {"tf": 1}, "pypamguard.modules.detectors.gpl": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.rwedge": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.type": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.signal": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.noise": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.n_slices": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.slice_nums": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.lo_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.hi_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_amp": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.__init__": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.first_bin": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.noise_len": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.background": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.delay_scale": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_slices": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.amplitude": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour_width": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.slice_numbers": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_peaks": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.peak_data": {"tf": 1}, "pypamguard.modules.plugins": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_points": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_sonar": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_ids": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.straight_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.wobbly_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.mean_occupancy": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.time_millis": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_id": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.obj_size": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.occupancy": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.ave_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.tot_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.dates": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.__init__": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.parent_uid": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi_amplitude": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.sample_rate": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.max_val": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_len": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_data": {"tf": 1}, "pypamguard.modules.processing": {"tf": 1}, "pypamguard.modules.processing.ais": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.mmsi_number": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.fill_bits": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.char_data": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.ais_channel": {"tf": 1}, "pypamguard.modules.processing.clipgenerator": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.__init__": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_millis": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.file_name": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_name": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_uid": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_chan": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_samps": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.scale": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.wave": {"tf": 1}, "pypamguard.modules.processing.dbht": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.rms": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.zero_peak": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.peak_peak": {"tf": 1}, "pypamguard.modules.processing.difar": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.clip_start": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.display_sample_rate": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demuxed_length": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.amplitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.gain": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_angle": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_freq": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.species_code": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.tracked_group": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.max_val": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demux_data": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.num_matches": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.latitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.longitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.errors": {"tf": 1}, "pypamguard.modules.processing.ishmael": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.__init__": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.peak_height": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.time_sample": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.__init__": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.a": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.b": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_millis": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.n_fft": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.max_val": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.bytes_data": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.data": {"tf": 1}, "pypamguard.modules.processing.noiseband": {"tf": 1}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.stats_types": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.lo_edges": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.hi_edges": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.i_chan": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_measures": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.noise": {"tf": 1}, "pypamguard.standard": {"tf": 1}, "pypamguard.standard.stdbackground": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground.__init__": {"tf": 1}, "pypamguard.standard.stdchunkinfo": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.__init__": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.length": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.identifier": {"tf": 1}, "pypamguard.standard.stddata": {"tf": 1}, "pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}, "pypamguard.standard.stddata.StandardDataMixin": {"tf": 1}, "pypamguard.standard.stdfilefooter": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.__init__": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.n_objects": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_sample": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.lowest_uid": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.highest_uid": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.file_length": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_reason": {"tf": 1}, "pypamguard.standard.stdfileheader": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader.__init__": {"tf": 1}, "pypamguard.standard.stdmodule": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule.__init__": {"tf": 1}, "pypamguard.standard.stdmodulefooter": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.__init__": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.length": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.identifier": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.binary_length": {"tf": 1}, "pypamguard.standard.stdmoduleheader": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.__init__": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.length": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.identifier": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.version": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.binary_length": {"tf": 1}, "pypamguard.utils": {"tf": 1}, "pypamguard.utils.annotations": {"tf": 1}, "pypamguard.utils.annotations.read_beam_former_annotation": {"tf": 1}, "pypamguard.utils.annotations.read_bearing_annotation": {"tf": 1}, "pypamguard.utils.bitmap": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.fields2index": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.index2fields": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.size": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.bits": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.clear": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_binary_representation": {"tf": 1}, "pypamguard.utils.constants": {"tf": 1}, "pypamguard.utils.constants.TIME_RANGE": {"tf": 1}, "pypamguard.utils.constants.UID_RANGE": {"tf": 1}, "pypamguard.utils.constants.UID_LIST": {"tf": 1}, "pypamguard.utils.constants.FILTER": {"tf": 1}, "pypamguard.utils.constants.CHANNEL": {"tf": 1}, "pypamguard.utils.constants.DEFAULT_BUFFER_SIZE": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"tf": 1}, "pypamguard.utils.constants.IdentifierType": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.IGNORE": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_BACKGROUND": {"tf": 1}, "pypamguard.utils.serializer": {"tf": 1}, "pypamguard.utils.serializer.serialize": {"tf": 1}}, "df": 544}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.base.chunk.BaseChunk.process": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk": {"tf": 1}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": 1}}, "df": 11, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.post_processor": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.post_processor": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.modules.processing": {"tf": 1}, "pypamguard.modules.processing.ais": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.mmsi_number": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.fill_bits": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.char_data": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.ais_channel": {"tf": 1}, "pypamguard.modules.processing.clipgenerator": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.__init__": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_millis": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.file_name": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_name": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_uid": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_chan": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_samps": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.scale": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.wave": {"tf": 1}, "pypamguard.modules.processing.dbht": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.rms": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.zero_peak": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.peak_peak": {"tf": 1}, "pypamguard.modules.processing.difar": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.clip_start": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.display_sample_rate": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demuxed_length": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.amplitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.gain": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_angle": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_freq": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.species_code": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.tracked_group": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.max_val": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demux_data": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.num_matches": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.latitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.longitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.errors": {"tf": 1}, "pypamguard.modules.processing.ishmael": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.__init__": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.peak_height": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.time_sample": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.__init__": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.a": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.b": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_millis": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.n_fft": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.max_val": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.bytes_data": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.data": {"tf": 1}, "pypamguard.modules.processing.noiseband": {"tf": 1}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.stats_types": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.lo_edges": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.hi_edges": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.i_chan": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_measures": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.noise": {"tf": 1}}, "df": 77}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.BinaryReader.print": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.registry.register_preinstalled_modules": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.predictions": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.BinaryFileException.position": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.SKIP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.KEEP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.STOP": {"tf": 1}, "pypamguard.core.filters.Filters.position": {"tf": 1}}, "df": 6}}}}}, "t": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.post_processor": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.post_processor": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_points": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile": {"tf": 1}, "pypamguard.core.pgbfile.Report": {"tf": 1}, "pypamguard.core.pgbfile.Report.warnings": {"tf": 1}, "pypamguard.core.pgbfile.Report.add_warning": {"tf": 1}, "pypamguard.core.pgbfile.report": {"tf": 1}, "pypamguard.core.pgbfile.mmap_file": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.PGBFile.total_time": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.PGBFile.size": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.PGBFile.file_header": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.PGBFile.module_header": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.PGBFile.module_footer": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.PGBFile.file_footer": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.PGBFile.filters": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.PGBFile.module_class": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.PGBFile.order": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.PGBFile.path": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.PGBFile.module_registry": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.PGBFile.data": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.PGBFile.load": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.PGBFile.to_json": {"tf": 1.4142135623730951}}, "df": 25}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pypamguard.core.pgbfile.PGBFile.path": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.generics.genfileheader.GenericFileHeader.pamguard": {"tf": 1}, "pypamguard.load_pamguard_binary_file": {"tf": 1}, "pypamguard.load_pamguard_binary_file.timer": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.parent_uid": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_amp": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.peak_data": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_range": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.zero_peak": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.peak_peak": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.ishmael.IshmaelDetections.peak_height": {"tf": 1}}, "df": 8, "s": {"docs": {"pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_peaks": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.plugins": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_points": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_sonar": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_ids": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.straight_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.wobbly_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.mean_occupancy": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.time_millis": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_id": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.obj_size": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.occupancy": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.ave_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.tot_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.dates": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.__init__": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.parent_uid": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi_amplitude": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.sample_rate": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.max_val": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_len": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_data": {"tf": 1}}, "df": 38}}}}}}}, "b": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.b": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.base": {"tf": 1}, "pypamguard.base.chunk": {"tf": 1}, "pypamguard.base.chunk.BaseChunk": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.__init__": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.process": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.get_attrs": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.signature": {"tf": 1}}, "df": 7, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"pypamguard.base.chunk.BaseChunk": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.__init__": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.process": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.get_attrs": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.signature": {"tf": 1}}, "df": 5}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.BaseFilter": {"tf": 1}, "pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.BaseFilter.from_json": {"tf": 1}}, "df": 3}}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.modules.detectors.click.ClickDetectorBackgound.background": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.background": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_BACKGROUND": {"tf": 1}}, "df": 3}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_bands": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.first_bin": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.load_pamguard_binary_file": {"tf": 1}, "pypamguard.load_pamguard_binary_file.timer": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1.4142135623730951}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.is_binary": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.binary_length": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.binary_length": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_binary_representation": {"tf": 1}}, "df": 7, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.BinaryFileException": {"tf": 1}, "pypamguard.core.exceptions.BinaryFileException.__init__": {"tf": 1}, "pypamguard.core.exceptions.BinaryFileException.position": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.BinaryReader": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BinaryReader.as_helper": {"tf": 1}, "pypamguard.core.readers.BinaryReader.var_name": {"tf": 1}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BinaryReader.print": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.fp": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.set_endianess": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.tell": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.millis_to_timestamp": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.timestamp_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.nstring_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.string_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1}}, "df": 17}}}}}}}}}}, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1}, "pypamguard.utils.bitmap": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap": {"tf": 1.4142135623730951}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1.4142135623730951}, "pypamguard.utils.bitmap.Bitmap.fields2index": {"tf": 1.4142135623730951}, "pypamguard.utils.bitmap.Bitmap.index2fields": {"tf": 1.4142135623730951}, "pypamguard.utils.bitmap.Bitmap.size": {"tf": 1.4142135623730951}, "pypamguard.utils.bitmap.Bitmap.bits": {"tf": 1.4142135623730951}, "pypamguard.utils.bitmap.Bitmap.set": {"tf": 1.4142135623730951}, "pypamguard.utils.bitmap.Bitmap.clear": {"tf": 1.4142135623730951}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1.4142135623730951}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1.4142135623730951}, "pypamguard.utils.bitmap.Bitmap.get_binary_representation": {"tf": 1.4142135623730951}}, "df": 13, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.BitmapBinaryReader": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.format": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.labels": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.bm": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}, "s": {"docs": {"pypamguard.modules.processing.ais.AISProcessing.fill_bits": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.bits": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}}, "df": 3}}, "g": {"docs": {"pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"tf": 1}}, "df": 1}}, "m": {"docs": {"pypamguard.core.readers.BitmapBinaryReader.bm": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pypamguard.generics.genfileheader.GenericFileHeader.branch": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_bearing": {"tf": 1}, "pypamguard.utils.annotations.read_bearing_annotation": {"tf": 1}}, "df": 4}}}}, "m": {"docs": {"pypamguard.utils.annotations.read_beam_former_annotation": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.utils.constants.BYTE_ORDERS": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"tf": 1}}, "df": 3, "s": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.bytes_data": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.utils.constants.DEFAULT_BUFFER_SIZE": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"1": {"docs": {"pypamguard.core.pgbfile.process_chunk1": {"tf": 1}}, "df": 1}, "docs": {"pypamguard.base.chunk": {"tf": 1}, "pypamguard.base.chunk.BaseChunk": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.__init__": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.process": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.get_attrs": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.signature": {"tf": 1}, "pypamguard.core.exceptions.WarningException.chunk_info": {"tf": 1}, "pypamguard.core.exceptions.WarningException.chunk": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk": {"tf": 1}}, "df": 10, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pypamguard.core.exceptions.ChunkLengthMismatch": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.DTYPES.CHAR": {"tf": 1}, "pypamguard.core.readers.INTS.CHAR": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.char_data": {"tf": 1}}, "df": 3}, "n": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_chan": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_chan": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.i_chan": {"tf": 1}}, "df": 3, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.modules.detectors.click.ClickDetector.channel_map": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.ais_channel": {"tf": 1}, "pypamguard.utils.constants.CHANNEL": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core": {"tf": 1}, "pypamguard.core.exceptions": {"tf": 1}, "pypamguard.core.exceptions.BinaryFileException": {"tf": 1}, "pypamguard.core.exceptions.BinaryFileException.__init__": {"tf": 1}, "pypamguard.core.exceptions.BinaryFileException.position": {"tf": 1}, "pypamguard.core.exceptions.WarningException": {"tf": 1}, "pypamguard.core.exceptions.WarningException.__init__": {"tf": 1}, "pypamguard.core.exceptions.WarningException.chunk_info": {"tf": 1}, "pypamguard.core.exceptions.WarningException.chunk": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch.__init__": {"tf": 1}, "pypamguard.core.exceptions.CriticalException": {"tf": 1}, "pypamguard.core.exceptions.ModuleNotFoundException": {"tf": 1}, "pypamguard.core.exceptions.FileCorruptedException": {"tf": 1}, "pypamguard.core.exceptions.StructuralException": {"tf": 1}, "pypamguard.core.exceptions.StructuralException.__init__": {"tf": 1}, "pypamguard.core.exceptions.StructuralException.message": {"tf": 1}, "pypamguard.core.exceptions.NoFileHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleFooterException": {"tf": 1}, "pypamguard.core.exceptions.NoFileFooterException": {"tf": 1}, "pypamguard.core.filters": {"tf": 1}, "pypamguard.core.filters.FilterMismatchException": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.SKIP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.KEEP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.STOP": {"tf": 1}, "pypamguard.core.filters.BaseFilter": {"tf": 1}, "pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.BaseFilter.from_json": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.whitelist": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.from_json": {"tf": 1}, "pypamguard.core.filters.RangeFilter": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.filters.RangeFilter.start": {"tf": 1}, "pypamguard.core.filters.RangeFilter.end": {"tf": 1}, "pypamguard.core.filters.RangeFilter.comparator": {"tf": 1}, "pypamguard.core.filters.RangeFilter.validation_func": {"tf": 1}, "pypamguard.core.filters.RangeFilter.ordered": {"tf": 1}, "pypamguard.core.filters.RangeFilter.ignore_none": {"tf": 1}, "pypamguard.core.filters.RangeFilter.default_comparator": {"tf": 1}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.from_json": {"tf": 1}, "pypamguard.core.filters.DateFilter": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}, "pypamguard.core.filters.DateFilter.ignore_timezone": {"tf": 1}, "pypamguard.core.filters.DateFilter.from_json": {"tf": 1}, "pypamguard.core.filters.Filters": {"tf": 1}, "pypamguard.core.filters.Filters.__init__": {"tf": 1}, "pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"tf": 1}, "pypamguard.core.filters.Filters.position": {"tf": 1}, "pypamguard.core.filters.Filters.add": {"tf": 1}, "pypamguard.core.filters.Filters.to_json": {"tf": 1}, "pypamguard.core.filters.Filters.filter": {"tf": 1}, "pypamguard.core.pgbfile": {"tf": 1}, "pypamguard.core.pgbfile.Report": {"tf": 1}, "pypamguard.core.pgbfile.Report.warnings": {"tf": 1}, "pypamguard.core.pgbfile.Report.add_warning": {"tf": 1}, "pypamguard.core.pgbfile.report": {"tf": 1}, "pypamguard.core.pgbfile.mmap_file": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.total_time": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.size": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.file_header": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.module_header": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.module_footer": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.file_footer": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.filters": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.module_class": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.order": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.path": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.module_registry": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.data": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.load": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.to_json": {"tf": 1}, "pypamguard.core.readers": {"tf": 1}, "pypamguard.core.readers.TypeFormat": {"tf": 1}, "pypamguard.core.readers.TypeFormat.__init__": {"tf": 1}, "pypamguard.core.readers.TypeFormat.formatter": {"tf": 1}, "pypamguard.core.readers.TypeFormat.size": {"tf": 1}, "pypamguard.core.readers.DTYPES": {"tf": 1}, "pypamguard.core.readers.DTYPES.CHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.UCHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.SHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.USHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.INT": {"tf": 1}, "pypamguard.core.readers.DTYPES.UINT": {"tf": 1}, "pypamguard.core.readers.DTYPES.LONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.ULONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.FLOAT": {"tf": 1}, "pypamguard.core.readers.DTYPES.DOUBLE": {"tf": 1}, "pypamguard.core.readers.INTS": {"tf": 1}, "pypamguard.core.readers.INTS.CHAR": {"tf": 1}, "pypamguard.core.readers.INTS.UCHAR": {"tf": 1}, "pypamguard.core.readers.INTS.SHORT": {"tf": 1}, "pypamguard.core.readers.INTS.USHORT": {"tf": 1}, "pypamguard.core.readers.INTS.INT": {"tf": 1}, "pypamguard.core.readers.INTS.UINT": {"tf": 1}, "pypamguard.core.readers.INTS.LONG": {"tf": 1}, "pypamguard.core.readers.INTS.ULONG": {"tf": 1}, "pypamguard.core.readers.FLOATS": {"tf": 1}, "pypamguard.core.readers.FLOATS.FLOAT": {"tf": 1}, "pypamguard.core.readers.FLOATS.DOUBLE": {"tf": 1}, "pypamguard.core.readers.BinaryReader": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BinaryReader.as_helper": {"tf": 1}, "pypamguard.core.readers.BinaryReader.var_name": {"tf": 1}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BinaryReader.print": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.shape": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.format": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.post_processor": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.length": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.post_processor": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.length_type": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.function": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.count": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.format": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.labels": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.bm": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": 1}, "pypamguard.core.readers_new": {"tf": 1}, "pypamguard.core.readers_new.DTYPES": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT8": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT8": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT16": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT16": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT64": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT64": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.FLOAT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.FLOAT64": {"tf": 1}, "pypamguard.core.readers_new.Shape": {"tf": 1}, "pypamguard.core.readers_new.Shape.__init__": {"tf": 1}, "pypamguard.core.readers_new.Shape.shape": {"tf": 1}, "pypamguard.core.readers_new.Shape.length": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.fp": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.set_endianess": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.tell": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.millis_to_timestamp": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.timestamp_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.nstring_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.string_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1}, "pypamguard.core.registry": {"tf": 1}, "pypamguard.core.registry.ais_config": {"tf": 1}, "pypamguard.core.registry.click_config": {"tf": 1}, "pypamguard.core.registry.clipgenerator_config": {"tf": 1}, "pypamguard.core.registry.deeplearningclassifier_config": {"tf": 1}, "pypamguard.core.registry.dbht_config": {"tf": 1}, "pypamguard.core.registry.difar_config": {"tf": 1}, "pypamguard.core.registry.noisemonitor_config": {"tf": 1}, "pypamguard.core.registry.noiseband_config": {"tf": 1}, "pypamguard.core.registry.gpl_config": {"tf": 1}, "pypamguard.core.registry.rwedge_config": {"tf": 1}, "pypamguard.core.registry.whistleandmoan_config": {"tf": 1}, "pypamguard.core.registry.longtermspectralaverage_config": {"tf": 1}, "pypamguard.core.registry.ishmael_config": {"tf": 1}, "pypamguard.core.registry.spermwhaleipi_config": {"tf": 1}, "pypamguard.core.registry.geminithreshold_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1}, "pypamguard.core.registry.module_metadata": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.modules": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.get_module": {"tf": 1}, "pypamguard.core.registry.register_preinstalled_modules": {"tf": 1}, "pypamguard.core.serializable": {"tf": 1}, "pypamguard.core.serializable.Serializable": {"tf": 1}, "pypamguard.core.serializable.Serializable.serialize": {"tf": 1}, "pypamguard.core.serializable.Serializable.to_json": {"tf": 1}, "pypamguard.core.serializable.Serializable.from_json": {"tf": 1}}, "df": 201}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.RangeFilter.comparator": {"tf": 1}, "pypamguard.core.filters.RangeFilter.default_comparator": {"tf": 1}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.CustomBinaryReader.count": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count_length": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.registry.ais_config": {"tf": 1}, "pypamguard.core.registry.click_config": {"tf": 1}, "pypamguard.core.registry.clipgenerator_config": {"tf": 1}, "pypamguard.core.registry.deeplearningclassifier_config": {"tf": 1}, "pypamguard.core.registry.dbht_config": {"tf": 1}, "pypamguard.core.registry.difar_config": {"tf": 1}, "pypamguard.core.registry.noisemonitor_config": {"tf": 1}, "pypamguard.core.registry.noiseband_config": {"tf": 1}, "pypamguard.core.registry.gpl_config": {"tf": 1}, "pypamguard.core.registry.rwedge_config": {"tf": 1}, "pypamguard.core.registry.whistleandmoan_config": {"tf": 1}, "pypamguard.core.registry.longtermspectralaverage_config": {"tf": 1}, "pypamguard.core.registry.ishmael_config": {"tf": 1}, "pypamguard.core.registry.spermwhaleipi_config": {"tf": 1}, "pypamguard.core.registry.geminithreshold_config": {"tf": 1}, "pypamguard.logger.logger_config": {"tf": 1}}, "df": 16}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour_width": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.utils.constants": {"tf": 1}, "pypamguard.utils.constants.TIME_RANGE": {"tf": 1}, "pypamguard.utils.constants.UID_RANGE": {"tf": 1}, "pypamguard.utils.constants.UID_LIST": {"tf": 1}, "pypamguard.utils.constants.FILTER": {"tf": 1}, "pypamguard.utils.constants.CHANNEL": {"tf": 1}, "pypamguard.utils.constants.DEFAULT_BUFFER_SIZE": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"tf": 1}, "pypamguard.utils.constants.IdentifierType": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.IGNORE": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_BACKGROUND": {"tf": 1}}, "df": 17}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.species_code": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.logger.Verbosity.CRITICAL": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.CriticalException": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.pgbfile.PGBFile.module_class": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_class": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.classifiers": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.type": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.is_binary": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.scale": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_species": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.predictions": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_class": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_chan": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_samps": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.scale": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.wave": {"tf": 1}}, "df": 16}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pypamguard.core.registry.click_config": {"tf": 1}, "pypamguard.modules.detectors.click": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count_length": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.noise_len": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.background": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.start_sample": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.channel_map": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.trigger_map": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.type": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.flags": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.delays": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.angles": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.angle_errors": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.duration": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.wave": {"tf": 1}}, "df": 22, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.start_sample": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.channel_map": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.trigger_map": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.type": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.flags": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.delays": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.angles": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.angle_errors": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.duration": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.wave": {"tf": 1}}, "df": 12, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count_length": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count": {"tf": 1}}, "df": 4}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.noise_len": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.background": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.modules.detectors.clicktriggerbackground": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1.4142135623730951}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.__init__": {"tf": 1.4142135623730951}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.scale": {"tf": 1.4142135623730951}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.raw_levels": {"tf": 1.4142135623730951}}, "df": 7, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.clip_start": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.clipgenerator_config": {"tf": 1}, "pypamguard.modules.processing.clipgenerator": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.__init__": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_millis": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.file_name": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_name": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_uid": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_chan": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_samps": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.scale": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.wave": {"tf": 1.4142135623730951}}, "df": 12}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.utils.bitmap.Bitmap.clear": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.CustomBinaryReader": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.function": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.count": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}, "i": {"docs": {"pypamguard.modules.processing.noisemonitor.NoiseMonitor.i_chan": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.base.chunk.BaseChunk.__init__": {"tf": 1}, "pypamguard.core.exceptions.BinaryFileException.__init__": {"tf": 1}, "pypamguard.core.exceptions.WarningException.__init__": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch.__init__": {"tf": 1}, "pypamguard.core.exceptions.StructuralException.__init__": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}, "pypamguard.core.filters.Filters.__init__": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}, "pypamguard.core.readers.TypeFormat.__init__": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.Shape.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.__init__": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo.__init__": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.__init__": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.__init__": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.__init__": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.__init__": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.__init__": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.__init__": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.__init__": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.__init__": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground.__init__": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.__init__": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.__init__": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader.__init__": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule.__init__": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.__init__": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.__init__": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 59}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.core.exceptions.WarningException.chunk_info": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.extra_info_len": {"tf": 1}, "pypamguard.logger.Verbosity.INFO": {"tf": 1}, "pypamguard.logger.Logger.info": {"tf": 1}}, "df": 4}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"tf": 1}}, "df": 1}}}}}}}, "t": {"1": {"6": {"docs": {"pypamguard.core.readers_new.DTYPES.INT16": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"pypamguard.core.readers_new.DTYPES.INT32": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"pypamguard.core.readers_new.DTYPES.INT64": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "8": {"docs": {"pypamguard.core.readers_new.DTYPES.INT8": {"tf": 1}}, "df": 1}, "docs": {"pypamguard.core.readers.DTYPES.INT": {"tf": 1}, "pypamguard.core.readers.INTS.INT": {"tf": 1}}, "df": 2, "s": {"docs": {"pypamguard.core.readers.INTS": {"tf": 1}, "pypamguard.core.readers.INTS.CHAR": {"tf": 1}, "pypamguard.core.readers.INTS.UCHAR": {"tf": 1}, "pypamguard.core.readers.INTS.SHORT": {"tf": 1}, "pypamguard.core.readers.INTS.USHORT": {"tf": 1}, "pypamguard.core.readers.INTS.INT": {"tf": 1}, "pypamguard.core.readers.INTS.UINT": {"tf": 1}, "pypamguard.core.readers.INTS.LONG": {"tf": 1}, "pypamguard.core.readers.INTS.ULONG": {"tf": 1}}, "df": 9}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"2": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.utils.bitmap.Bitmap.index2fields": {"tf": 1}}, "df": 1}}}}}}}, "docs": {}, "df": 0}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.RangeFilter.ignore_none": {"tf": 1}, "pypamguard.core.filters.DateFilter.ignore_timezone": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.IGNORE": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.is_binary": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.core.registry.ishmael_config": {"tf": 1}, "pypamguard.modules.processing.ishmael": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.__init__": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.peak_height": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.time_sample": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}}, "df": 7, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.__init__": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.peak_height": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.time_sample": {"tf": 1}}, "df": 4}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_id": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.generics.genfilefooter.GenericFileFooter.identifier": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.identifier": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.identifier": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.identifier": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.identifier": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.identifier": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.identifier": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.utils.constants.IdentifierType": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.IGNORE": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_BACKGROUND": {"tf": 1}}, "df": 7}}}}}}}}}}}}, "s": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_ids": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi_amplitude": {"tf": 1}}, "df": 2}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.base.chunk.BaseChunk.get_attrs": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.get_module": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_binary_representation": {"tf": 1}}, "df": 4}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.registry.geminithreshold_config": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_points": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_sonar": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_ids": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.straight_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.wobbly_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.mean_occupancy": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.time_millis": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_id": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.obj_size": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.occupancy": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.ave_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.tot_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.dates": {"tf": 1}}, "df": 28, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_points": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_sonar": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_ids": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.straight_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.wobbly_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.mean_occupancy": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.time_millis": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_id": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.obj_size": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.occupancy": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.ave_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.tot_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.dates": {"tf": 1}}, "df": 22, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground.__init__": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.generics": {"tf": 1}, "pypamguard.generics.genbackground": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1}, "pypamguard.generics.genchunkinfo": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo.__init__": {"tf": 1}, "pypamguard.generics.genfilefooter": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.__init__": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.length": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.identifier": {"tf": 1}, "pypamguard.generics.genfileheader": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.__init__": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.length": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.identifier": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.file_format": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.pamguard": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.version": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.branch": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.data_date": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.analysis_date": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.start_sample": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_type": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_name": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.stream_name": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.extra_info_len": {"tf": 1}, "pypamguard.generics.genmodule": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1}, "pypamguard.generics.genmodulefooter": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.length": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.identifier": {"tf": 1}, "pypamguard.generics.genmoduleheader": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.length": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.identifier": {"tf": 1}}, "df": 41}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.__init__": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.length": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.identifier": {"tf": 1}}, "df": 4}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.__init__": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.length": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.identifier": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.file_format": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.pamguard": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.version": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.branch": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.data_date": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.analysis_date": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.start_sample": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_type": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_name": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.stream_name": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.extra_info_len": {"tf": 1}}, "df": 15}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.length": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.identifier": {"tf": 1}}, "df": 4}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.length": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.identifier": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.generics.genbackground": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1}}, "df": 3}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.generics.genchunkinfo": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo.__init__": {"tf": 1}}, "df": 3}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.generics.genfilefooter": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.__init__": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.length": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.identifier": {"tf": 1}}, "df": 5}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.generics.genfileheader": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.__init__": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.length": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.identifier": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.file_format": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.pamguard": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.version": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.branch": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.data_date": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.analysis_date": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.start_sample": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_type": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_name": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.stream_name": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.extra_info_len": {"tf": 1}}, "df": 16}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.generics.genmodule": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1}}, "df": 3, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.generics.genmodulefooter": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.length": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.identifier": {"tf": 1}}, "df": 5}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.generics.genmoduleheader": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.length": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.identifier": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.core.registry.gpl_config": {"tf": 1}, "pypamguard.modules.detectors.gpl": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector.__init__": {"tf": 1}}, "df": 4, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.gain": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.tracked_group": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.a": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.base.chunk.BaseChunk.get_attrs": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.filters.Filters.add": {"tf": 1}, "pypamguard.core.pgbfile.Report.add_warning": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.generics.genfileheader.GenericFileHeader.analysis_date": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date": {"tf": 1}}, "df": 3}}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.detectors.click.ClickDetector.angle_errors": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_angle": {"tf": 1}}, "df": 2, "s": {"docs": {"pypamguard.modules.detectors.click.ClickDetector.angles": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.utils.annotations.read_beam_former_annotation": {"tf": 1}, "pypamguard.utils.annotations.read_bearing_annotation": {"tf": 1}}, "df": 2, "s": {"docs": {"pypamguard.utils.annotations": {"tf": 1}, "pypamguard.utils.annotations.read_beam_former_annotation": {"tf": 1}, "pypamguard.utils.annotations.read_bearing_annotation": {"tf": 1}}, "df": 3}}}}}}}}}}, "s": {"docs": {"pypamguard.core.readers.BinaryReader.as_helper": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.registry.ais_config": {"tf": 1}, "pypamguard.modules.processing.ais": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.mmsi_number": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.fill_bits": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.char_data": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.ais_channel": {"tf": 1.4142135623730951}}, "df": 8, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.mmsi_number": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.fill_bits": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.char_data": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.ais_channel": {"tf": 1}}, "df": 6}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_amp": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.amplitude": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi_amplitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.amplitude": {"tf": 1}}, "df": 3}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.ave_value": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.base.chunk.BaseChunk.signature": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {"pypamguard.modules.detectors.rwedge.RWEdgeDetector.signal": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile.PGBFile.size": {"tf": 1}, "pypamguard.core.readers.TypeFormat.size": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.obj_size": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.size": {"tf": 1}, "pypamguard.utils.constants.DEFAULT_BUFFER_SIZE": {"tf": 1}}, "df": 5}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.StructuralException": {"tf": 1}, "pypamguard.core.exceptions.StructuralException.__init__": {"tf": 1}, "pypamguard.core.exceptions.StructuralException.message": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.readers_new.BinaryReader.string_read": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.StringNBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.length": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.post_processor": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.StringBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.length_type": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pypamguard.generics.genfileheader.GenericFileHeader.stream_name": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.straight_length": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.filters.FILTER_POSITION.STOP": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.filters.RangeFilter.start": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.start_sample": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.start_sample": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.clip_start": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.stats_types": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.standard": {"tf": 1}, "pypamguard.standard.stdbackground": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground.__init__": {"tf": 1}, "pypamguard.standard.stdchunkinfo": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.__init__": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.length": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.identifier": {"tf": 1}, "pypamguard.standard.stddata": {"tf": 1}, "pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}, "pypamguard.standard.stddata.StandardDataMixin": {"tf": 1}, "pypamguard.standard.stdfilefooter": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.__init__": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.n_objects": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_sample": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.lowest_uid": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.highest_uid": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.file_length": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_reason": {"tf": 1}, "pypamguard.standard.stdfileheader": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader.__init__": {"tf": 1}, "pypamguard.standard.stdmodule": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule.__init__": {"tf": 1}, "pypamguard.standard.stdmodulefooter": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.__init__": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.length": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.identifier": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.binary_length": {"tf": 1}, "pypamguard.standard.stdmoduleheader": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.__init__": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.length": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.identifier": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.version": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.binary_length": {"tf": 1}}, "df": 44, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.__init__": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.length": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.identifier": {"tf": 1}}, "df": 4}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.standard.stddata.StandardDataMixin": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.__init__": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.n_objects": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_sample": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.lowest_uid": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.highest_uid": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.file_length": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_reason": {"tf": 1}}, "df": 12}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.standard.stdmodule.StandardModule": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule.__init__": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.__init__": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.length": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.identifier": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.binary_length": {"tf": 1}}, "df": 5}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.__init__": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.length": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.identifier": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.version": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.binary_length": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.standard.stdbackground": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground.__init__": {"tf": 1}}, "df": 3}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.standard.stdchunkinfo": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.__init__": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.length": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.identifier": {"tf": 1}}, "df": 5}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pypamguard.standard.stddata": {"tf": 1}, "pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}, "pypamguard.standard.stddata.StandardDataMixin": {"tf": 1}}, "df": 3}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.standard.stdfilefooter": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.__init__": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.n_objects": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_sample": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.lowest_uid": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.highest_uid": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.file_length": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_reason": {"tf": 1}}, "df": 13}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.standard.stdfileheader": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader.__init__": {"tf": 1}}, "df": 3}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.standard.stdmodule": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule.__init__": {"tf": 1}}, "df": 3, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.standard.stdmodulefooter": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.__init__": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.length": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.identifier": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.binary_length": {"tf": 1}}, "df": 6}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.standard.stdmoduleheader": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.__init__": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.length": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.identifier": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.version": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.binary_length": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.filters.FILTER_POSITION.SKIP": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.DTYPES.SHORT": {"tf": 1}, "pypamguard.core.readers.INTS.SHORT": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.shape": {"tf": 1}, "pypamguard.core.readers_new.Shape": {"tf": 1}, "pypamguard.core.readers_new.Shape.__init__": {"tf": 1}, "pypamguard.core.readers_new.Shape.shape": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.Shape.length": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers_new.BinaryReader.set_endianess": {"tf": 1}, "pypamguard.logger.Logger.set_verbosity": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}}, "df": 5}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.serializable": {"tf": 1}, "pypamguard.core.serializable.Serializable": {"tf": 1.4142135623730951}, "pypamguard.core.serializable.Serializable.serialize": {"tf": 1.4142135623730951}, "pypamguard.core.serializable.Serializable.to_json": {"tf": 1.4142135623730951}, "pypamguard.core.serializable.Serializable.from_json": {"tf": 1.4142135623730951}}, "df": 5}}}}, "e": {"docs": {"pypamguard.core.serializable.Serializable.serialize": {"tf": 1}, "pypamguard.utils.serializer.serialize": {"tf": 1}}, "df": 2, "r": {"docs": {"pypamguard.utils.serializer": {"tf": 1}, "pypamguard.utils.serializer.serialize": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.sel_angle": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_freq": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"pypamguard.core.registry.spermwhaleipi_config": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1.4142135623730951}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.__init__": {"tf": 1.4142135623730951}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.parent_uid": {"tf": 1.4142135623730951}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi": {"tf": 1.4142135623730951}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi_amplitude": {"tf": 1.4142135623730951}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.sample_rate": {"tf": 1.4142135623730951}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.max_val": {"tf": 1.4142135623730951}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_len": {"tf": 1.4142135623730951}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_data": {"tf": 1.4142135623730951}}, "df": 11}}}}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_species": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.species_code": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.modules.detectors.spectralbackground": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1.4142135623730951}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.__init__": {"tf": 1.4142135623730951}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.first_bin": {"tf": 1.4142135623730951}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.noise_len": {"tf": 1.4142135623730951}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.background": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.generics.genfileheader.GenericFileHeader.start_sample": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.start_sample": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.sample_rate": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.display_sample_rate": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.time_sample": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_sample": {"tf": 1}}, "df": 6}}, "s": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_samps": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_samps": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.scale": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.scale": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.scale": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.delay_scale": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.scale": {"tf": 1}}, "df": 5}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.detectors.rwedge.RWEdgeDetector.slice_nums": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.slice_numbers": {"tf": 1}}, "df": 2, "s": {"docs": {"pypamguard.modules.detectors.rwedge.RWEdgeDetector.n_slices": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_slices": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_sonar": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_ids": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_id": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.exceptions": {"tf": 1}, "pypamguard.core.exceptions.BinaryFileException": {"tf": 1}, "pypamguard.core.exceptions.BinaryFileException.__init__": {"tf": 1}, "pypamguard.core.exceptions.BinaryFileException.position": {"tf": 1}, "pypamguard.core.exceptions.WarningException": {"tf": 1}, "pypamguard.core.exceptions.WarningException.__init__": {"tf": 1}, "pypamguard.core.exceptions.WarningException.chunk_info": {"tf": 1}, "pypamguard.core.exceptions.WarningException.chunk": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch.__init__": {"tf": 1}, "pypamguard.core.exceptions.CriticalException": {"tf": 1}, "pypamguard.core.exceptions.ModuleNotFoundException": {"tf": 1}, "pypamguard.core.exceptions.FileCorruptedException": {"tf": 1}, "pypamguard.core.exceptions.StructuralException": {"tf": 1}, "pypamguard.core.exceptions.StructuralException.__init__": {"tf": 1}, "pypamguard.core.exceptions.StructuralException.message": {"tf": 1}, "pypamguard.core.exceptions.NoFileHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleFooterException": {"tf": 1}, "pypamguard.core.exceptions.NoFileFooterException": {"tf": 1}}, "df": 20}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"pypamguard.generics.genfileheader.GenericFileHeader.extra_info_len": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.filters.RangeFilter.end": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_millis": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_sample": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_reason": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.readers_new.BinaryReader.set_endianess": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.logger.Verbosity.ERROR": {"tf": 1}, "pypamguard.logger.Logger.error": {"tf": 1}}, "df": 2, "s": {"docs": {"pypamguard.modules.detectors.click.ClickDetector.angle_errors": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.errors": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_len": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_data": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.lo_edges": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.hi_edges": {"tf": 1}}, "df": 2}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.pgbfile.Report.add_warning": {"tf": 1}, "pypamguard.logger.Verbosity.WARNING": {"tf": 1}, "pypamguard.logger.Logger.warning": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.WarningException": {"tf": 1}, "pypamguard.core.exceptions.WarningException.__init__": {"tf": 1}, "pypamguard.core.exceptions.WarningException.chunk_info": {"tf": 1}, "pypamguard.core.exceptions.WarningException.chunk": {"tf": 1}}, "df": 4}}}}}}}}}, "s": {"docs": {"pypamguard.core.pgbfile.Report.warnings": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.wave": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.wave": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.wave": {"tf": 1}}, "df": 3}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.filters.WhitelistFilter.whitelist": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.WhitelistFilter": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.whitelist": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.from_json": {"tf": 1}}, "df": 5}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.registry.whistleandmoan_config": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.delay_scale": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_slices": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.amplitude": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour_width": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.slice_numbers": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_peaks": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.peak_data": {"tf": 1}}, "df": 14, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_slices": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.amplitude": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour_width": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.slice_numbers": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_peaks": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.peak_data": {"tf": 1}}, "df": 9, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.delay_scale": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour_width": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.wobbly_length": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile.PGBFile.module_header": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.module_footer": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.module_class": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.module_registry": {"tf": 1}, "pypamguard.core.registry.module_metadata": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.get_module": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_type": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_name": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_FOOTER": {"tf": 1}}, "df": 12, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.ModuleNotFoundException": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "s": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.modules": {"tf": 1}, "pypamguard.core.registry.register_preinstalled_modules": {"tf": 1}, "pypamguard.modules": {"tf": 1}, "pypamguard.modules.classifiers": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.type": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.is_binary": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.scale": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_species": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.predictions": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_class": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_chan": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_samps": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.scale": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.wave": {"tf": 1}, "pypamguard.modules.detectors": {"tf": 1}, "pypamguard.modules.detectors.click": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count_length": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.noise_len": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.background": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.start_sample": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.channel_map": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.trigger_map": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.type": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.flags": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.delays": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.angles": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.angle_errors": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.duration": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.wave": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.__init__": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.scale": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.raw_levels": {"tf": 1}, "pypamguard.modules.detectors.gpl": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.rwedge": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.type": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.signal": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.noise": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.n_slices": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.slice_nums": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.lo_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.hi_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_amp": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.__init__": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.first_bin": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.noise_len": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.background": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.delay_scale": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_slices": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.amplitude": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour_width": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.slice_numbers": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_peaks": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.peak_data": {"tf": 1}, "pypamguard.modules.plugins": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_points": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_sonar": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_ids": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.straight_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.wobbly_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.mean_occupancy": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.time_millis": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_id": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.obj_size": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.occupancy": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.ave_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.tot_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.dates": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.__init__": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.parent_uid": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi_amplitude": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.sample_rate": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.max_val": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_len": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_data": {"tf": 1}, "pypamguard.modules.processing": {"tf": 1}, "pypamguard.modules.processing.ais": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.mmsi_number": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.fill_bits": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.char_data": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.ais_channel": {"tf": 1}, "pypamguard.modules.processing.clipgenerator": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.__init__": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_millis": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.file_name": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_name": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_uid": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_chan": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_samps": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.scale": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.wave": {"tf": 1}, "pypamguard.modules.processing.dbht": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.rms": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.zero_peak": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.peak_peak": {"tf": 1}, "pypamguard.modules.processing.difar": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.clip_start": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.display_sample_rate": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demuxed_length": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.amplitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.gain": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_angle": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_freq": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.species_code": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.tracked_group": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.max_val": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demux_data": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.num_matches": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.latitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.longitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.errors": {"tf": 1}, "pypamguard.modules.processing.ishmael": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.__init__": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.peak_height": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.time_sample": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.__init__": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.a": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.b": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_millis": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.n_fft": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.max_val": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.bytes_data": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.data": {"tf": 1}, "pypamguard.modules.processing.noiseband": {"tf": 1}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.stats_types": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.lo_edges": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.hi_edges": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.i_chan": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_measures": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.noise": {"tf": 1}}, "df": 198}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.core.registry.ModuleRegistry": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.modules": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.get_module": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.exceptions.StructuralException.message": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pypamguard.core.registry.module_metadata": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.mean_occupancy": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_measures": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.pgbfile.mmap_file": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "i": {"docs": {"pypamguard.modules.processing.ais.AISProcessing.mmsi_number": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.readers_new.BinaryReader.millis_to_timestamp": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.time_millis": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_millis": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_millis": {"tf": 1}}, "df": 4}}}}, "n": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_range": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.main": {"tf": 1}}, "df": 1}}, "p": {"docs": {"pypamguard.modules.detectors.click.ClickDetector.channel_map": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.trigger_map": {"tf": 1}}, "df": 2}, "x": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_value": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.max_val": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.max_val": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.max_val": {"tf": 1}}, "df": 6}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.num_matches": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile.mmap_file": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.file_header": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.file_footer": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.file_format": {"tf": 1}, "pypamguard.load_pamguard_binary_file": {"tf": 1}, "pypamguard.load_pamguard_binary_file.timer": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.file_name": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.file_length": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_BACKGROUND": {"tf": 1}}, "df": 12, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.FileCorruptedException": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.FILTER_POSITION": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.SKIP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.KEEP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.STOP": {"tf": 1}, "pypamguard.core.filters.Filters.filter": {"tf": 1}, "pypamguard.utils.constants.FILTER": {"tf": 1}}, "df": 6, "s": {"docs": {"pypamguard.core.filters": {"tf": 1}, "pypamguard.core.filters.FilterMismatchException": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.SKIP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.KEEP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.STOP": {"tf": 1}, "pypamguard.core.filters.BaseFilter": {"tf": 1}, "pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.BaseFilter.from_json": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.whitelist": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.from_json": {"tf": 1}, "pypamguard.core.filters.RangeFilter": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.filters.RangeFilter.start": {"tf": 1}, "pypamguard.core.filters.RangeFilter.end": {"tf": 1}, "pypamguard.core.filters.RangeFilter.comparator": {"tf": 1}, "pypamguard.core.filters.RangeFilter.validation_func": {"tf": 1}, "pypamguard.core.filters.RangeFilter.ordered": {"tf": 1}, "pypamguard.core.filters.RangeFilter.ignore_none": {"tf": 1}, "pypamguard.core.filters.RangeFilter.default_comparator": {"tf": 1}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.from_json": {"tf": 1}, "pypamguard.core.filters.DateFilter": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}, "pypamguard.core.filters.DateFilter.ignore_timezone": {"tf": 1}, "pypamguard.core.filters.DateFilter.from_json": {"tf": 1}, "pypamguard.core.filters.Filters": {"tf": 1.4142135623730951}, "pypamguard.core.filters.Filters.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"tf": 1.7320508075688772}, "pypamguard.core.filters.Filters.position": {"tf": 1.4142135623730951}, "pypamguard.core.filters.Filters.add": {"tf": 1.4142135623730951}, "pypamguard.core.filters.Filters.to_json": {"tf": 1.4142135623730951}, "pypamguard.core.filters.Filters.filter": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.PGBFile.filters": {"tf": 1}}, "df": 37}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.filters.FilterMismatchException": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {"pypamguard.modules.processing.ais.AISProcessing.fill_bits": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.modules.detectors.spectralbackground.SpectralBackground.first_bin": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"2": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"pypamguard.utils.bitmap.Bitmap.fields2index": {"tf": 1}}, "df": 1}}}}}}, "docs": {"pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pypamguard.core.filters.BaseFilter.from_json": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.from_json": {"tf": 1}, "pypamguard.core.filters.RangeFilter.from_json": {"tf": 1}, "pypamguard.core.filters.DateFilter.from_json": {"tf": 1}, "pypamguard.core.serializable.Serializable.from_json": {"tf": 1}}, "df": 5}}, "e": {"docs": {}, "df": 0, "q": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.sel_freq": {"tf": 1}}, "df": 1, "s": {"docs": {"pypamguard.modules.detectors.rwedge.RWEdgeDetector.lo_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.hi_freqs": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"pypamguard.core.filters.RangeFilter.validation_func": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.readers.CustomBinaryReader.function": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.pgbfile.PGBFile.module_footer": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.file_footer": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_FOOTER": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.format": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.format": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.file_format": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.TypeFormat.formatter": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.utils.annotations.read_beam_former_annotation": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"pypamguard.core.readers_new.DTYPES.FLOAT32": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"pypamguard.core.readers_new.DTYPES.FLOAT64": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"pypamguard.core.readers.DTYPES.FLOAT": {"tf": 1}, "pypamguard.core.readers.FLOATS.FLOAT": {"tf": 1}}, "df": 2, "s": {"docs": {"pypamguard.core.readers.FLOATS": {"tf": 1}, "pypamguard.core.readers.FLOATS.FLOAT": {"tf": 1}, "pypamguard.core.readers.FLOATS.DOUBLE": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}}, "df": 1, "s": {"docs": {"pypamguard.modules.detectors.click.ClickDetector.flags": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"pypamguard.core.readers_new.BinaryReader.fp": {"tf": 1}}, "df": 1}, "f": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.n_fft": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_species": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_class": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_chan": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_samps": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.n_slices": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_slices": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_peaks": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_points": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_sonar": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_chan": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_samps": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.n_fft": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_measures": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.n_objects": {"tf": 1}}, "df": 16, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.NoFileHeaderException": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.NoFileFooterException": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.NoModuleHeaderException": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.NoModuleFooterException": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.RangeFilter.ignore_none": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.detectors.click.ClickDetectorBackgound.noise_len": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.noise": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.noise_len": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.noise": {"tf": 1}}, "df": 4, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.noisemonitor_config": {"tf": 1}, "pypamguard.modules.processing.noisemonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.stats_types": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.lo_edges": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.hi_edges": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.__init__": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.i_chan": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_bands": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_measures": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.noise": {"tf": 1.4142135623730951}}, "df": 14, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.stats_types": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.lo_edges": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.hi_edges": {"tf": 1}}, "df": 6}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.registry.noiseband_config": {"tf": 1}, "pypamguard.modules.processing.noiseband": {"tf": 1}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}}, "df": 3, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.BinaryReader.var_name": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_name": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.stream_name": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.file_name": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_name": {"tf": 1}}, "df": 5}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.num_matches": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.NumericalBinaryReader": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.shape": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.format": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.post_processor": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}, "s": {"docs": {"pypamguard.modules.detectors.rwedge.RWEdgeDetector.slice_nums": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.processing.ais.AISProcessing.mmsi_number": {"tf": 1}}, "df": 1, "s": {"docs": {"pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.slice_numbers": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"pypamguard.core.readers_new": {"tf": 1}, "pypamguard.core.readers_new.DTYPES": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT8": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT8": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT16": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT16": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT64": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT64": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.FLOAT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.FLOAT64": {"tf": 1}, "pypamguard.core.readers_new.Shape": {"tf": 1}, "pypamguard.core.readers_new.Shape.__init__": {"tf": 1}, "pypamguard.core.readers_new.Shape.shape": {"tf": 1}, "pypamguard.core.readers_new.Shape.length": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.fp": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.set_endianess": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.tell": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.millis_to_timestamp": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.timestamp_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.nstring_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.string_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1}}, "df": 27}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.readers_new.BinaryReader.nstring_read": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.filters.FILTER_POSITION.KEEP": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.filters.BaseFilter.from_json": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.from_json": {"tf": 1}, "pypamguard.core.filters.RangeFilter.from_json": {"tf": 1}, "pypamguard.core.filters.DateFilter.from_json": {"tf": 1}, "pypamguard.core.filters.Filters.to_json": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.to_json": {"tf": 1}, "pypamguard.core.serializable.Serializable.to_json": {"tf": 1}, "pypamguard.core.serializable.Serializable.from_json": {"tf": 1}}, "df": 8}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_range": {"tf": 1}, "pypamguard.utils.constants.TIME_RANGE": {"tf": 1}, "pypamguard.utils.constants.UID_RANGE": {"tf": 1}}, "df": 5, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.RangeFilter": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.filters.RangeFilter.start": {"tf": 1}, "pypamguard.core.filters.RangeFilter.end": {"tf": 1}, "pypamguard.core.filters.RangeFilter.comparator": {"tf": 1}, "pypamguard.core.filters.RangeFilter.validation_func": {"tf": 1}, "pypamguard.core.filters.RangeFilter.ordered": {"tf": 1}, "pypamguard.core.filters.RangeFilter.ignore_none": {"tf": 1}, "pypamguard.core.filters.RangeFilter.default_comparator": {"tf": 1}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.from_json": {"tf": 1}}, "df": 11}}}}}}}}}, "w": {"docs": {"pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.raw_levels": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date_raw": {"tf": 1}}, "df": 3}, "t": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.sample_rate": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.display_sample_rate": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.pgbfile.Report": {"tf": 1}, "pypamguard.core.pgbfile.Report.warnings": {"tf": 1}, "pypamguard.core.pgbfile.Report.add_warning": {"tf": 1}, "pypamguard.core.pgbfile.report": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.utils.bitmap.Bitmap.get_binary_representation": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.core.pgbfile.PGBFile.module_registry": {"tf": 1}, "pypamguard.core.registry": {"tf": 1}, "pypamguard.core.registry.ais_config": {"tf": 1}, "pypamguard.core.registry.click_config": {"tf": 1}, "pypamguard.core.registry.clipgenerator_config": {"tf": 1}, "pypamguard.core.registry.deeplearningclassifier_config": {"tf": 1}, "pypamguard.core.registry.dbht_config": {"tf": 1}, "pypamguard.core.registry.difar_config": {"tf": 1}, "pypamguard.core.registry.noisemonitor_config": {"tf": 1}, "pypamguard.core.registry.noiseband_config": {"tf": 1}, "pypamguard.core.registry.gpl_config": {"tf": 1}, "pypamguard.core.registry.rwedge_config": {"tf": 1}, "pypamguard.core.registry.whistleandmoan_config": {"tf": 1}, "pypamguard.core.registry.longtermspectralaverage_config": {"tf": 1}, "pypamguard.core.registry.ishmael_config": {"tf": 1}, "pypamguard.core.registry.spermwhaleipi_config": {"tf": 1}, "pypamguard.core.registry.geminithreshold_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1}, "pypamguard.core.registry.module_metadata": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.modules": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.get_module": {"tf": 1}, "pypamguard.core.registry.register_preinstalled_modules": {"tf": 1}}, "df": 25}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}, "pypamguard.core.registry.register_preinstalled_modules": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.timestamp_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.nstring_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.string_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1}, "pypamguard.utils.annotations.read_beam_former_annotation": {"tf": 1}, "pypamguard.utils.annotations.read_bearing_annotation": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.readers": {"tf": 1}, "pypamguard.core.readers.TypeFormat": {"tf": 1}, "pypamguard.core.readers.TypeFormat.__init__": {"tf": 1}, "pypamguard.core.readers.TypeFormat.formatter": {"tf": 1}, "pypamguard.core.readers.TypeFormat.size": {"tf": 1}, "pypamguard.core.readers.DTYPES": {"tf": 1}, "pypamguard.core.readers.DTYPES.CHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.UCHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.SHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.USHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.INT": {"tf": 1}, "pypamguard.core.readers.DTYPES.UINT": {"tf": 1}, "pypamguard.core.readers.DTYPES.LONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.ULONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.FLOAT": {"tf": 1}, "pypamguard.core.readers.DTYPES.DOUBLE": {"tf": 1}, "pypamguard.core.readers.INTS": {"tf": 1}, "pypamguard.core.readers.INTS.CHAR": {"tf": 1}, "pypamguard.core.readers.INTS.UCHAR": {"tf": 1}, "pypamguard.core.readers.INTS.SHORT": {"tf": 1}, "pypamguard.core.readers.INTS.USHORT": {"tf": 1}, "pypamguard.core.readers.INTS.INT": {"tf": 1}, "pypamguard.core.readers.INTS.UINT": {"tf": 1}, "pypamguard.core.readers.INTS.LONG": {"tf": 1}, "pypamguard.core.readers.INTS.ULONG": {"tf": 1}, "pypamguard.core.readers.FLOATS": {"tf": 1}, "pypamguard.core.readers.FLOATS.FLOAT": {"tf": 1}, "pypamguard.core.readers.FLOATS.DOUBLE": {"tf": 1}, "pypamguard.core.readers.BinaryReader": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BinaryReader.as_helper": {"tf": 1}, "pypamguard.core.readers.BinaryReader.var_name": {"tf": 1}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BinaryReader.print": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.shape": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.format": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.post_processor": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.length": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.post_processor": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.length_type": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.function": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.count": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.format": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.labels": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.bm": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": 1}, "pypamguard.core.readers_new": {"tf": 1}, "pypamguard.core.readers_new.DTYPES": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT8": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT8": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT16": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT16": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT64": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT64": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.FLOAT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.FLOAT64": {"tf": 1}, "pypamguard.core.readers_new.Shape": {"tf": 1}, "pypamguard.core.readers_new.Shape.__init__": {"tf": 1}, "pypamguard.core.readers_new.Shape.shape": {"tf": 1}, "pypamguard.core.readers_new.Shape.length": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.fp": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.set_endianess": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.tell": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.millis_to_timestamp": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.timestamp_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.nstring_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.string_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1}}, "df": 90}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.standard.stdfilefooter.StandardFileFooter.end_reason": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.registry.rwedge_config": {"tf": 1}, "pypamguard.modules.detectors.rwedge": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.type": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.signal": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.noise": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.n_slices": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.slice_nums": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.lo_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.hi_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_amp": {"tf": 1}}, "df": 13, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.type": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.signal": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.noise": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.n_slices": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.slice_nums": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.lo_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.hi_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_amp": {"tf": 1}}, "df": 11}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.processing.dbht.DbHtProcessing.rms": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.max_val": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.max_val": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.max_val": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.filters.RangeFilter.validation_func": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.ave_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.tot_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_value": {"tf": 1}}, "df": 3}}}, "r": {"docs": {"pypamguard.core.readers.BinaryReader.var_name": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.generics.genfileheader.GenericFileHeader.version": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.version": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.logger.Verbosity": {"tf": 1}, "pypamguard.logger.Verbosity.CRITICAL": {"tf": 1}, "pypamguard.logger.Verbosity.ERROR": {"tf": 1}, "pypamguard.logger.Verbosity.WARNING": {"tf": 1}, "pypamguard.logger.Verbosity.INFO": {"tf": 1}, "pypamguard.logger.Verbosity.DEBUG": {"tf": 1}, "pypamguard.logger.Logger.verbosity": {"tf": 1}, "pypamguard.logger.Logger.set_verbosity": {"tf": 1}}, "df": 8}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.pgbfile.PGBFile.order": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.filters.RangeFilter.ordered": {"tf": 1}}, "df": 1}}, "s": {"docs": {"pypamguard.utils.constants.BYTE_ORDERS": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.mean_occupancy": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.occupancy": {"tf": 1}}, "df": 2}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.obj_size": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.standard.stdfilefooter.StandardFileFooter.n_objects": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.filters.RangeFilter.default_comparator": {"tf": 1}, "pypamguard.utils.constants.DEFAULT_BUFFER_SIZE": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.deeplearningclassifier_config": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.type": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.is_binary": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.scale": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_species": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.predictions": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_class": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_chan": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_samps": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.scale": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.wave": {"tf": 1}}, "df": 16}}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.logger.Verbosity.DEBUG": {"tf": 1}, "pypamguard.logger.Logger.debug": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.detectors": {"tf": 1}, "pypamguard.modules.detectors.click": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count_length": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.noise_len": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.background": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.start_sample": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.channel_map": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.trigger_map": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.type": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.flags": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.delays": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.angles": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.angle_errors": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.duration": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.wave": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.__init__": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.scale": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.raw_levels": {"tf": 1}, "pypamguard.modules.detectors.gpl": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.rwedge": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.type": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.signal": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.noise": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.n_slices": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.slice_nums": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.lo_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.hi_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_amp": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.__init__": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.first_bin": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.noise_len": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.background": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.delay_scale": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_slices": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.amplitude": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour_width": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.slice_numbers": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_peaks": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.peak_data": {"tf": 1}}, "df": 63}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.delay_scale": {"tf": 1}}, "df": 1, "s": {"docs": {"pypamguard.modules.detectors.click.ClickDetector.delays": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "x": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.demux_data": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.demuxed_length": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.generics.genfileheader.GenericFileHeader.data_date": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.analysis_date": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date": {"tf": 1}}, "df": 7, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.DateFilter": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}, "pypamguard.core.filters.DateFilter.ignore_timezone": {"tf": 1}, "pypamguard.core.filters.DateFilter.from_json": {"tf": 1}}, "df": 4}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.DateBinaryReader": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "s": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.dates": {"tf": 1}}, "df": 1}}, "a": {"docs": {"pypamguard.core.pgbfile.PGBFile.data": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.data_date": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.peak_data": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_data": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.char_data": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demux_data": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.bytes_data": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.data": {"tf": 1}, "pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date": {"tf": 1}}, "df": 11}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.readers.DTYPES": {"tf": 1}, "pypamguard.core.readers.DTYPES.CHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.UCHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.SHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.USHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.INT": {"tf": 1}, "pypamguard.core.readers.DTYPES.UINT": {"tf": 1}, "pypamguard.core.readers.DTYPES.LONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.ULONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.FLOAT": {"tf": 1}, "pypamguard.core.readers.DTYPES.DOUBLE": {"tf": 1}, "pypamguard.core.readers_new.DTYPES": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT8": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT8": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT16": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT16": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT64": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT64": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.FLOAT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.FLOAT64": {"tf": 1}}, "df": 22}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.DTYPES.DOUBLE": {"tf": 1}, "pypamguard.core.readers.FLOATS.DOUBLE": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.registry.dbht_config": {"tf": 1}, "pypamguard.modules.processing.dbht": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.rms": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.zero_peak": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.peak_peak": {"tf": 1}}, "df": 7, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.rms": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.zero_peak": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.peak_peak": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.difar_config": {"tf": 1}, "pypamguard.modules.processing.difar": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.clip_start": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.display_sample_rate": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demuxed_length": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.amplitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.gain": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_angle": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_freq": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.species_code": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.tracked_group": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.max_val": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demux_data": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.num_matches": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.latitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.longitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.errors": {"tf": 1}}, "df": 19, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.clip_start": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.display_sample_rate": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demuxed_length": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.amplitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.gain": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_angle": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_freq": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.species_code": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.tracked_group": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.max_val": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demux_data": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.num_matches": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.latitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.longitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.errors": {"tf": 1}}, "df": 17}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.display_sample_rate": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.type": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.is_binary": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.scale": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_species": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.predictions": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_class": {"tf": 1}}, "df": 8}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_chan": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_samps": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.scale": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.wave": {"tf": 1}}, "df": 6}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.modules.detectors.click.ClickDetector.duration": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile.PGBFile.total_time": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.time_millis": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.time_sample": {"tf": 1}, "pypamguard.utils.constants.TIME_RANGE": {"tf": 1}}, "df": 4, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.DateFilter.ignore_timezone": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.readers_new.BinaryReader.millis_to_timestamp": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.timestamp_read": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {"pypamguard.load_pamguard_binary_file.timer": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"pypamguard.core.filters.Filters.to_json": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.to_json": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.millis_to_timestamp": {"tf": 1}, "pypamguard.core.serializable.Serializable.to_json": {"tf": 1}}, "df": 4, "t": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.tot_value": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.core.pgbfile.PGBFile.total_time": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.StringBinaryReader.length_type": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_type": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.type": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.type": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.type": {"tf": 1}}, "df": 5, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.TypeFormat": {"tf": 1}, "pypamguard.core.readers.TypeFormat.__init__": {"tf": 1}, "pypamguard.core.readers.TypeFormat.formatter": {"tf": 1}, "pypamguard.core.readers.TypeFormat.size": {"tf": 1}}, "df": 4}}}}}}, "s": {"docs": {"pypamguard.modules.detectors.click.ClickDetectorFooter.types_count_length": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.stats_types": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.core.readers_new.BinaryReader.tell": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.click.ClickDetector.trigger_map": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_millis": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_name": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_uid": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.tracked_group": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.pgbfile.PGBFile.file_header": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.module_header": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_HEADER": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.BinaryReader.as_helper": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.modules.processing.ishmael.IshmaelDetections.peak_height": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {"pypamguard.modules.detectors.rwedge.RWEdgeDetector.hi_freqs": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.hi_edges": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.standard.stdfilefooter.StandardFileFooter.highest_uid": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.modules.detectors.rwedge.RWEdgeDetector.lo_freqs": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.lo_edges": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.pgbfile.PGBFile.load": {"tf": 1}, "pypamguard.load_pamguard_binary_file": {"tf": 1}, "pypamguard.load_pamguard_binary_file.timer": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1.4142135623730951}}, "df": 4}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.readers.DTYPES.LONG": {"tf": 1}, "pypamguard.core.readers.INTS.LONG": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.registry.longtermspectralaverage_config": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.__init__": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.a": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.b": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_millis": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.n_fft": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.max_val": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.bytes_data": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.data": {"tf": 1.4142135623730951}}, "df": 14, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.longitude": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.logger": {"tf": 1}, "pypamguard.logger.Verbosity": {"tf": 1}, "pypamguard.logger.Verbosity.CRITICAL": {"tf": 1}, "pypamguard.logger.Verbosity.ERROR": {"tf": 1}, "pypamguard.logger.Verbosity.WARNING": {"tf": 1}, "pypamguard.logger.Verbosity.INFO": {"tf": 1}, "pypamguard.logger.Verbosity.DEBUG": {"tf": 1}, "pypamguard.logger.logger_config": {"tf": 1.4142135623730951}, "pypamguard.logger.Logger": {"tf": 1.4142135623730951}, "pypamguard.logger.Logger.verbosity": {"tf": 1.4142135623730951}, "pypamguard.logger.Logger.set_verbosity": {"tf": 1.4142135623730951}, "pypamguard.logger.Logger.info": {"tf": 1.4142135623730951}, "pypamguard.logger.Logger.debug": {"tf": 1.4142135623730951}, "pypamguard.logger.Logger.warning": {"tf": 1.4142135623730951}, "pypamguard.logger.Logger.error": {"tf": 1.4142135623730951}, "pypamguard.logger.logger": {"tf": 1.4142135623730951}}, "df": 16}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.standard.stdfilefooter.StandardFileFooter.lowest_uid": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.generics.genfileheader.GenericFileHeader.extra_info_len": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.noise_len": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.noise_len": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_len": {"tf": 1}}, "df": 4, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pypamguard.core.readers.StringNBinaryReader.length": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.length_type": {"tf": 1}, "pypamguard.core.readers_new.Shape.length": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.length": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.length": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.length": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.length": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.straight_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.wobbly_length": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demuxed_length": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.length": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.file_length": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.length": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.binary_length": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.length": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.binary_length": {"tf": 1}}, "df": 17}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.raw_levels": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.readers.BitmapBinaryReader.labels": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.processing.difar.DIFARProcessing.latitude": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.utils.constants.UID_LIST": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.DTYPES.UCHAR": {"tf": 1}, "pypamguard.core.readers.INTS.UCHAR": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.DTYPES.USHORT": {"tf": 1}, "pypamguard.core.readers.INTS.USHORT": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"1": {"6": {"docs": {"pypamguard.core.readers_new.DTYPES.UINT16": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"pypamguard.core.readers_new.DTYPES.UINT32": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"pypamguard.core.readers_new.DTYPES.UINT64": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "8": {"docs": {"pypamguard.core.readers_new.DTYPES.UINT8": {"tf": 1}}, "df": 1}, "docs": {"pypamguard.core.readers.DTYPES.UINT": {"tf": 1}, "pypamguard.core.readers.INTS.UINT": {"tf": 1}}, "df": 2}}, "d": {"docs": {"pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.parent_uid": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_uid": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.lowest_uid": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.highest_uid": {"tf": 1}, "pypamguard.utils.constants.UID_RANGE": {"tf": 1}, "pypamguard.utils.constants.UID_LIST": {"tf": 1}}, "df": 6}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.readers.DTYPES.ULONG": {"tf": 1}, "pypamguard.core.readers.INTS.ULONG": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.utils": {"tf": 1}, "pypamguard.utils.annotations": {"tf": 1}, "pypamguard.utils.annotations.read_beam_former_annotation": {"tf": 1}, "pypamguard.utils.annotations.read_bearing_annotation": {"tf": 1}, "pypamguard.utils.bitmap": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.fields2index": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.index2fields": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.size": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.bits": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.clear": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_binary_representation": {"tf": 1}, "pypamguard.utils.constants": {"tf": 1}, "pypamguard.utils.constants.TIME_RANGE": {"tf": 1}, "pypamguard.utils.constants.UID_RANGE": {"tf": 1}, "pypamguard.utils.constants.UID_LIST": {"tf": 1}, "pypamguard.utils.constants.FILTER": {"tf": 1}, "pypamguard.utils.constants.CHANNEL": {"tf": 1}, "pypamguard.utils.constants.DEFAULT_BUFFER_SIZE": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"tf": 1}, "pypamguard.utils.constants.IdentifierType": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.IGNORE": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_BACKGROUND": {"tf": 1}, "pypamguard.utils.serializer": {"tf": 1}, "pypamguard.utils.serializer.serialize": {"tf": 1}}, "df": 35}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.modules.processing.dbht.DbHtProcessing.zero_peak": {"tf": 1}}, "df": 1}}}}}}, "annotation": {"root": {"1": {"2": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"tf": 1}}, "df": 1}}}}}}}}}}, "docs": {}, "df": 0}, "docs": {"pypamguard.core.filters.Filters.position": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.total_time": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.length": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.identifier": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.length": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.identifier": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.file_format": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.pamguard": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.version": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.branch": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.data_date": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.analysis_date": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.start_sample": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_type": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_name": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.stream_name": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.extra_info_len": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.length": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.identifier": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.length": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.identifier": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.type": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.is_binary": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.scale": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_species": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.predictions": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_class": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_chan": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_samps": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.scale": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.wave": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count_length": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.noise_len": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.background": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.start_sample": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.channel_map": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.trigger_map": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.type": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.flags": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.delays": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.angles": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.angle_errors": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.duration": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.wave": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.scale": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.raw_levels": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.type": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.signal": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.noise": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.n_slices": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.slice_nums": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.lo_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.hi_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_amp": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.first_bin": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.noise_len": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.background": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.delay_scale": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_slices": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.amplitude": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour_width": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.slice_numbers": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_peaks": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.peak_data": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_points": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_sonar": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_ids": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.straight_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.wobbly_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.mean_occupancy": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.time_millis": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_id": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.obj_size": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.occupancy": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.ave_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.tot_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.dates": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.parent_uid": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi_amplitude": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.sample_rate": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.max_val": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_len": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_data": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.mmsi_number": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.fill_bits": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.char_data": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.ais_channel": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_millis": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.file_name": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_name": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_uid": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_chan": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_samps": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.scale": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.wave": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.rms": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.zero_peak": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.peak_peak": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.clip_start": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.display_sample_rate": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demuxed_length": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.amplitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.gain": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_angle": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_freq": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.species_code": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.tracked_group": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.max_val": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demux_data": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.num_matches": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.latitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.longitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.errors": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.peak_height": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.time_sample": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_millis": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.n_fft": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.max_val": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.bytes_data": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.data": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.stats_types": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.lo_edges": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.hi_edges": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.i_chan": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_measures": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.noise": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.length": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.identifier": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.n_objects": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_sample": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.lowest_uid": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.highest_uid": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.file_length": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_reason": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.length": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.identifier": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.binary_length": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.length": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.identifier": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.version": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.binary_length": {"tf": 1}}, "df": 159, "p": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.filters.Filters.position": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.channel_map": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.trigger_map": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.flags": {"tf": 1}}, "df": 4}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.filters.Filters.position": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.Filters.position": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.Filters.position": {"tf": 1}}, "df": 1, "s": {"docs": {"pypamguard.core.filters.Filters.position": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.scale": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.predictions": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.scale": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.wave": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.background": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.scale": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.background": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.straight_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.wobbly_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.mean_occupancy": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.obj_size": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.occupancy": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi_amplitude": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.sample_rate": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.max_val": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.scale": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.rms": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.zero_peak": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.peak_peak": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.display_sample_rate": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.amplitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.gain": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_angle": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_freq": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.max_val": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.latitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.longitude": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.max_val": {"tf": 1}}, "df": 35}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.raw_levels": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.peak_height": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.time_sample": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {"pypamguard.modules.detectors.click.ClickDetector.delays": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.signal": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.noise": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.amplitude": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.modules.processing.clipgenerator.ClipGenerator.wave": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"1": {"6": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_species": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_class": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_chan": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.noise_len": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_ids": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_id": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.ave_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_value": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.fill_bits": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_chan": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.clip_start": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.num_matches": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.stats_types": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.i_chan": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_measures": {"tf": 1}}, "df": 17}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_samps": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.first_bin": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.noise_len": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_points": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.tot_value": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_len": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.mmsi_number": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_samps": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demuxed_length": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.n_fft": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_reason": {"tf": 1}}, "df": 11}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.time_millis": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.parent_uid": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_millis": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_uid": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_sample": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.lowest_uid": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.highest_uid": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.file_length": {"tf": 1}}, "df": 10}, "docs": {}, "df": 0}, "8": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.type": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_sonar": {"tf": 1}}, "df": 2}, "docs": {"pypamguard.core.pgbfile.PGBFile.total_time": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.length": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.identifier": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.length": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.identifier": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.file_format": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.data_date": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.analysis_date": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.start_sample": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.extra_info_len": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.length": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.identifier": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.length": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.identifier": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count_length": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.start_sample": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.type": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.duration": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.type": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.n_slices": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.delay_scale": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_slices": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_millis": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.length": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.identifier": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.n_objects": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.length": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.identifier": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.binary_length": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.length": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.identifier": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.binary_length": {"tf": 1}}, "df": 32}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.generics.genfileheader.GenericFileHeader.pamguard": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.version": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.branch": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_type": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.module_name": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.stream_name": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.char_data": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.ais_channel": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.file_name": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_name": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.species_code": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.tracked_group": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.version": {"tf": 1}}, "df": 13}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.type": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.is_binary": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.scale": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_species": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.predictions": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_class": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_chan": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_samps": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.scale": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.wave": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.noise_len": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.background": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.angles": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.angle_errors": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.wave": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.scale": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.raw_levels": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.slice_nums": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.lo_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.hi_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_amp": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.first_bin": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.noise_len": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.background": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour_width": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.slice_numbers": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_peaks": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.peak_data": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_points": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_sonar": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_ids": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.straight_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.wobbly_length": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.mean_occupancy": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.time_millis": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_id": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.obj_size": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.occupancy": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.ave_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.tot_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.dates": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.parent_uid": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi_amplitude": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.sample_rate": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.max_val": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_len": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_data": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.mmsi_number": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.fill_bits": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_millis": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_uid": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_chan": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_samps": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.scale": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.wave": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.rms": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.zero_peak": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.peak_peak": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.clip_start": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.display_sample_rate": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demuxed_length": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.amplitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.gain": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_angle": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_freq": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.max_val": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demux_data": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.num_matches": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.latitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.longitude": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.errors": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.peak_height": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.time_sample": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.n_fft": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.max_val": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.bytes_data": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.data": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.stats_types": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.lo_edges": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.hi_edges": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.i_chan": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_bands": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_measures": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.noise": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date_raw": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_sample": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.lowest_uid": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.highest_uid": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.file_length": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_reason": {"tf": 1}}, "df": 102}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.modules.detectors.click.ClickDetector.angles": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.angle_errors": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.wave": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.slice_nums": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.lo_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.hi_freqs": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_amp": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour_width": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.slice_numbers": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_peaks": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.peak_data": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_data": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.demux_data": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.errors": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.bytes_data": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.data": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.lo_edges": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.hi_edges": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.noise": {"tf": 1}}, "df": 21, "[": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.predictions": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.wave": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.background": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.raw_levels": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.background": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_ids": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.time_millis": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_id": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_bearing": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_range": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.obj_size": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.occupancy": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.ave_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.tot_value": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_value": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.wave": {"tf": 1}}, "df": 20}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.dates": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"8": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.is_binary": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.modules.detectors.click.ClickDetector.channel_map": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.trigger_map": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.flags": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"3": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.modules.detectors.click.ClickDetectorFooter.types_count": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.modules.detectors.click.ClickDetector.channel_map": {"tf": 1.4142135623730951}, "pypamguard.modules.detectors.click.ClickDetector.trigger_map": {"tf": 1.4142135623730951}, "pypamguard.modules.detectors.click.ClickDetector.flags": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.dates": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date": {"tf": 1.4142135623730951}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"tf": 1}}, "df": 1}}}}}}, "x": {"2": {"7": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "g": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"tf": 1}}, "df": 1}}}}, "default_value": {"root": {"0": {"docs": {"pypamguard.core.filters.FILTER_POSITION.SKIP": {"tf": 1}, "pypamguard.logger.Verbosity.CRITICAL": {"tf": 1}}, "df": 2}, "1": {"0": {"2": {"4": {"docs": {"pypamguard.utils.constants.DEFAULT_BUFFER_SIZE": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"7": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.b": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"pypamguard.core.filters.FILTER_POSITION.KEEP": {"tf": 1}, "pypamguard.logger.Verbosity.ERROR": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_HEADER": {"tf": 1}}, "df": 3}, "2": {"4": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.a": {"tf": 1}}, "df": 1}, "docs": {"pypamguard.core.filters.FILTER_POSITION.STOP": {"tf": 1}, "pypamguard.logger.Verbosity.WARNING": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_FOOTER": {"tf": 1}}, "df": 3}, "3": {"docs": {"pypamguard.logger.Verbosity.INFO": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_HEADER": {"tf": 1}}, "df": 2}, "4": {"2": {"9": {"7": {"0": {"7": {"7": {"3": {"2": {"1": {"7": {"3": {"2": {"2": {"4": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.a": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"pypamguard.logger.Verbosity.DEBUG": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_FOOTER": {"tf": 1}}, "df": 2}, "5": {"docs": {"pypamguard.utils.constants.IdentifierType.IGNORE": {"tf": 1}}, "df": 1}, "6": {"docs": {"pypamguard.utils.constants.IdentifierType.FILE_BACKGROUND": {"tf": 1}}, "df": 1}, "docs": {"pypamguard.core.filters.FILTER_POSITION.SKIP": {"tf": 1.4142135623730951}, "pypamguard.core.filters.FILTER_POSITION.KEEP": {"tf": 1.4142135623730951}, "pypamguard.core.filters.FILTER_POSITION.STOP": {"tf": 1.4142135623730951}, "pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"tf": 2.23606797749979}, "pypamguard.core.pgbfile.Report.warnings": {"tf": 1}, "pypamguard.core.pgbfile.report": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.CHAR": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.UCHAR": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.SHORT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.USHORT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.INT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.UINT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.LONG": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.ULONG": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.FLOAT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.DOUBLE": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.CHAR": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.UCHAR": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.SHORT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.USHORT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.INT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.UINT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.LONG": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.ULONG": {"tf": 1.4142135623730951}, "pypamguard.core.readers.FLOATS.FLOAT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.FLOATS.DOUBLE": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES.INT8": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES.UINT8": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES.INT16": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES.UINT16": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES.INT32": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES.UINT32": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES.INT64": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES.UINT64": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES.FLOAT32": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES.FLOAT64": {"tf": 1.4142135623730951}, "pypamguard.core.registry.ais_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.click_config": {"tf": 2}, "pypamguard.core.registry.clipgenerator_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.deeplearningclassifier_config": {"tf": 2.449489742783178}, "pypamguard.core.registry.dbht_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.difar_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.noisemonitor_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.noiseband_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.gpl_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.rwedge_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.whistleandmoan_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.longtermspectralaverage_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.ishmael_config": {"tf": 2}, "pypamguard.core.registry.spermwhaleipi_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.geminithreshold_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.MODULES": {"tf": 6.855654600401044}, "pypamguard.logger.Verbosity.CRITICAL": {"tf": 1.4142135623730951}, "pypamguard.logger.Verbosity.ERROR": {"tf": 1.4142135623730951}, "pypamguard.logger.Verbosity.WARNING": {"tf": 1.4142135623730951}, "pypamguard.logger.Verbosity.INFO": {"tf": 1.4142135623730951}, "pypamguard.logger.Verbosity.DEBUG": {"tf": 1.4142135623730951}, "pypamguard.logger.logger": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.a": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.b": {"tf": 1}, "pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.TIME_RANGE": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.UID_RANGE": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.UID_LIST": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.FILTER": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.CHANNEL": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.IdentifierType.FILE_HEADER": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.IdentifierType.FILE_FOOTER": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.IdentifierType.MODULE_HEADER": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.IdentifierType.MODULE_FOOTER": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.IdentifierType.IGNORE": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.IdentifierType.FILE_BACKGROUND": {"tf": 1.4142135623730951}}, "df": 74, "l": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.filters.FILTER_POSITION.SKIP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.KEEP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.STOP": {"tf": 1}, "pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.report": {"tf": 1}, "pypamguard.core.readers.DTYPES.CHAR": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.UCHAR": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.SHORT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.USHORT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.INT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.UINT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.LONG": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.ULONG": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.FLOAT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.DOUBLE": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.CHAR": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.UCHAR": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.SHORT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.USHORT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.INT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.UINT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.LONG": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.ULONG": {"tf": 1.4142135623730951}, "pypamguard.core.readers.FLOATS.FLOAT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.FLOATS.DOUBLE": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES.INT8": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT8": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT16": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT16": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT64": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT64": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.FLOAT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.FLOAT64": {"tf": 1}, "pypamguard.core.registry.ais_config": {"tf": 1}, "pypamguard.core.registry.click_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.clipgenerator_config": {"tf": 1}, "pypamguard.core.registry.deeplearningclassifier_config": {"tf": 2}, "pypamguard.core.registry.dbht_config": {"tf": 1}, "pypamguard.core.registry.difar_config": {"tf": 1}, "pypamguard.core.registry.noisemonitor_config": {"tf": 1}, "pypamguard.core.registry.noiseband_config": {"tf": 1}, "pypamguard.core.registry.gpl_config": {"tf": 1}, "pypamguard.core.registry.rwedge_config": {"tf": 1}, "pypamguard.core.registry.whistleandmoan_config": {"tf": 1}, "pypamguard.core.registry.longtermspectralaverage_config": {"tf": 1}, "pypamguard.core.registry.ishmael_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.spermwhaleipi_config": {"tf": 1}, "pypamguard.core.registry.geminithreshold_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 5.196152422706632}, "pypamguard.logger.Verbosity.CRITICAL": {"tf": 1}, "pypamguard.logger.Verbosity.ERROR": {"tf": 1}, "pypamguard.logger.Verbosity.WARNING": {"tf": 1}, "pypamguard.logger.Verbosity.INFO": {"tf": 1}, "pypamguard.logger.Verbosity.DEBUG": {"tf": 1}, "pypamguard.logger.logger": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.IGNORE": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_BACKGROUND": {"tf": 1}}, "df": 65, "s": {"docs": {}, "df": 0, "a": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.readers.DTYPES.LONG": {"tf": 1}, "pypamguard.core.readers.INTS.LONG": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.registry.longtermspectralaverage_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.MODULES": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.logger.logger": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.FILTER_POSITION.SKIP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.KEEP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.STOP": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1}, "pypamguard.utils.constants.FILTER": {"tf": 1}}, "df": 5, "s": {"docs": {"pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"tf": 1.7320508075688772}}, "df": 1}}}}, "e": {"docs": {"pypamguard.utils.constants.IdentifierType.FILE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_BACKGROUND": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"pypamguard.core.readers_new.DTYPES.FLOAT32": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"pypamguard.core.readers_new.DTYPES.FLOAT64": {"tf": 1.4142135623730951}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.a": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"pypamguard.core.readers.DTYPES.FLOAT": {"tf": 1}, "pypamguard.core.readers.FLOATS.FLOAT": {"tf": 1}}, "df": 2, "s": {"docs": {"pypamguard.core.readers.FLOATS.FLOAT": {"tf": 1}, "pypamguard.core.readers.FLOATS.DOUBLE": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.utils.constants.IdentifierType.FILE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_FOOTER": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.filters.FILTER_POSITION.SKIP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.KEEP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.STOP": {"tf": 1}}, "df": 3}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.report": {"tf": 1}, "pypamguard.core.readers.DTYPES.CHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.UCHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.SHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.USHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.INT": {"tf": 1}, "pypamguard.core.readers.DTYPES.UINT": {"tf": 1}, "pypamguard.core.readers.DTYPES.LONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.ULONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.FLOAT": {"tf": 1}, "pypamguard.core.readers.DTYPES.DOUBLE": {"tf": 1}, "pypamguard.core.readers.INTS.CHAR": {"tf": 1}, "pypamguard.core.readers.INTS.UCHAR": {"tf": 1}, "pypamguard.core.readers.INTS.SHORT": {"tf": 1}, "pypamguard.core.readers.INTS.USHORT": {"tf": 1}, "pypamguard.core.readers.INTS.INT": {"tf": 1}, "pypamguard.core.readers.INTS.UINT": {"tf": 1}, "pypamguard.core.readers.INTS.LONG": {"tf": 1}, "pypamguard.core.readers.INTS.ULONG": {"tf": 1}, "pypamguard.core.readers.FLOATS.FLOAT": {"tf": 1}, "pypamguard.core.readers.FLOATS.DOUBLE": {"tf": 1}, "pypamguard.core.registry.ais_config": {"tf": 1}, "pypamguard.core.registry.click_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.clipgenerator_config": {"tf": 1}, "pypamguard.core.registry.deeplearningclassifier_config": {"tf": 2}, "pypamguard.core.registry.dbht_config": {"tf": 1}, "pypamguard.core.registry.difar_config": {"tf": 1}, "pypamguard.core.registry.noisemonitor_config": {"tf": 1}, "pypamguard.core.registry.noiseband_config": {"tf": 1}, "pypamguard.core.registry.gpl_config": {"tf": 1}, "pypamguard.core.registry.rwedge_config": {"tf": 1}, "pypamguard.core.registry.whistleandmoan_config": {"tf": 1}, "pypamguard.core.registry.longtermspectralaverage_config": {"tf": 1}, "pypamguard.core.registry.ishmael_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.spermwhaleipi_config": {"tf": 1}, "pypamguard.core.registry.geminithreshold_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 5.196152422706632}, "pypamguard.logger.logger": {"tf": 1}}, "df": 39}}}}}}}}}, "g": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile.report": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.registry.ais_config": {"tf": 1}, "pypamguard.core.registry.clipgenerator_config": {"tf": 1}, "pypamguard.core.registry.dbht_config": {"tf": 1}, "pypamguard.core.registry.difar_config": {"tf": 1}, "pypamguard.core.registry.noisemonitor_config": {"tf": 1}, "pypamguard.core.registry.noiseband_config": {"tf": 1}, "pypamguard.core.registry.longtermspectralaverage_config": {"tf": 1}, "pypamguard.core.registry.ishmael_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.MODULES": {"tf": 4}}, "df": 9}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"pypamguard.core.registry.ishmael_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1.7320508075688772}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.registry.spermwhaleipi_config": {"tf": 1}, "pypamguard.core.registry.geminithreshold_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.filters.FILTER_POSITION.SKIP": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.filters.FILTER_POSITION.STOP": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}}, "df": 1}}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.DTYPES.SHORT": {"tf": 1}, "pypamguard.core.readers.INTS.SHORT": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"pypamguard.core.registry.spermwhaleipi_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.MODULES": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.filters.FILTER_POSITION.SKIP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.KEEP": {"tf": 1}, "pypamguard.core.filters.FILTER_POSITION.STOP": {"tf": 1}, "pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.report": {"tf": 1}, "pypamguard.core.readers.DTYPES.CHAR": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.UCHAR": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.SHORT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.USHORT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.INT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.UINT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.LONG": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.ULONG": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.FLOAT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES.DOUBLE": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.CHAR": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.UCHAR": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.SHORT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.USHORT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.INT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.UINT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.LONG": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS.ULONG": {"tf": 1.4142135623730951}, "pypamguard.core.readers.FLOATS.FLOAT": {"tf": 1.4142135623730951}, "pypamguard.core.readers.FLOATS.DOUBLE": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES.INT8": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT8": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT16": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT16": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT64": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT64": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.FLOAT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.FLOAT64": {"tf": 1}, "pypamguard.core.registry.ais_config": {"tf": 1}, "pypamguard.core.registry.click_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.clipgenerator_config": {"tf": 1}, "pypamguard.core.registry.deeplearningclassifier_config": {"tf": 2}, "pypamguard.core.registry.dbht_config": {"tf": 1}, "pypamguard.core.registry.difar_config": {"tf": 1}, "pypamguard.core.registry.noisemonitor_config": {"tf": 1}, "pypamguard.core.registry.noiseband_config": {"tf": 1}, "pypamguard.core.registry.gpl_config": {"tf": 1}, "pypamguard.core.registry.rwedge_config": {"tf": 1}, "pypamguard.core.registry.whistleandmoan_config": {"tf": 1}, "pypamguard.core.registry.longtermspectralaverage_config": {"tf": 1}, "pypamguard.core.registry.ishmael_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.spermwhaleipi_config": {"tf": 1}, "pypamguard.core.registry.geminithreshold_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 5.196152422706632}, "pypamguard.logger.Verbosity.CRITICAL": {"tf": 1}, "pypamguard.logger.Verbosity.ERROR": {"tf": 1}, "pypamguard.logger.Verbosity.WARNING": {"tf": 1}, "pypamguard.logger.Verbosity.INFO": {"tf": 1}, "pypamguard.logger.Verbosity.DEBUG": {"tf": 1}, "pypamguard.logger.logger": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.IdentifierType.FILE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.IGNORE": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_BACKGROUND": {"tf": 1}}, "df": 65}, "p": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.core.registry.gpl_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1.4142135623730951}}, "df": 2, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.gpl_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 2}}}}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.registry.geminithreshold_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.geminithreshold_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.filters.FILTER_POSITION.KEEP": {"tf": 1}}, "df": 1}}}}, "x": {"2": {"7": {"docs": {"pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"tf": 3.4641016151377544}, "pypamguard.core.readers_new.DTYPES.INT8": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES.UINT8": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES.INT16": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES.UINT16": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES.INT32": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES.UINT32": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES.INT64": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES.UINT64": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES.FLOAT32": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES.FLOAT64": {"tf": 1.4142135623730951}, "pypamguard.core.registry.ais_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.click_config": {"tf": 2.8284271247461903}, "pypamguard.core.registry.clipgenerator_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.deeplearningclassifier_config": {"tf": 4}, "pypamguard.core.registry.dbht_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.difar_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.noisemonitor_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.noiseband_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.gpl_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.rwedge_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.whistleandmoan_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.longtermspectralaverage_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.ishmael_config": {"tf": 2.8284271247461903}, "pypamguard.core.registry.spermwhaleipi_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.geminithreshold_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.MODULES": {"tf": 10.954451150103322}, "pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 5.291502622129181}, "pypamguard.utils.constants.TIME_RANGE": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.UID_RANGE": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.UID_LIST": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.FILTER": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.CHANNEL": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"tf": 1.4142135623730951}}, "df": 35}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"tf": 1}, "pypamguard.utils.constants.UID_LIST": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"tf": 1}, "pypamguard.utils.constants.UID_RANGE": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "t": {"1": {"6": {"docs": {"pypamguard.core.readers_new.DTYPES.UINT16": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"pypamguard.core.readers_new.DTYPES.UINT32": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"pypamguard.core.readers_new.DTYPES.UINT64": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "8": {"docs": {"pypamguard.core.readers_new.DTYPES.UINT8": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"pypamguard.core.readers.DTYPES.UINT": {"tf": 1}, "pypamguard.core.readers.INTS.UINT": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.DTYPES.UCHAR": {"tf": 1}, "pypamguard.core.readers.INTS.UCHAR": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.DTYPES.USHORT": {"tf": 1}, "pypamguard.core.readers.INTS.USHORT": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.readers.DTYPES.ULONG": {"tf": 1}, "pypamguard.core.readers.INTS.ULONG": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"tf": 1.7320508075688772}, "pypamguard.core.registry.ais_config": {"tf": 1}, "pypamguard.core.registry.click_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.clipgenerator_config": {"tf": 1}, "pypamguard.core.registry.deeplearningclassifier_config": {"tf": 2}, "pypamguard.core.registry.dbht_config": {"tf": 1}, "pypamguard.core.registry.difar_config": {"tf": 1}, "pypamguard.core.registry.noisemonitor_config": {"tf": 1}, "pypamguard.core.registry.noiseband_config": {"tf": 1}, "pypamguard.core.registry.gpl_config": {"tf": 1}, "pypamguard.core.registry.rwedge_config": {"tf": 1}, "pypamguard.core.registry.whistleandmoan_config": {"tf": 1}, "pypamguard.core.registry.longtermspectralaverage_config": {"tf": 1}, "pypamguard.core.registry.ishmael_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.spermwhaleipi_config": {"tf": 1}, "pypamguard.core.registry.geminithreshold_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 5.196152422706632}}, "df": 17, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 1, "s": {"docs": {"pypamguard.core.registry.deeplearningclassifier_config": {"tf": 2}, "pypamguard.core.registry.MODULES": {"tf": 2}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pypamguard.core.registry.click_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 2}}, "df": 2, "s": {"docs": {"pypamguard.core.registry.click_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1.4142135623730951}}, "df": 2}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.click_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.registry.click_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.MODULES": {"tf": 2}}, "df": 2}}}}}}}}}}}}}}}}}}}, "p": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.clipgenerator_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.MODULES": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.report": {"tf": 1}, "pypamguard.core.readers.DTYPES.CHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.UCHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.SHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.USHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.INT": {"tf": 1}, "pypamguard.core.readers.DTYPES.UINT": {"tf": 1}, "pypamguard.core.readers.DTYPES.LONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.ULONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.FLOAT": {"tf": 1}, "pypamguard.core.readers.DTYPES.DOUBLE": {"tf": 1}, "pypamguard.core.readers.INTS.CHAR": {"tf": 1}, "pypamguard.core.readers.INTS.UCHAR": {"tf": 1}, "pypamguard.core.readers.INTS.SHORT": {"tf": 1}, "pypamguard.core.readers.INTS.USHORT": {"tf": 1}, "pypamguard.core.readers.INTS.INT": {"tf": 1}, "pypamguard.core.readers.INTS.UINT": {"tf": 1}, "pypamguard.core.readers.INTS.LONG": {"tf": 1}, "pypamguard.core.readers.INTS.ULONG": {"tf": 1}, "pypamguard.core.readers.FLOATS.FLOAT": {"tf": 1}, "pypamguard.core.readers.FLOATS.DOUBLE": {"tf": 1}}, "df": 22}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 1}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.DTYPES.CHAR": {"tf": 1}, "pypamguard.core.readers.INTS.CHAR": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.utils.constants.CHANNEL": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.logger.Verbosity.CRITICAL": {"tf": 1}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.registry.whistleandmoan_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.whistleandmoan_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.logger.Verbosity.WARNING": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.pgbfile.report": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.readers.DTYPES.CHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.UCHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.SHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.USHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.INT": {"tf": 1}, "pypamguard.core.readers.DTYPES.UINT": {"tf": 1}, "pypamguard.core.readers.DTYPES.LONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.ULONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.FLOAT": {"tf": 1}, "pypamguard.core.readers.DTYPES.DOUBLE": {"tf": 1}, "pypamguard.core.readers.INTS.CHAR": {"tf": 1}, "pypamguard.core.readers.INTS.UCHAR": {"tf": 1}, "pypamguard.core.readers.INTS.SHORT": {"tf": 1}, "pypamguard.core.readers.INTS.USHORT": {"tf": 1}, "pypamguard.core.readers.INTS.INT": {"tf": 1}, "pypamguard.core.readers.INTS.UINT": {"tf": 1}, "pypamguard.core.readers.INTS.LONG": {"tf": 1}, "pypamguard.core.readers.INTS.ULONG": {"tf": 1}, "pypamguard.core.readers.FLOATS.FLOAT": {"tf": 1}, "pypamguard.core.readers.FLOATS.DOUBLE": {"tf": 1}}, "df": 20}}}}}}, "w": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.registry.rwedge_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.rwedge_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {"pypamguard.core.registry.deeplearningclassifier_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.ishmael_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 2.23606797749979}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers_new.DTYPES.INT8": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT8": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT16": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT16": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT64": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT64": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.FLOAT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.FLOAT64": {"tf": 1}}, "df": 10, "s": {"docs": {"pypamguard.core.readers.DTYPES.CHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.UCHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.SHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.USHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.INT": {"tf": 1}, "pypamguard.core.readers.DTYPES.UINT": {"tf": 1}, "pypamguard.core.readers.DTYPES.LONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.ULONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.FLOAT": {"tf": 1}, "pypamguard.core.readers.DTYPES.DOUBLE": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT8": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT8": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT16": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT16": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.INT64": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.UINT64": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.FLOAT32": {"tf": 1}, "pypamguard.core.readers_new.DTYPES.FLOAT64": {"tf": 1}}, "df": 20}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.DTYPES.DOUBLE": {"tf": 1}, "pypamguard.core.readers.FLOATS.DOUBLE": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 2.8284271247461903}}, "df": 1, "s": {"docs": {"pypamguard.core.registry.click_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.gpl_config": {"tf": 1}, "pypamguard.core.registry.rwedge_config": {"tf": 1}, "pypamguard.core.registry.whistleandmoan_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 2.6457513110645907}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.registry.deeplearningclassifier_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.MODULES": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"pypamguard.core.registry.ishmael_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.deeplearningclassifier_config": {"tf": 2}, "pypamguard.core.registry.MODULES": {"tf": 2}}, "df": 2}}}}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.logger.Verbosity.DEBUG": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {"pypamguard.core.registry.deeplearningclassifier_config": {"tf": 2}, "pypamguard.core.registry.MODULES": {"tf": 2}}, "df": 2, "c": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.registry.deeplearningclassifier_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.MODULES": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.registry.deeplearningclassifier_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.MODULES": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "b": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.registry.dbht_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1.4142135623730951}}, "df": 2, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.registry.dbht_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.difar_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1.4142135623730951}}, "df": 2, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.registry.difar_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.pgbfile.report": {"tf": 1}, "pypamguard.core.readers.DTYPES.CHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.UCHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.SHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.USHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.INT": {"tf": 1}, "pypamguard.core.readers.DTYPES.UINT": {"tf": 1}, "pypamguard.core.readers.DTYPES.LONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.ULONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.FLOAT": {"tf": 1}, "pypamguard.core.readers.DTYPES.DOUBLE": {"tf": 1}, "pypamguard.core.readers.INTS.CHAR": {"tf": 1}, "pypamguard.core.readers.INTS.UCHAR": {"tf": 1}, "pypamguard.core.readers.INTS.SHORT": {"tf": 1}, "pypamguard.core.readers.INTS.USHORT": {"tf": 1}, "pypamguard.core.readers.INTS.INT": {"tf": 1}, "pypamguard.core.readers.INTS.UINT": {"tf": 1}, "pypamguard.core.readers.INTS.LONG": {"tf": 1}, "pypamguard.core.readers.INTS.ULONG": {"tf": 1}, "pypamguard.core.readers.FLOATS.FLOAT": {"tf": 1}, "pypamguard.core.readers.FLOATS.DOUBLE": {"tf": 1}, "pypamguard.logger.logger": {"tf": 1}}, "df": 22}}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.DTYPES.CHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.UCHAR": {"tf": 1}, "pypamguard.core.readers.DTYPES.SHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.USHORT": {"tf": 1}, "pypamguard.core.readers.DTYPES.INT": {"tf": 1}, "pypamguard.core.readers.DTYPES.UINT": {"tf": 1}, "pypamguard.core.readers.DTYPES.LONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.ULONG": {"tf": 1}, "pypamguard.core.readers.DTYPES.FLOAT": {"tf": 1}, "pypamguard.core.readers.DTYPES.DOUBLE": {"tf": 1}, "pypamguard.core.readers.INTS.CHAR": {"tf": 1}, "pypamguard.core.readers.INTS.UCHAR": {"tf": 1}, "pypamguard.core.readers.INTS.SHORT": {"tf": 1}, "pypamguard.core.readers.INTS.USHORT": {"tf": 1}, "pypamguard.core.readers.INTS.INT": {"tf": 1}, "pypamguard.core.readers.INTS.UINT": {"tf": 1}, "pypamguard.core.readers.INTS.LONG": {"tf": 1}, "pypamguard.core.readers.INTS.ULONG": {"tf": 1}, "pypamguard.core.readers.FLOATS.FLOAT": {"tf": 1}, "pypamguard.core.readers.FLOATS.DOUBLE": {"tf": 1}}, "df": 20}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.click_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}}, "df": 1}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.utils.constants.TIME_RANGE": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"1": {"6": {"docs": {"pypamguard.core.readers_new.DTYPES.INT16": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"pypamguard.core.readers_new.DTYPES.INT32": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"pypamguard.core.readers_new.DTYPES.INT64": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "8": {"docs": {"pypamguard.core.readers_new.DTYPES.INT8": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"pypamguard.core.readers.DTYPES.INT": {"tf": 1}, "pypamguard.core.readers.INTS.INT": {"tf": 1}}, "df": 2, "s": {"docs": {"pypamguard.core.readers.INTS.CHAR": {"tf": 1}, "pypamguard.core.readers.INTS.UCHAR": {"tf": 1}, "pypamguard.core.readers.INTS.SHORT": {"tf": 1}, "pypamguard.core.readers.INTS.USHORT": {"tf": 1}, "pypamguard.core.readers.INTS.INT": {"tf": 1}, "pypamguard.core.readers.INTS.UINT": {"tf": 1}, "pypamguard.core.readers.INTS.LONG": {"tf": 1}, "pypamguard.core.readers.INTS.ULONG": {"tf": 1}}, "df": 8}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.logger.Verbosity.INFO": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.core.registry.ishmael_config": {"tf": 2}, "pypamguard.core.registry.MODULES": {"tf": 3.4641016151377544}}, "df": 2, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pypamguard.core.registry.ishmael_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1.7320508075688772}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.registry.ishmael_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.utils.constants.IdentifierType.FILE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_FOOTER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.IGNORE": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.FILE_BACKGROUND": {"tf": 1}}, "df": 6}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.utils.constants.IdentifierType.IGNORE": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_FOOTER": {"tf": 1}}, "df": 3, "s": {"docs": {"pypamguard.core.registry.ais_config": {"tf": 1}, "pypamguard.core.registry.click_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.clipgenerator_config": {"tf": 1}, "pypamguard.core.registry.deeplearningclassifier_config": {"tf": 2}, "pypamguard.core.registry.dbht_config": {"tf": 1}, "pypamguard.core.registry.difar_config": {"tf": 1}, "pypamguard.core.registry.noisemonitor_config": {"tf": 1}, "pypamguard.core.registry.noiseband_config": {"tf": 1}, "pypamguard.core.registry.gpl_config": {"tf": 1}, "pypamguard.core.registry.rwedge_config": {"tf": 1}, "pypamguard.core.registry.whistleandmoan_config": {"tf": 1}, "pypamguard.core.registry.longtermspectralaverage_config": {"tf": 1}, "pypamguard.core.registry.ishmael_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.spermwhaleipi_config": {"tf": 1}, "pypamguard.core.registry.geminithreshold_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 5.196152422706632}}, "df": 16}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.core.registry.deeplearningclassifier_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.MODULES": {"tf": 1.4142135623730951}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.registry.ais_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1.4142135623730951}}, "df": 2, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.registry.ais_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.registry.click_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.IdentifierType.FILE_BACKGROUND": {"tf": 1}}, "df": 3}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1.4142135623730951}}, "df": 1, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.noisemonitor_config": {"tf": 1.4142135623730951}, "pypamguard.core.registry.MODULES": {"tf": 2}}, "df": 2}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.registry.noiseband_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1.4142135623730951}}, "df": 2, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.noiseband_config": {"tf": 1}, "pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "p": {"docs": {"pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.a": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.core.registry.MODULES": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.logger.Verbosity.ERROR": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.logger.Verbosity.CRITICAL": {"tf": 1}, "pypamguard.logger.Verbosity.ERROR": {"tf": 1}, "pypamguard.logger.Verbosity.WARNING": {"tf": 1}, "pypamguard.logger.Verbosity.INFO": {"tf": 1}, "pypamguard.logger.Verbosity.DEBUG": {"tf": 1}}, "df": 5}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.utils.constants.IdentifierType.FILE_HEADER": {"tf": 1}, "pypamguard.utils.constants.IdentifierType.MODULE_HEADER": {"tf": 1}}, "df": 2}}}}}}}}, "signature": {"root": {"0": {"docs": {"pypamguard.core.pgbfile.process_chunk": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1.4142135623730951}}, "df": 2}, "1": {"0": {"2": {"4": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"pypamguard.core.pgbfile.mmap_file": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 2}, "3": {"9": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1.4142135623730951}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1.4142135623730951}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1.4142135623730951}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.BinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1.4142135623730951}}, "df": 7}, "docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 1}, "docs": {"pypamguard.base.chunk.BaseChunk.__init__": {"tf": 4}, "pypamguard.base.chunk.BaseChunk.process": {"tf": 6.48074069840786}, "pypamguard.base.chunk.BaseChunk.get_attrs": {"tf": 3.1622776601683795}, "pypamguard.base.chunk.BaseChunk.signature": {"tf": 3.4641016151377544}, "pypamguard.core.exceptions.BinaryFileException.__init__": {"tf": 4.123105625617661}, "pypamguard.core.exceptions.WarningException.__init__": {"tf": 7.937253933193772}, "pypamguard.core.exceptions.ChunkLengthMismatch.__init__": {"tf": 4.898979485566356}, "pypamguard.core.exceptions.StructuralException.__init__": {"tf": 5}, "pypamguard.core.filters.BaseFilter.check": {"tf": 5.291502622129181}, "pypamguard.core.filters.BaseFilter.from_json": {"tf": 3.7416573867739413}, "pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 4.123105625617661}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 3.7416573867739413}, "pypamguard.core.filters.WhitelistFilter.from_json": {"tf": 3.7416573867739413}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 7.0710678118654755}, "pypamguard.core.filters.RangeFilter.default_comparator": {"tf": 4.242640687119285}, "pypamguard.core.filters.RangeFilter.check": {"tf": 3.7416573867739413}, "pypamguard.core.filters.RangeFilter.from_json": {"tf": 3.7416573867739413}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 6.4031242374328485}, "pypamguard.core.filters.DateFilter.from_json": {"tf": 3.7416573867739413}, "pypamguard.core.filters.Filters.__init__": {"tf": 6.324555320336759}, "pypamguard.core.filters.Filters.add": {"tf": 4.242640687119285}, "pypamguard.core.filters.Filters.to_json": {"tf": 3.1622776601683795}, "pypamguard.core.filters.Filters.filter": {"tf": 4.242640687119285}, "pypamguard.core.pgbfile.Report.add_warning": {"tf": 5.477225575051661}, "pypamguard.core.pgbfile.mmap_file": {"tf": 5.477225575051661}, "pypamguard.core.pgbfile.process_chunk1": {"tf": 12.206555615733702}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 12.206555615733702}, "pypamguard.core.pgbfile.process_chunk": {"tf": 8.06225774829855}, "pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 12.806248474865697}, "pypamguard.core.pgbfile.PGBFile.load": {"tf": 3.1622776601683795}, "pypamguard.core.pgbfile.PGBFile.to_json": {"tf": 3.1622776601683795}, "pypamguard.core.readers.TypeFormat.__init__": {"tf": 4.47213595499958}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 4.47213595499958}, "pypamguard.core.readers.BinaryReader.process": {"tf": 8.246211251235321}, "pypamguard.core.readers.BinaryReader.print": {"tf": 4.242640687119285}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 10.44030650891055}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 8.660254037844387}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 7.745966692414834}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 7.681145747868608}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 4.47213595499958}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 7.681145747868608}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 4.47213595499958}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 4.242640687119285}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 4.47213595499958}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": 3.7416573867739413}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 7.211102550927978}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": 3.7416573867739413}, "pypamguard.core.readers_new.Shape.__init__": {"tf": 4}, "pypamguard.core.readers_new.BinaryReader.__init__": {"tf": 5.0990195135927845}, "pypamguard.core.readers_new.BinaryReader.set_endianess": {"tf": 3.7416573867739413}, "pypamguard.core.readers_new.BinaryReader.tell": {"tf": 3.1622776601683795}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 10.770329614269007}, "pypamguard.core.readers_new.BinaryReader.millis_to_timestamp": {"tf": 3.7416573867739413}, "pypamguard.core.readers_new.BinaryReader.timestamp_read": {"tf": 5.0990195135927845}, "pypamguard.core.readers_new.BinaryReader.nstring_read": {"tf": 4.47213595499958}, "pypamguard.core.readers_new.BinaryReader.string_read": {"tf": 3.4641016151377544}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 8.12403840463596}, "pypamguard.core.registry.module_metadata": {"tf": 3.1622776601683795}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 6.782329983125268}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 4.47213595499958}, "pypamguard.core.registry.ModuleRegistry.get_module": {"tf": 6.244997998398398}, "pypamguard.core.registry.register_preinstalled_modules": {"tf": 5.0990195135927845}, "pypamguard.core.serializable.Serializable.serialize": {"tf": 3.7416573867739413}, "pypamguard.core.serializable.Serializable.to_json": {"tf": 3.1622776601683795}, "pypamguard.core.serializable.Serializable.from_json": {"tf": 3.7416573867739413}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 9}, "pypamguard.generics.genchunkinfo.GenericChunkInfo.__init__": {"tf": 4}, "pypamguard.generics.genfilefooter.GenericFileFooter.__init__": {"tf": 4.898979485566356}, "pypamguard.generics.genfileheader.GenericFileHeader.__init__": {"tf": 4}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 9}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 7.745966692414834}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__": {"tf": 6.244997998398398}, "pypamguard.load_pamguard_binary_file.timer": {"tf": 3.1622776601683795}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 13.674794331177344}, "pypamguard.logger.logger_config": {"tf": 4.69041575982343}, "pypamguard.logger.Logger.set_verbosity": {"tf": 3.7416573867739413}, "pypamguard.logger.Logger.info": {"tf": 3.7416573867739413}, "pypamguard.logger.Logger.debug": {"tf": 3.7416573867739413}, "pypamguard.logger.Logger.warning": {"tf": 3.7416573867739413}, "pypamguard.logger.Logger.error": {"tf": 3.7416573867739413}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.__init__": {"tf": 4}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.__init__": {"tf": 4}, "pypamguard.modules.detectors.click.ClickDetectorFooter.__init__": {"tf": 3.4641016151377544}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.__init__": {"tf": 4}, "pypamguard.modules.detectors.click.ClickDetector.__init__": {"tf": 4}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader.__init__": {"tf": 4}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.__init__": {"tf": 4}, "pypamguard.modules.detectors.gpl.GPLDetector.__init__": {"tf": 4}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.__init__": {"tf": 4}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.__init__": {"tf": 4}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.__init__": {"tf": 2.8284271247461903}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.__init__": {"tf": 4}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground.__init__": {"tf": 4}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.__init__": {"tf": 4}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.__init__": {"tf": 4}, "pypamguard.modules.processing.ais.AISProcessing.__init__": {"tf": 4}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.__init__": {"tf": 4}, "pypamguard.modules.processing.dbht.DbHtProcessing.__init__": {"tf": 4}, "pypamguard.modules.processing.difar.DIFARProcessing.__init__": {"tf": 4}, "pypamguard.modules.processing.ishmael.IshmaelDetections.__init__": {"tf": 4}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader.__init__": {"tf": 4}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.__init__": {"tf": 4}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.__init__": {"tf": 4}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.__init__": {"tf": 4}, "pypamguard.standard.stdbackground.StandardBackground.__init__": {"tf": 5.291502622129181}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.__init__": {"tf": 4}, "pypamguard.standard.stdfilefooter.StandardFileFooter.__init__": {"tf": 4.898979485566356}, "pypamguard.standard.stdfileheader.StandardFileHeader.__init__": {"tf": 4}, "pypamguard.standard.stdmodule.StandardModule.__init__": {"tf": 5.291502622129181}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.__init__": {"tf": 4.898979485566356}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.__init__": {"tf": 4.47213595499958}, "pypamguard.utils.annotations.read_beam_former_annotation": {"tf": 3.7416573867739413}, "pypamguard.utils.annotations.read_bearing_annotation": {"tf": 4.242640687119285}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 6.782329983125268}, "pypamguard.utils.bitmap.Bitmap.set": {"tf": 3.7416573867739413}, "pypamguard.utils.bitmap.Bitmap.clear": {"tf": 3.7416573867739413}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 3.7416573867739413}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 3.1622776601683795}, "pypamguard.utils.bitmap.Bitmap.get_binary_representation": {"tf": 3.1622776601683795}, "pypamguard.utils.serializer.serialize": {"tf": 3.1622776601683795}}, "df": 120, "a": {"docs": {"pypamguard.core.filters.RangeFilter.default_comparator": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.base.chunk.BaseChunk.__init__": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.process": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo.__init__": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.__init__": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.__init__": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.__init__": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.__init__": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.__init__": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.__init__": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.__init__": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.__init__": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground.__init__": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.__init__": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader.__init__": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule.__init__": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.__init__": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.__init__": {"tf": 1}}, "df": 32}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.pgbfile.mmap_file": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {"pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {"pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}}, "df": 6}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.utils.annotations.read_bearing_annotation": {"tf": 1}}, "df": 1}}}}}}}}}}, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.base.chunk.BaseChunk.__init__": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.process": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo.__init__": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader.__init__": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.__init__": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.__init__": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.__init__": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground.__init__": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.__init__": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.__init__": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.__init__": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing.__init__": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections.__init__": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.__init__": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.__init__": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground.__init__": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.__init__": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader.__init__": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule.__init__": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.__init__": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.__init__": {"tf": 1}}, "df": 32}}}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.core.filters.Filters.add": {"tf": 1}, "pypamguard.core.filters.Filters.filter": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"pypamguard.base.chunk.BaseChunk.process": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.get_attrs": {"tf": 1}, "pypamguard.base.chunk.BaseChunk.signature": {"tf": 1}, "pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.BaseFilter.from_json": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.default_comparator": {"tf": 1}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}, "pypamguard.core.filters.Filters.add": {"tf": 1}, "pypamguard.core.filters.Filters.to_json": {"tf": 1}, "pypamguard.core.filters.Filters.filter": {"tf": 1}, "pypamguard.core.pgbfile.Report.add_warning": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.load": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.to_json": {"tf": 1}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BinaryReader.print": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.set_endianess": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.tell": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.millis_to_timestamp": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.timestamp_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.nstring_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.string_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.get_module": {"tf": 1}, "pypamguard.core.serializable.Serializable.serialize": {"tf": 1}, "pypamguard.core.serializable.Serializable.to_json": {"tf": 1}, "pypamguard.logger.Logger.set_verbosity": {"tf": 1}, "pypamguard.logger.Logger.info": {"tf": 1}, "pypamguard.logger.Logger.debug": {"tf": 1}, "pypamguard.logger.Logger.warning": {"tf": 1}, "pypamguard.logger.Logger.error": {"tf": 1}, "pypamguard.utils.annotations.read_beam_former_annotation": {"tf": 1}, "pypamguard.utils.annotations.read_bearing_annotation": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.clear": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_binary_representation": {"tf": 1}}, "df": 47}}, "t": {"docs": {"pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "r": {"docs": {"pypamguard.core.filters.Filters.__init__": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}, "pypamguard.core.readers.TypeFormat.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.nstring_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.string_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.get_module": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pypamguard.core.registry.ModuleRegistry.get_module": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}}, "df": 2}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.TypeFormat.__init__": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.Shape.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 3}}}}}, "b": {"docs": {"pypamguard.core.filters.RangeFilter.default_comparator": {"tf": 1}}, "df": 1, "r": {"docs": {"pypamguard.base.chunk.BaseChunk.process": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.base.chunk.BaseChunk.process": {"tf": 1}}, "df": 1}}}}}}}}}}, "g": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 6}, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.exceptions.BinaryFileException.__init__": {"tf": 1}, "pypamguard.core.exceptions.StructuralException.__init__": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}}, "df": 4}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.exceptions.WarningException.__init__": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"pypamguard.core.exceptions.WarningException.__init__": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.Filters.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk": {"tf": 1}}, "df": 3}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1.4142135623730951}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1.4142135623730951}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1.4142135623730951}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1.4142135623730951}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1.4142135623730951}}, "df": 6}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.base.chunk.BaseChunk.process": {"tf": 1}, "pypamguard.core.exceptions.WarningException.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.Filters.__init__": {"tf": 1}, "pypamguard.core.pgbfile.Report.add_warning": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk1": {"tf": 2.449489742783178}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 2.449489742783178}, "pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 2.23606797749979}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1.4142135623730951}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.get_module": {"tf": 1}, "pypamguard.core.registry.register_preinstalled_modules": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1.7320508075688772}, "pypamguard.generics.genfilefooter.GenericFileFooter.__init__": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1.7320508075688772}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 1.4142135623730951}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 2.23606797749979}, "pypamguard.logger.logger_config": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.__init__": {"tf": 1}}, "df": 27}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.filters.BaseFilter.check": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "g": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.base.chunk.BaseChunk.process": {"tf": 1}, "pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.Filters.__init__": {"tf": 1}, "pypamguard.core.pgbfile.Report.add_warning": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 2}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1}, "pypamguard.core.registry.register_preinstalled_modules": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1.7320508075688772}}, "df": 13}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 6}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"pypamguard.core.exceptions.WarningException.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.exceptions.ChunkLengthMismatch.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.process_chunk1": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.process_chunk": {"tf": 1.4142135623730951}}, "df": 5}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.filters.WhitelistFilter.from_json": {"tf": 1}, "pypamguard.core.filters.RangeFilter.from_json": {"tf": 1}, "pypamguard.core.filters.DateFilter.from_json": {"tf": 1}, "pypamguard.core.serializable.Serializable.from_json": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 3}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.base.chunk.BaseChunk.process": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1}}, "df": 5}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.registry.register_preinstalled_modules": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.BinaryReader.print": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"pypamguard.base.chunk.BaseChunk.process": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.exceptions.WarningException.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.exceptions.ChunkLengthMismatch.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.exceptions.StructuralException.__init__": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}, "pypamguard.core.filters.Filters.__init__": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BinaryReader.print": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1.4142135623730951}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 18}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.get_module": {"tf": 1}}, "df": 10}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 2}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 2}}, "df": 2}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.base.chunk.BaseChunk.signature": {"tf": 1}, "pypamguard.core.filters.Filters.__init__": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.DateFilter.__init__": {"tf": 1.4142135623730951}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers_new.BinaryReader.timestamp_read": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {"pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": 1}, "pypamguard.utils.annotations.read_beam_former_annotation": {"tf": 1}, "pypamguard.utils.annotations.read_bearing_annotation": {"tf": 1}}, "df": 9}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1}}, "df": 2, "s": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.exceptions.BinaryFileException.__init__": {"tf": 1}, "pypamguard.core.exceptions.WarningException.__init__": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch.__init__": {"tf": 1}, "pypamguard.core.exceptions.StructuralException.__init__": {"tf": 1}, "pypamguard.core.pgbfile.mmap_file": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.__init__": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.__init__": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground.__init__": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.__init__": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule.__init__": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.__init__": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.__init__": {"tf": 1}}, "df": 22, "n": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.BaseFilter.check": {"tf": 1}}, "df": 1, "s": {"docs": {"pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.Filters.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 2.23606797749979}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1.7320508075688772}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1.7320508075688772}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 2.23606797749979}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.__init__": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground.__init__": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule.__init__": {"tf": 1}}, "df": 12}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.utils.bitmap.Bitmap.set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.clear": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1}}, "df": 3, "s": {"docs": {"pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}}, "df": 11}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.pgbfile.mmap_file": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 2, "s": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.__init__": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.TypeFormat.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.core.exceptions.BinaryFileException.__init__": {"tf": 1}, "pypamguard.core.exceptions.StructuralException.__init__": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}}, "df": 4}, "n": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.core.exceptions.WarningException.__init__": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch.__init__": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 6}}, "t": {"docs": {"pypamguard.core.pgbfile.mmap_file": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk1": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.process_chunk": {"tf": 1}, "pypamguard.core.readers.TypeFormat.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.Shape.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.timestamp_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.nstring_read": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1.4142135623730951}}, "df": 15, "s": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"pypamguard.utils.bitmap.Bitmap.set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.clear": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.exceptions.WarningException.__init__": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk1": {"tf": 2.23606797749979}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 2.23606797749979}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.get_module": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1.4142135623730951}, "pypamguard.generics.genfilefooter.GenericFileFooter.__init__": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1.4142135623730951}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 1.4142135623730951}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.__init__": {"tf": 1}}, "df": 11}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.core.exceptions.WarningException.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.__init__": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.__init__": {"tf": 1}}, "df": 8}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}}, "df": 2}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.get_module": {"tf": 1}}, "df": 4, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 1}}, "df": 5}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.core.exceptions.WarningException.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter.__init__": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter.__init__": {"tf": 1}}, "df": 8}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}}, "df": 2}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.get_module": {"tf": 1}}, "df": 4, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 1}}, "df": 5}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "t": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 2}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1.4142135623730951}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1.4142135623730951}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1.4142135623730951}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.BinaryReader.__init__": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 2}}, "df": 9}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.exceptions.StructuralException.__init__": {"tf": 1}, "pypamguard.logger.Logger.info": {"tf": 1}, "pypamguard.logger.Logger.debug": {"tf": 1}, "pypamguard.logger.Logger.warning": {"tf": 1}, "pypamguard.logger.Logger.error": {"tf": 1}}, "df": 5}}}}}}, "m": {"docs": {"pypamguard.core.pgbfile.process_chunk": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.pgbfile.process_chunk": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.BinaryReader.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}, "pypamguard.core.registry.module_metadata": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1.4142135623730951}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.get_module": {"tf": 1.4142135623730951}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.__init__": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground.__init__": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule.__init__": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.__init__": {"tf": 1}}, "df": 16, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.registry.register_preinstalled_modules": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.readers_new.BinaryReader.millis_to_timestamp": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}, "pypamguard.core.filters.Filters.add": {"tf": 1}, "pypamguard.core.filters.Filters.filter": {"tf": 1}, "pypamguard.core.serializable.Serializable.serialize": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}, "pypamguard.utils.serializer.serialize": {"tf": 1}}, "df": 8}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {"pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}}, "df": 7}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1.7320508075688772}, "pypamguard.logger.logger_config": {"tf": 1.4142135623730951}, "pypamguard.logger.Logger.set_verbosity": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.utils.annotations.read_bearing_annotation": {"tf": 1}}, "df": 1}}}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.filters.BaseFilter.from_json": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.from_json": {"tf": 1}, "pypamguard.core.filters.RangeFilter.from_json": {"tf": 1}, "pypamguard.core.filters.DateFilter.from_json": {"tf": 1}, "pypamguard.core.serializable.Serializable.from_json": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 6}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.pgbfile.Report.add_warning": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.pgbfile.Report.add_warning": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 4}}}, "t": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1.7320508075688772}}, "df": 8}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.Shape.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.nstring_read": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.load_pamguard_binary_file.timer": {"tf": 1}}, "df": 1, "s": {"docs": {"pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}, "pypamguard.logger.logger_config": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.readers_new.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.set_endianess": {"tf": 1}}, "df": 2}}}}}}}}, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.pgbfile.Report.add_warning": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.pgbfile.process_chunk1": {"tf": 1}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1}, "pypamguard.core.pgbfile.process_chunk": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.utils.bitmap.Bitmap.set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.clear": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}}, "df": 2}}, "s": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1.4142135623730951}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1.4142135623730951}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1.4142135623730951}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1.4142135623730951}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1.4142135623730951}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.DateFilter.__init__": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.BinaryReader.timestamp_read": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 7}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1.4142135623730951}, "pypamguard.generics.genfilefooter.GenericFileFooter.__init__": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1.4142135623730951}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 1.4142135623730951}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter.__init__": {"tf": 1.4142135623730951}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.__init__": {"tf": 1.4142135623730951}, "pypamguard.modules.detectors.click.ClickDetector.__init__": {"tf": 1.4142135623730951}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.__init__": {"tf": 1.4142135623730951}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.__init__": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.__init__": {"tf": 1.4142135623730951}, "pypamguard.standard.stdbackground.StandardBackground.__init__": {"tf": 1.4142135623730951}, "pypamguard.standard.stdfilefooter.StandardFileFooter.__init__": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule.__init__": {"tf": 1.4142135623730951}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.__init__": {"tf": 1.4142135623730951}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.__init__": {"tf": 1}}, "df": 16}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.base.chunk.BaseChunk": {"tf": 1}, "pypamguard.core.filters.BaseFilter": {"tf": 1}, "pypamguard.core.pgbfile.Report": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground": {"tf": 1.4142135623730951}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1.4142135623730951}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}}, "df": 46}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.base.chunk.BaseChunk": {"tf": 1}, "pypamguard.core.filters.BaseFilter": {"tf": 1}, "pypamguard.core.pgbfile.Report": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.FileCorruptedException": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}}, "df": 9}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.base.chunk.BaseChunk": {"tf": 1.4142135623730951}, "pypamguard.core.filters.BaseFilter": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.Report": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.PGBFile": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.NoFileHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleFooterException": {"tf": 1}, "pypamguard.core.exceptions.NoFileFooterException": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1}}, "df": 28, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1}}, "df": 18, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}}, "df": 3}}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1}}, "df": 18, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}}, "df": 3}}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"pypamguard.base.chunk.BaseChunk": {"tf": 1.4142135623730951}, "pypamguard.core.filters.BaseFilter": {"tf": 1.4142135623730951}, "pypamguard.core.readers.BinaryReader": {"tf": 1.4142135623730951}, "pypamguard.core.serializable.Serializable": {"tf": 1.4142135623730951}, "pypamguard.generics.genbackground.GenericBackground": {"tf": 1.4142135623730951}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1.4142135623730951}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1.4142135623730951}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1.4142135623730951}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1.4142135623730951}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1.4142135623730951}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1.4142135623730951}}, "df": 11}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.exceptions.BinaryFileException": {"tf": 1}, "pypamguard.core.exceptions.ModuleNotFoundException": {"tf": 1}, "pypamguard.core.filters.FilterMismatchException": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.WarningException": {"tf": 1}, "pypamguard.core.exceptions.CriticalException": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.NumericalBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader": {"tf": 1}}, "df": 6}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}}, "df": 9, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.WhitelistFilter": {"tf": 1}, "pypamguard.core.filters.RangeFilter": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}}, "df": 9}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.BinaryFileException": {"tf": 1}, "pypamguard.core.exceptions.ModuleNotFoundException": {"tf": 1}, "pypamguard.core.filters.FilterMismatchException": {"tf": 1}}, "df": 3}}}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pypamguard.core.filters.FILTER_POSITION": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DTYPES": {"tf": 1.4142135623730951}, "pypamguard.core.readers.INTS": {"tf": 1.4142135623730951}, "pypamguard.core.readers.FLOATS": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.DTYPES": {"tf": 1.4142135623730951}, "pypamguard.logger.Verbosity": {"tf": 1}, "pypamguard.utils.constants.BYTE_ORDERS": {"tf": 1.4142135623730951}, "pypamguard.utils.constants.IdentifierType": {"tf": 1.4142135623730951}}, "df": 8}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.ChunkLengthMismatch": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.StructuralException": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.DateFilter": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pypamguard.logger.Verbosity": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}}, "df": 7}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.standard.stdmodule.StandardModule": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.standard.stdmodule.StandardModule": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "doc": {"root": {"0": {"docs": {"pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 2}, "1": {"0": {"0": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 2.23606797749979}}, "df": 1}, "docs": {}, "df": 0}, "6": {"docs": {"pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}}, "df": 1}, "docs": {"pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}}, "df": 1, "d": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 1}}, "2": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 2, "d": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 2}}, "3": {"2": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "4": {"0": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "5": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 3.3166247903554}}, "df": 2, "x": {"2": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "docs": {"pypamguard": {"tf": 1.7320508075688772}, "pypamguard.base": {"tf": 1.7320508075688772}, "pypamguard.base.chunk": {"tf": 1.7320508075688772}, "pypamguard.base.chunk.BaseChunk": {"tf": 1.7320508075688772}, "pypamguard.base.chunk.BaseChunk.__init__": {"tf": 1.7320508075688772}, "pypamguard.base.chunk.BaseChunk.process": {"tf": 1.7320508075688772}, "pypamguard.base.chunk.BaseChunk.get_attrs": {"tf": 1.7320508075688772}, "pypamguard.base.chunk.BaseChunk.signature": {"tf": 1.7320508075688772}, "pypamguard.core": {"tf": 1.7320508075688772}, "pypamguard.core.exceptions": {"tf": 1.7320508075688772}, "pypamguard.core.exceptions.BinaryFileException": {"tf": 1.7320508075688772}, "pypamguard.core.exceptions.BinaryFileException.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.exceptions.BinaryFileException.position": {"tf": 1.7320508075688772}, "pypamguard.core.exceptions.WarningException": {"tf": 1.7320508075688772}, "pypamguard.core.exceptions.WarningException.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.exceptions.WarningException.chunk_info": {"tf": 1.7320508075688772}, "pypamguard.core.exceptions.WarningException.chunk": {"tf": 1.7320508075688772}, "pypamguard.core.exceptions.ChunkLengthMismatch": {"tf": 1.7320508075688772}, "pypamguard.core.exceptions.ChunkLengthMismatch.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.exceptions.CriticalException": {"tf": 1.7320508075688772}, "pypamguard.core.exceptions.ModuleNotFoundException": {"tf": 1.7320508075688772}, "pypamguard.core.exceptions.FileCorruptedException": {"tf": 1.7320508075688772}, "pypamguard.core.exceptions.StructuralException": {"tf": 1.7320508075688772}, "pypamguard.core.exceptions.StructuralException.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.exceptions.StructuralException.message": {"tf": 1.7320508075688772}, "pypamguard.core.exceptions.NoFileHeaderException": {"tf": 1.7320508075688772}, "pypamguard.core.exceptions.NoModuleHeaderException": {"tf": 1.7320508075688772}, "pypamguard.core.exceptions.NoModuleFooterException": {"tf": 1.7320508075688772}, "pypamguard.core.exceptions.NoFileFooterException": {"tf": 1.7320508075688772}, "pypamguard.core.filters": {"tf": 1.7320508075688772}, "pypamguard.core.filters.FilterMismatchException": {"tf": 2.23606797749979}, "pypamguard.core.filters.FILTER_POSITION": {"tf": 1.7320508075688772}, "pypamguard.core.filters.FILTER_POSITION.SKIP": {"tf": 1.7320508075688772}, "pypamguard.core.filters.FILTER_POSITION.KEEP": {"tf": 1.7320508075688772}, "pypamguard.core.filters.FILTER_POSITION.STOP": {"tf": 1.7320508075688772}, "pypamguard.core.filters.BaseFilter": {"tf": 1.7320508075688772}, "pypamguard.core.filters.BaseFilter.check": {"tf": 3.3166247903554}, "pypamguard.core.filters.BaseFilter.from_json": {"tf": 1.7320508075688772}, "pypamguard.core.filters.WhitelistFilter": {"tf": 1.7320508075688772}, "pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.filters.WhitelistFilter.whitelist": {"tf": 1.7320508075688772}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 3.3166247903554}, "pypamguard.core.filters.WhitelistFilter.from_json": {"tf": 1.7320508075688772}, "pypamguard.core.filters.RangeFilter": {"tf": 1.7320508075688772}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 3.1622776601683795}, "pypamguard.core.filters.RangeFilter.start": {"tf": 1.7320508075688772}, "pypamguard.core.filters.RangeFilter.end": {"tf": 1.7320508075688772}, "pypamguard.core.filters.RangeFilter.comparator": {"tf": 1.7320508075688772}, "pypamguard.core.filters.RangeFilter.validation_func": {"tf": 1.7320508075688772}, "pypamguard.core.filters.RangeFilter.ordered": {"tf": 1.7320508075688772}, "pypamguard.core.filters.RangeFilter.ignore_none": {"tf": 1.7320508075688772}, "pypamguard.core.filters.RangeFilter.default_comparator": {"tf": 1.7320508075688772}, "pypamguard.core.filters.RangeFilter.check": {"tf": 3.3166247903554}, "pypamguard.core.filters.RangeFilter.from_json": {"tf": 1.7320508075688772}, "pypamguard.core.filters.DateFilter": {"tf": 1.7320508075688772}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.filters.DateFilter.ignore_timezone": {"tf": 1.7320508075688772}, "pypamguard.core.filters.DateFilter.from_json": {"tf": 1.7320508075688772}, "pypamguard.core.filters.Filters": {"tf": 1.7320508075688772}, "pypamguard.core.filters.Filters.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.filters.Filters.INSTALLED_FILTERS": {"tf": 1.7320508075688772}, "pypamguard.core.filters.Filters.position": {"tf": 1.7320508075688772}, "pypamguard.core.filters.Filters.add": {"tf": 1.7320508075688772}, "pypamguard.core.filters.Filters.to_json": {"tf": 1.7320508075688772}, "pypamguard.core.filters.Filters.filter": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.Report": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.Report.warnings": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.Report.add_warning": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.report": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.mmap_file": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.process_chunk1": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.create_mmap_and_process_chunk": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.process_chunk": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.PGBFile": {"tf": 1.4142135623730951}, "pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 5.385164807134504}, "pypamguard.core.pgbfile.PGBFile.total_time": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.PGBFile.size": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.PGBFile.file_header": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.PGBFile.module_header": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.PGBFile.module_footer": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.PGBFile.file_footer": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.PGBFile.filters": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.PGBFile.module_class": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.PGBFile.order": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.PGBFile.path": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.PGBFile.module_registry": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.PGBFile.data": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.PGBFile.load": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.PGBFile.to_json": {"tf": 1.7320508075688772}, "pypamguard.core.readers": {"tf": 1.7320508075688772}, "pypamguard.core.readers.TypeFormat": {"tf": 1.7320508075688772}, "pypamguard.core.readers.TypeFormat.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.readers.TypeFormat.formatter": {"tf": 1.7320508075688772}, "pypamguard.core.readers.TypeFormat.size": {"tf": 1.7320508075688772}, "pypamguard.core.readers.DTYPES": {"tf": 1.7320508075688772}, "pypamguard.core.readers.DTYPES.CHAR": {"tf": 1.7320508075688772}, "pypamguard.core.readers.DTYPES.UCHAR": {"tf": 1.7320508075688772}, "pypamguard.core.readers.DTYPES.SHORT": {"tf": 1.7320508075688772}, "pypamguard.core.readers.DTYPES.USHORT": {"tf": 1.7320508075688772}, "pypamguard.core.readers.DTYPES.INT": {"tf": 1.7320508075688772}, "pypamguard.core.readers.DTYPES.UINT": {"tf": 1.7320508075688772}, "pypamguard.core.readers.DTYPES.LONG": {"tf": 1.7320508075688772}, "pypamguard.core.readers.DTYPES.ULONG": {"tf": 1.7320508075688772}, "pypamguard.core.readers.DTYPES.FLOAT": {"tf": 1.7320508075688772}, "pypamguard.core.readers.DTYPES.DOUBLE": {"tf": 1.7320508075688772}, "pypamguard.core.readers.INTS": {"tf": 1.7320508075688772}, "pypamguard.core.readers.INTS.CHAR": {"tf": 1.7320508075688772}, "pypamguard.core.readers.INTS.UCHAR": {"tf": 1.7320508075688772}, "pypamguard.core.readers.INTS.SHORT": {"tf": 1.7320508075688772}, "pypamguard.core.readers.INTS.USHORT": {"tf": 1.7320508075688772}, "pypamguard.core.readers.INTS.INT": {"tf": 1.7320508075688772}, "pypamguard.core.readers.INTS.UINT": {"tf": 1.7320508075688772}, "pypamguard.core.readers.INTS.LONG": {"tf": 1.7320508075688772}, "pypamguard.core.readers.INTS.ULONG": {"tf": 1.7320508075688772}, "pypamguard.core.readers.FLOATS": {"tf": 1.7320508075688772}, "pypamguard.core.readers.FLOATS.FLOAT": {"tf": 1.7320508075688772}, "pypamguard.core.readers.FLOATS.DOUBLE": {"tf": 1.7320508075688772}, "pypamguard.core.readers.BinaryReader": {"tf": 1.7320508075688772}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 2.449489742783178}, "pypamguard.core.readers.BinaryReader.as_helper": {"tf": 1.7320508075688772}, "pypamguard.core.readers.BinaryReader.var_name": {"tf": 1.7320508075688772}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1.7320508075688772}, "pypamguard.core.readers.BinaryReader.print": {"tf": 1.7320508075688772}, "pypamguard.core.readers.NumericalBinaryReader": {"tf": 1.7320508075688772}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 4.242640687119285}, "pypamguard.core.readers.NumericalBinaryReader.shape": {"tf": 1.7320508075688772}, "pypamguard.core.readers.NumericalBinaryReader.format": {"tf": 1.7320508075688772}, "pypamguard.core.readers.NumericalBinaryReader.post_processor": {"tf": 1.7320508075688772}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1.7320508075688772}, "pypamguard.core.readers.StringNBinaryReader": {"tf": 1.7320508075688772}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.readers.StringNBinaryReader.length": {"tf": 1.7320508075688772}, "pypamguard.core.readers.StringNBinaryReader.post_processor": {"tf": 1.7320508075688772}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1.7320508075688772}, "pypamguard.core.readers.StringBinaryReader": {"tf": 1.7320508075688772}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.readers.StringBinaryReader.length_type": {"tf": 1.7320508075688772}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1.7320508075688772}, "pypamguard.core.readers.CustomBinaryReader": {"tf": 1.7320508075688772}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 2.449489742783178}, "pypamguard.core.readers.CustomBinaryReader.function": {"tf": 1.7320508075688772}, "pypamguard.core.readers.CustomBinaryReader.count": {"tf": 1.7320508075688772}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 1.7320508075688772}, "pypamguard.core.readers.DateBinaryReader": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 2.449489742783178}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": 1.7320508075688772}, "pypamguard.core.readers.BitmapBinaryReader": {"tf": 1.7320508075688772}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 2.449489742783178}, "pypamguard.core.readers.BitmapBinaryReader.format": {"tf": 1.7320508075688772}, "pypamguard.core.readers.BitmapBinaryReader.labels": {"tf": 1.7320508075688772}, "pypamguard.core.readers.BitmapBinaryReader.bm": {"tf": 1.7320508075688772}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.DTYPES": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.DTYPES.INT8": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.DTYPES.UINT8": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.DTYPES.INT16": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.DTYPES.UINT16": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.DTYPES.INT32": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.DTYPES.UINT32": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.DTYPES.INT64": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.DTYPES.UINT64": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.DTYPES.FLOAT32": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.DTYPES.FLOAT64": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.Shape": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.Shape.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.Shape.shape": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.Shape.length": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.BinaryReader": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.BinaryReader.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.BinaryReader.fp": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.BinaryReader.set_endianess": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.BinaryReader.tell": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 16.583123951777}, "pypamguard.core.readers_new.BinaryReader.millis_to_timestamp": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.BinaryReader.timestamp_read": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.BinaryReader.nstring_read": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.BinaryReader.string_read": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.BinaryReader.bitmap_read": {"tf": 1.7320508075688772}, "pypamguard.core.registry": {"tf": 1.7320508075688772}, "pypamguard.core.registry.ais_config": {"tf": 1.7320508075688772}, "pypamguard.core.registry.click_config": {"tf": 1.7320508075688772}, "pypamguard.core.registry.clipgenerator_config": {"tf": 1.7320508075688772}, "pypamguard.core.registry.deeplearningclassifier_config": {"tf": 1.7320508075688772}, "pypamguard.core.registry.dbht_config": {"tf": 1.7320508075688772}, "pypamguard.core.registry.difar_config": {"tf": 1.7320508075688772}, "pypamguard.core.registry.noisemonitor_config": {"tf": 1.7320508075688772}, "pypamguard.core.registry.noiseband_config": {"tf": 1.7320508075688772}, "pypamguard.core.registry.gpl_config": {"tf": 1.7320508075688772}, "pypamguard.core.registry.rwedge_config": {"tf": 1.7320508075688772}, "pypamguard.core.registry.whistleandmoan_config": {"tf": 1.7320508075688772}, "pypamguard.core.registry.longtermspectralaverage_config": {"tf": 1.7320508075688772}, "pypamguard.core.registry.ishmael_config": {"tf": 1.7320508075688772}, "pypamguard.core.registry.spermwhaleipi_config": {"tf": 1.7320508075688772}, "pypamguard.core.registry.geminithreshold_config": {"tf": 1.7320508075688772}, "pypamguard.core.registry.MODULES": {"tf": 1.7320508075688772}, "pypamguard.core.registry.module_metadata": {"tf": 1.7320508075688772}, "pypamguard.core.registry.ModuleRegistry": {"tf": 1.7320508075688772}, "pypamguard.core.registry.ModuleRegistry.modules": {"tf": 1.7320508075688772}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1.7320508075688772}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1.7320508075688772}, "pypamguard.core.registry.ModuleRegistry.get_module": {"tf": 1.7320508075688772}, "pypamguard.core.registry.register_preinstalled_modules": {"tf": 1.7320508075688772}, "pypamguard.core.serializable": {"tf": 1.7320508075688772}, "pypamguard.core.serializable.Serializable": {"tf": 1.7320508075688772}, "pypamguard.core.serializable.Serializable.serialize": {"tf": 1.7320508075688772}, "pypamguard.core.serializable.Serializable.to_json": {"tf": 1.7320508075688772}, "pypamguard.core.serializable.Serializable.from_json": {"tf": 1.7320508075688772}, "pypamguard.generics": {"tf": 1.7320508075688772}, "pypamguard.generics.genbackground": {"tf": 1.7320508075688772}, "pypamguard.generics.genbackground.GenericBackground": {"tf": 1.7320508075688772}, "pypamguard.generics.genbackground.GenericBackground.__init__": {"tf": 1.7320508075688772}, "pypamguard.generics.genchunkinfo": {"tf": 1.7320508075688772}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1.7320508075688772}, "pypamguard.generics.genchunkinfo.GenericChunkInfo.__init__": {"tf": 1.7320508075688772}, "pypamguard.generics.genfilefooter": {"tf": 1.7320508075688772}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1.7320508075688772}, "pypamguard.generics.genfilefooter.GenericFileFooter.__init__": {"tf": 1.7320508075688772}, "pypamguard.generics.genfilefooter.GenericFileFooter.length": {"tf": 1.7320508075688772}, "pypamguard.generics.genfilefooter.GenericFileFooter.identifier": {"tf": 1.7320508075688772}, "pypamguard.generics.genfileheader": {"tf": 1.7320508075688772}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1.7320508075688772}, "pypamguard.generics.genfileheader.GenericFileHeader.__init__": {"tf": 1.7320508075688772}, "pypamguard.generics.genfileheader.GenericFileHeader.length": {"tf": 1.7320508075688772}, "pypamguard.generics.genfileheader.GenericFileHeader.identifier": {"tf": 1.7320508075688772}, "pypamguard.generics.genfileheader.GenericFileHeader.file_format": {"tf": 1.7320508075688772}, "pypamguard.generics.genfileheader.GenericFileHeader.pamguard": {"tf": 1.7320508075688772}, "pypamguard.generics.genfileheader.GenericFileHeader.version": {"tf": 1.7320508075688772}, "pypamguard.generics.genfileheader.GenericFileHeader.branch": {"tf": 1.7320508075688772}, "pypamguard.generics.genfileheader.GenericFileHeader.data_date": {"tf": 1.7320508075688772}, "pypamguard.generics.genfileheader.GenericFileHeader.analysis_date": {"tf": 1.7320508075688772}, "pypamguard.generics.genfileheader.GenericFileHeader.start_sample": {"tf": 1.7320508075688772}, "pypamguard.generics.genfileheader.GenericFileHeader.module_type": {"tf": 1.7320508075688772}, "pypamguard.generics.genfileheader.GenericFileHeader.module_name": {"tf": 1.7320508075688772}, "pypamguard.generics.genfileheader.GenericFileHeader.stream_name": {"tf": 1.7320508075688772}, "pypamguard.generics.genfileheader.GenericFileHeader.extra_info_len": {"tf": 1.7320508075688772}, "pypamguard.generics.genmodule": {"tf": 1.7320508075688772}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1.7320508075688772}, "pypamguard.generics.genmodule.GenericModule.__init__": {"tf": 1.7320508075688772}, "pypamguard.generics.genmodulefooter": {"tf": 1.7320508075688772}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1.7320508075688772}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.__init__": {"tf": 1.7320508075688772}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.length": {"tf": 1.7320508075688772}, "pypamguard.generics.genmodulefooter.GenericModuleFooter.identifier": {"tf": 1.7320508075688772}, "pypamguard.generics.genmoduleheader": {"tf": 1.7320508075688772}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1.7320508075688772}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.__init__": {"tf": 1.7320508075688772}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.length": {"tf": 1.7320508075688772}, "pypamguard.generics.genmoduleheader.GenericModuleHeader.identifier": {"tf": 1.7320508075688772}, "pypamguard.load_pamguard_binary_file": {"tf": 1.7320508075688772}, "pypamguard.load_pamguard_binary_file.timer": {"tf": 1.7320508075688772}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 5.744562646538029}, "pypamguard.logger": {"tf": 1.7320508075688772}, "pypamguard.logger.Verbosity": {"tf": 1.7320508075688772}, "pypamguard.logger.Verbosity.CRITICAL": {"tf": 1.7320508075688772}, "pypamguard.logger.Verbosity.ERROR": {"tf": 1.7320508075688772}, "pypamguard.logger.Verbosity.WARNING": {"tf": 1.7320508075688772}, "pypamguard.logger.Verbosity.INFO": {"tf": 1.7320508075688772}, "pypamguard.logger.Verbosity.DEBUG": {"tf": 1.7320508075688772}, "pypamguard.logger.logger_config": {"tf": 1.7320508075688772}, "pypamguard.logger.Logger": {"tf": 1.7320508075688772}, "pypamguard.logger.Logger.verbosity": {"tf": 1.7320508075688772}, "pypamguard.logger.Logger.set_verbosity": {"tf": 1.7320508075688772}, "pypamguard.logger.Logger.info": {"tf": 1.7320508075688772}, "pypamguard.logger.Logger.debug": {"tf": 1.7320508075688772}, "pypamguard.logger.Logger.warning": {"tf": 1.7320508075688772}, "pypamguard.logger.Logger.error": {"tf": 1.7320508075688772}, "pypamguard.logger.logger": {"tf": 1.7320508075688772}, "pypamguard.main": {"tf": 1.7320508075688772}, "pypamguard.modules": {"tf": 1.7320508075688772}, "pypamguard.modules.classifiers": {"tf": 1.7320508075688772}, "pypamguard.modules.classifiers.deeplearningclassifier": {"tf": 1.7320508075688772}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1.7320508075688772}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.type": {"tf": 1.7320508075688772}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.is_binary": {"tf": 1.7320508075688772}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.scale": {"tf": 1.7320508075688772}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_species": {"tf": 1.7320508075688772}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.predictions": {"tf": 1.7320508075688772}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels.n_class": {"tf": 1.7320508075688772}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1.7320508075688772}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_chan": {"tf": 1.7320508075688772}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.n_samps": {"tf": 1.7320508075688772}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.scale": {"tf": 1.7320508075688772}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections.wave": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.click": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.click.ClickDetectorFooter.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count_length": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.click.ClickDetectorFooter.types_count": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.noise_len": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.click.ClickDetectorBackgound.background": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.click.ClickDetector.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.click.ClickDetector.start_sample": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.click.ClickDetector.channel_map": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.click.ClickDetector.trigger_map": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.click.ClickDetector.type": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.click.ClickDetector.flags": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.click.ClickDetector.delays": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.click.ClickDetector.angles": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.click.ClickDetector.angle_errors": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.click.ClickDetector.duration": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.click.ClickDetector.wave": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.clicktriggerbackground": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.scale": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground.raw_levels": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.gpl": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.gpl.GPLDetector.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.rwedge": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.type": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.signal": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.noise": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.n_slices": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.slice_nums": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.lo_freqs": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_freqs": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.hi_freqs": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector.peak_amp": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.spectralbackground": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.first_bin": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.noise_len": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground.background": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.whistleandmoan": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader.delay_scale": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_slices": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.amplitude": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.contour_width": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.slice_numbers": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.n_peaks": {"tf": 1.7320508075688772}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector.peak_data": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_points": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.n_sonar": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_ids": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.straight_length": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.wobbly_length": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.mean_occupancy": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.time_millis": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.sonar_id": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_bearing": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_bearing": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_bearing": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.min_range": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_range": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.peak_range": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.obj_size": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.occupancy": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.ave_value": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.tot_value": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.max_value": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector.dates": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.spermwhaleipi": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.parent_uid": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.ipi_amplitude": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.sample_rate": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.max_val": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_len": {"tf": 1.7320508075688772}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI.echo_data": {"tf": 1.7320508075688772}, "pypamguard.modules.processing": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.ais": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.ais.AISProcessing.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.ais.AISProcessing.mmsi_number": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.ais.AISProcessing.fill_bits": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.ais.AISProcessing.char_data": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.ais.AISProcessing.ais_channel": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.clipgenerator": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_millis": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.file_name": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_name": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.trigger_uid": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_chan": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.n_samps": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.scale": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.clipgenerator.ClipGenerator.wave": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.dbht": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.dbht.DbHtProcessing.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.dbht.DbHtProcessing.rms": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.dbht.DbHtProcessing.zero_peak": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.dbht.DbHtProcessing.peak_peak": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.difar": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.difar.DIFARProcessing.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.difar.DIFARProcessing.clip_start": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.difar.DIFARProcessing.display_sample_rate": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.difar.DIFARProcessing.demuxed_length": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.difar.DIFARProcessing.amplitude": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.difar.DIFARProcessing.gain": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_angle": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.difar.DIFARProcessing.sel_freq": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.difar.DIFARProcessing.species_code": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.difar.DIFARProcessing.tracked_group": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.difar.DIFARProcessing.max_val": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.difar.DIFARProcessing.demux_data": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.difar.DIFARProcessing.num_matches": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.difar.DIFARProcessing.latitude": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.difar.DIFARProcessing.longitude": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.difar.DIFARProcessing.errors": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.ishmael": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.ishmael.IshmaelDetections.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.ishmael.IshmaelDetections.peak_height": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.ishmael.IshmaelDetections.time_sample": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.longtermspectralaverage": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.a": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.b": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_millis": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.end_date": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.n_fft": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.max_val": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.bytes_data": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage.data": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.noiseband": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.noisemonitor": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.n_bands": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.stats_types": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.lo_edges": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader.hi_edges": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.__init__": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.i_chan": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_bands": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.n_measures": {"tf": 1.7320508075688772}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor.noise": {"tf": 1.7320508075688772}, "pypamguard.standard": {"tf": 1.7320508075688772}, "pypamguard.standard.stdbackground": {"tf": 1.7320508075688772}, "pypamguard.standard.stdbackground.StandardBackground": {"tf": 1.7320508075688772}, "pypamguard.standard.stdbackground.StandardBackground.__init__": {"tf": 1.7320508075688772}, "pypamguard.standard.stdchunkinfo": {"tf": 1.7320508075688772}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1.7320508075688772}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.__init__": {"tf": 1.7320508075688772}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.length": {"tf": 1.7320508075688772}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo.identifier": {"tf": 1.7320508075688772}, "pypamguard.standard.stddata": {"tf": 1.7320508075688772}, "pypamguard.standard.stddata.DATA_FLAG_FIELDS": {"tf": 1.7320508075688772}, "pypamguard.standard.stddata.StandardDataMixin": {"tf": 1.7320508075688772}, "pypamguard.standard.stdfilefooter": {"tf": 1.7320508075688772}, "pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1.7320508075688772}, "pypamguard.standard.stdfilefooter.StandardFileFooter.__init__": {"tf": 1.7320508075688772}, "pypamguard.standard.stdfilefooter.StandardFileFooter.n_objects": {"tf": 1.7320508075688772}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date_raw": {"tf": 1.7320508075688772}, "pypamguard.standard.stdfilefooter.StandardFileFooter.data_date": {"tf": 1.7320508075688772}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date_raw": {"tf": 1.7320508075688772}, "pypamguard.standard.stdfilefooter.StandardFileFooter.analysis_date": {"tf": 1.7320508075688772}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_sample": {"tf": 1.7320508075688772}, "pypamguard.standard.stdfilefooter.StandardFileFooter.lowest_uid": {"tf": 1.7320508075688772}, "pypamguard.standard.stdfilefooter.StandardFileFooter.highest_uid": {"tf": 1.7320508075688772}, "pypamguard.standard.stdfilefooter.StandardFileFooter.file_length": {"tf": 1.7320508075688772}, "pypamguard.standard.stdfilefooter.StandardFileFooter.end_reason": {"tf": 1.7320508075688772}, "pypamguard.standard.stdfileheader": {"tf": 1.7320508075688772}, "pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1.7320508075688772}, "pypamguard.standard.stdfileheader.StandardFileHeader.__init__": {"tf": 1.7320508075688772}, "pypamguard.standard.stdmodule": {"tf": 1.7320508075688772}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1.7320508075688772}, "pypamguard.standard.stdmodule.StandardModule.__init__": {"tf": 1.7320508075688772}, "pypamguard.standard.stdmodulefooter": {"tf": 1.7320508075688772}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1.7320508075688772}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.__init__": {"tf": 1.7320508075688772}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.length": {"tf": 1.7320508075688772}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.identifier": {"tf": 1.7320508075688772}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter.binary_length": {"tf": 1.7320508075688772}, "pypamguard.standard.stdmoduleheader": {"tf": 1.7320508075688772}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1.7320508075688772}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.__init__": {"tf": 1.7320508075688772}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.length": {"tf": 1.7320508075688772}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.identifier": {"tf": 1.7320508075688772}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.version": {"tf": 1.7320508075688772}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader.binary_length": {"tf": 1.7320508075688772}, "pypamguard.utils": {"tf": 1.7320508075688772}, "pypamguard.utils.annotations": {"tf": 1.7320508075688772}, "pypamguard.utils.annotations.read_beam_former_annotation": {"tf": 1.7320508075688772}, "pypamguard.utils.annotations.read_bearing_annotation": {"tf": 1.7320508075688772}, "pypamguard.utils.bitmap": {"tf": 1.7320508075688772}, "pypamguard.utils.bitmap.Bitmap": {"tf": 1.7320508075688772}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 4.795831523312719}, "pypamguard.utils.bitmap.Bitmap.fields2index": {"tf": 1.7320508075688772}, "pypamguard.utils.bitmap.Bitmap.index2fields": {"tf": 1.7320508075688772}, "pypamguard.utils.bitmap.Bitmap.size": {"tf": 1.7320508075688772}, "pypamguard.utils.bitmap.Bitmap.bits": {"tf": 1.7320508075688772}, "pypamguard.utils.bitmap.Bitmap.set": {"tf": 1.7320508075688772}, "pypamguard.utils.bitmap.Bitmap.clear": {"tf": 1.7320508075688772}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1.7320508075688772}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1.7320508075688772}, "pypamguard.utils.bitmap.Bitmap.get_binary_representation": {"tf": 1.7320508075688772}, "pypamguard.utils.constants": {"tf": 1.7320508075688772}, "pypamguard.utils.constants.TIME_RANGE": {"tf": 1.7320508075688772}, "pypamguard.utils.constants.UID_RANGE": {"tf": 1.7320508075688772}, "pypamguard.utils.constants.UID_LIST": {"tf": 1.7320508075688772}, "pypamguard.utils.constants.FILTER": {"tf": 1.7320508075688772}, "pypamguard.utils.constants.CHANNEL": {"tf": 1.7320508075688772}, "pypamguard.utils.constants.DEFAULT_BUFFER_SIZE": {"tf": 1.7320508075688772}, "pypamguard.utils.constants.BYTE_ORDERS": {"tf": 1.7320508075688772}, "pypamguard.utils.constants.BYTE_ORDERS.LITTLE_ENDIAN": {"tf": 1.7320508075688772}, "pypamguard.utils.constants.BYTE_ORDERS.BIG_ENDIAN": {"tf": 1.7320508075688772}, "pypamguard.utils.constants.IdentifierType": {"tf": 1.7320508075688772}, "pypamguard.utils.constants.IdentifierType.FILE_HEADER": {"tf": 1.7320508075688772}, "pypamguard.utils.constants.IdentifierType.FILE_FOOTER": {"tf": 1.7320508075688772}, "pypamguard.utils.constants.IdentifierType.MODULE_HEADER": {"tf": 1.7320508075688772}, "pypamguard.utils.constants.IdentifierType.MODULE_FOOTER": {"tf": 1.7320508075688772}, "pypamguard.utils.constants.IdentifierType.IGNORE": {"tf": 1.7320508075688772}, "pypamguard.utils.constants.IdentifierType.FILE_BACKGROUND": {"tf": 1.7320508075688772}, "pypamguard.utils.serializer": {"tf": 1.7320508075688772}, "pypamguard.utils.serializer.serialize": {"tf": 1.7320508075688772}}, "df": 544, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.base.chunk.BaseChunk": {"tf": 1}, "pypamguard.core.pgbfile.Report": {"tf": 1}, "pypamguard.core.readers.BinaryReader": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader": {"tf": 1}, "pypamguard.core.serializable.Serializable": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}}, "df": 51}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.base.chunk.BaseChunk": {"tf": 1}, "pypamguard.core.exceptions.BinaryFileException": {"tf": 1}, "pypamguard.core.exceptions.WarningException": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch": {"tf": 1}, "pypamguard.core.exceptions.CriticalException": {"tf": 1}, "pypamguard.core.exceptions.ModuleNotFoundException": {"tf": 1}, "pypamguard.core.exceptions.FileCorruptedException": {"tf": 1}, "pypamguard.core.exceptions.StructuralException": {"tf": 1}, "pypamguard.core.exceptions.NoFileHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleFooterException": {"tf": 1}, "pypamguard.core.exceptions.NoFileFooterException": {"tf": 1}, "pypamguard.core.filters.FilterMismatchException": {"tf": 1}, "pypamguard.core.filters.BaseFilter": {"tf": 1}, "pypamguard.core.filters.RangeFilter": {"tf": 1}, "pypamguard.core.filters.DateFilter": {"tf": 1}, "pypamguard.core.pgbfile.Report": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile": {"tf": 1}, "pypamguard.core.readers.BinaryReader": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.NumericalBinaryReader": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.BitmapBinaryReader": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.serializable.Serializable": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 75}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.utils.bitmap.Bitmap.clear": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.base.chunk.BaseChunk": {"tf": 1}, "pypamguard.core.pgbfile.Report": {"tf": 1}, "pypamguard.core.readers.BinaryReader": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader": {"tf": 1}, "pypamguard.core.serializable.Serializable": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}}, "df": 51}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.BinaryFileException": {"tf": 1}, "pypamguard.core.exceptions.WarningException": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch": {"tf": 1}, "pypamguard.core.exceptions.CriticalException": {"tf": 1}, "pypamguard.core.exceptions.ModuleNotFoundException": {"tf": 1}, "pypamguard.core.exceptions.FileCorruptedException": {"tf": 1}, "pypamguard.core.exceptions.StructuralException": {"tf": 1}, "pypamguard.core.exceptions.NoFileHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleFooterException": {"tf": 1}, "pypamguard.core.exceptions.NoFileFooterException": {"tf": 1}}, "df": 11}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.BinaryReader.process": {"tf": null}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": null}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": null}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": null}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": null}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": null}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": null}}, "df": 7}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 1, "d": {"docs": {"pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": 1}}, "df": 7}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.filters.WhitelistFilter": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.base.chunk.BaseChunk": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 2}, "pypamguard.core.pgbfile.Report": {"tf": 1}, "pypamguard.core.readers.BinaryReader": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.readers.StringNBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.core.serializable.Serializable": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}}, "df": 63}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}}, "df": 1, "n": {"docs": {"pypamguard.core.filters.FilterMismatchException": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"pypamguard.core.filters.FilterMismatchException": {"tf": 1}, "pypamguard.core.filters.BaseFilter.check": {"tf": 1.7320508075688772}, "pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1.7320508075688772}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 3.3166247903554}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1.7320508075688772}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 2.6457513110645907}, "pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 2.449489742783178}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 3.1622776601683795}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 2.449489742783178}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 2.449489742783178}, "pypamguard.utils.bitmap.Bitmap.set": {"tf": 1.4142135623730951}, "pypamguard.utils.bitmap.Bitmap.clear": {"tf": 1.4142135623730951}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1.4142135623730951}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}}, "df": 29, "n": {"docs": {"pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.pgbfile.PGBFile": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 6}}}, "o": {"docs": {"pypamguard.base.chunk.BaseChunk": {"tf": 1}, "pypamguard.core.filters.FilterMismatchException": {"tf": 1}, "pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 2.23606797749979}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}, "pypamguard.core.pgbfile.Report": {"tf": 1}, "pypamguard.core.readers.BinaryReader": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 2}, "pypamguard.core.readers.StringNBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.core.serializable.Serializable": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 2.6457513110645907}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 2.449489742783178}}, "df": 65}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 2}}, "df": 2}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1}}, "df": 2}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 2}}, "df": 5, "s": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.base.chunk.BaseChunk": {"tf": 1}, "pypamguard.core.pgbfile.Report": {"tf": 1}, "pypamguard.core.readers.BinaryReader": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader": {"tf": 1}, "pypamguard.core.serializable.Serializable": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}}, "df": 51}, "d": {"docs": {"pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}}, "df": 6, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 2.449489742783178}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.7320508075688772}}, "df": 2, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "m": {"docs": {"pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.pgbfile.PGBFile": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 7}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1.7320508075688772}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {"pypamguard.base.chunk.BaseChunk": {"tf": 1}, "pypamguard.core.filters.FilterMismatchException": {"tf": 1.4142135623730951}, "pypamguard.core.filters.WhitelistFilter": {"tf": 1.7320508075688772}, "pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 3}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}, "pypamguard.core.pgbfile.Report": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile": {"tf": 1}, "pypamguard.core.readers.BinaryReader": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 2.23606797749979}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 2.8284271247461903}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 2}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 2.23606797749979}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 2.23606797749979}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 2.23606797749979}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 3.605551275463989}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1.7320508075688772}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}, "pypamguard.core.serializable.Serializable": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1.7320508075688772}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 2.449489742783178}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}}, "df": 77, "n": {"docs": {"pypamguard.base.chunk.BaseChunk": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.pgbfile.Report": {"tf": 1}, "pypamguard.core.readers.BinaryReader": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 2}, "pypamguard.core.serializable.Serializable": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 56, "d": {"docs": {"pypamguard.core.filters.FilterMismatchException": {"tf": 1}, "pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 2}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 2}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1.7320508075688772}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1.4142135623730951}}, "df": 13}, "y": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "c": {"docs": {"pypamguard.base.chunk.BaseChunk": {"tf": 1}, "pypamguard.core.pgbfile.Report": {"tf": 1}, "pypamguard.core.readers.BinaryReader": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader": {"tf": 1}, "pypamguard.core.serializable.Serializable": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}}, "df": 51}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.core.exceptions.BinaryFileException": {"tf": 1}, "pypamguard.core.exceptions.WarningException": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch": {"tf": 1}, "pypamguard.core.exceptions.CriticalException": {"tf": 1}, "pypamguard.core.exceptions.ModuleNotFoundException": {"tf": 1}, "pypamguard.core.exceptions.FileCorruptedException": {"tf": 1}, "pypamguard.core.exceptions.StructuralException": {"tf": 1}, "pypamguard.core.exceptions.NoFileHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleFooterException": {"tf": 1}, "pypamguard.core.exceptions.NoFileFooterException": {"tf": 1}, "pypamguard.core.filters.BaseFilter": {"tf": 1}, "pypamguard.core.filters.RangeFilter": {"tf": 1}, "pypamguard.core.filters.DateFilter": {"tf": 1}}, "df": 14}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.filters.FilterMismatchException": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 5}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.core.filters.FilterMismatchException": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 10}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.DateFilter.__init__": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 2.8284271247461903}}, "df": 2, "s": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {"pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1.4142135623730951}}, "df": 1, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.base.chunk.BaseChunk": {"tf": 1}, "pypamguard.core.pgbfile.Report": {"tf": 1}, "pypamguard.core.readers.BinaryReader": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader": {"tf": 1}, "pypamguard.core.serializable.Serializable": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}}, "df": 51}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}}, "df": 5}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.filters.WhitelistFilter": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}}, "df": 5, "s": {"docs": {"pypamguard.utils.bitmap.Bitmap.set": {"tf": 1}}, "df": 1}}, "e": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 2.23606797749979}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 2.23606797749979}}, "df": 2}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.base.chunk.BaseChunk": {"tf": 1}, "pypamguard.core.pgbfile.Report": {"tf": 1}, "pypamguard.core.readers.BinaryReader": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader": {"tf": 1}, "pypamguard.core.serializable.Serializable": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}}, "df": 51}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.filters.FilterMismatchException": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 2}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 4}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.filters.WhitelistFilter": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 2.23606797749979}}, "df": 2}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.base.chunk.BaseChunk": {"tf": 1}, "pypamguard.core.pgbfile.Report": {"tf": 1}, "pypamguard.core.readers.BinaryReader": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.serializable.Serializable": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}}, "df": 55}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 5}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.filters.WhitelistFilter": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 3.1622776601683795}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1.4142135623730951}, "pypamguard.utils.bitmap.Bitmap.set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.clear": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}}, "df": 23, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.base.chunk.BaseChunk": {"tf": 1}, "pypamguard.core.pgbfile.Report": {"tf": 1}, "pypamguard.core.readers.BinaryReader": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader": {"tf": 1}, "pypamguard.core.serializable.Serializable": {"tf": 1}, "pypamguard.generics.genbackground.GenericBackground": {"tf": 1}, "pypamguard.generics.genchunkinfo.GenericChunkInfo": {"tf": 1}, "pypamguard.generics.genfilefooter.GenericFileFooter": {"tf": 1}, "pypamguard.generics.genfileheader.GenericFileHeader": {"tf": 1}, "pypamguard.generics.genmodule.GenericModule": {"tf": 1}, "pypamguard.generics.genmodulefooter.GenericModuleFooter": {"tf": 1}, "pypamguard.generics.genmoduleheader.GenericModuleHeader": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCModels": {"tf": 1}, "pypamguard.modules.classifiers.deeplearningclassifier.DLCDetections": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorFooter": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetectorBackgound": {"tf": 1}, "pypamguard.modules.detectors.click.ClickDetector": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackgroundHeader": {"tf": 1}, "pypamguard.modules.detectors.clicktriggerbackground.ClickTriggerBackground": {"tf": 1}, "pypamguard.modules.detectors.gpl.GPLDetector": {"tf": 1}, "pypamguard.modules.detectors.rwedge.RWEdgeDetector": {"tf": 1}, "pypamguard.modules.detectors.spectralbackground.SpectralBackground": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetectorHeader": {"tf": 1}, "pypamguard.modules.detectors.whistleandmoan.WhistleAndMoanDetector": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundHeader": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackgroundGLFRecord": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetectorBackground": {"tf": 1}, "pypamguard.modules.plugins.geminithreshold.GeminiThresholdDetector": {"tf": 1}, "pypamguard.modules.plugins.spermwhaleipi.SpermWhaleIPI": {"tf": 1}, "pypamguard.modules.processing.ais.AISProcessing": {"tf": 1}, "pypamguard.modules.processing.clipgenerator.ClipGenerator": {"tf": 1}, "pypamguard.modules.processing.dbht.DbHtProcessing": {"tf": 1}, "pypamguard.modules.processing.difar.DIFARProcessing": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelDetections": {"tf": 1}, "pypamguard.modules.processing.ishmael.IshmaelData": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverageHeader": {"tf": 1}, "pypamguard.modules.processing.longtermspectralaverage.LongTermSpectralAverage": {"tf": 1}, "pypamguard.modules.processing.noiseband.NoiseBandMonitor": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitorHeader": {"tf": 1}, "pypamguard.modules.processing.noisemonitor.NoiseMonitor": {"tf": 1}, "pypamguard.standard.stdbackground.StandardBackground": {"tf": 1}, "pypamguard.standard.stdchunkinfo.StandardChunkInfo": {"tf": 1}, "pypamguard.standard.stdfilefooter.StandardFileFooter": {"tf": 1}, "pypamguard.standard.stdfileheader.StandardFileHeader": {"tf": 1}, "pypamguard.standard.stdmodule.StandardModule": {"tf": 1}, "pypamguard.standard.stdmodulefooter.StandardModuleFooter": {"tf": 1}, "pypamguard.standard.stdmoduleheader.StandardModuleHeader": {"tf": 1}}, "df": 51}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.clear": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1}}, "df": 4}}}, "t": {"1": {"6": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 3}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "8": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 2}}, "df": 1}, "docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "o": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"pypamguard.core.filters.FilterMismatchException": {"tf": 1.7320508075688772}, "pypamguard.core.filters.WhitelistFilter": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 2}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 2}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1.4142135623730951}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1.7320508075688772}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1}}, "df": 13}, "t": {"docs": {"pypamguard.core.filters.FilterMismatchException": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 3}, "f": {"docs": {"pypamguard.core.filters.WhitelistFilter": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 2}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1}}, "df": 4}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}}, "df": 1, "d": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.exceptions.BinaryFileException": {"tf": 1}, "pypamguard.core.exceptions.WarningException": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch": {"tf": 1}, "pypamguard.core.exceptions.CriticalException": {"tf": 1}, "pypamguard.core.exceptions.ModuleNotFoundException": {"tf": 1}, "pypamguard.core.exceptions.FileCorruptedException": {"tf": 1}, "pypamguard.core.exceptions.StructuralException": {"tf": 1}, "pypamguard.core.exceptions.NoFileHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleFooterException": {"tf": 1}, "pypamguard.core.exceptions.NoFileFooterException": {"tf": 1}, "pypamguard.core.filters.BaseFilter": {"tf": 1}, "pypamguard.core.filters.RangeFilter": {"tf": 1}, "pypamguard.core.filters.DateFilter": {"tf": 1}}, "df": 14}}}, "y": {"docs": {"pypamguard.core.filters.FilterMismatchException": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1.7320508075688772}}, "df": 3, "t": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 2.449489742783178}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.DateFilter.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 2}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 2.23606797749979}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.core.pgbfile.PGBFile": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 14}}}}, "t": {"docs": {"pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1.7320508075688772}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1.4142135623730951}}, "df": 3, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 2.449489742783178}, "pypamguard.utils.bitmap.Bitmap.set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.clear": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}}, "df": 5}}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.exceptions.BinaryFileException": {"tf": 1}, "pypamguard.core.exceptions.WarningException": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch": {"tf": 1}, "pypamguard.core.exceptions.CriticalException": {"tf": 1}, "pypamguard.core.exceptions.ModuleNotFoundException": {"tf": 1}, "pypamguard.core.exceptions.FileCorruptedException": {"tf": 1}, "pypamguard.core.exceptions.StructuralException": {"tf": 1}, "pypamguard.core.exceptions.NoFileHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleFooterException": {"tf": 1}, "pypamguard.core.exceptions.NoFileFooterException": {"tf": 1}, "pypamguard.core.filters.BaseFilter": {"tf": 1}, "pypamguard.core.filters.RangeFilter": {"tf": 1}, "pypamguard.core.filters.DateFilter": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 2.23606797749979}}, "df": 16, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.FilterMismatchException": {"tf": 1}, "pypamguard.core.filters.BaseFilter.check": {"tf": 1.4142135623730951}, "pypamguard.core.filters.WhitelistFilter": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1.4142135623730951}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"pypamguard.core.filters.FilterMismatchException": {"tf": 1}, "pypamguard.core.filters.BaseFilter": {"tf": 1}, "pypamguard.core.filters.RangeFilter": {"tf": 1}, "pypamguard.core.filters.DateFilter": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1.4142135623730951}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1.4142135623730951}}, "df": 6}}}}, "e": {"docs": {"pypamguard.core.pgbfile.PGBFile": {"tf": 1}, "pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1.4142135623730951}}, "df": 18, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.clear": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1}}, "df": 10, "s": {"docs": {"pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1.7320508075688772}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 17}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 3}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 2, "s": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "p": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}}, "df": 1}}, "n": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.exceptions.BinaryFileException": {"tf": 1}, "pypamguard.core.exceptions.WarningException": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch": {"tf": 1}, "pypamguard.core.exceptions.CriticalException": {"tf": 1}, "pypamguard.core.exceptions.ModuleNotFoundException": {"tf": 1}, "pypamguard.core.exceptions.FileCorruptedException": {"tf": 1}, "pypamguard.core.exceptions.StructuralException": {"tf": 1}, "pypamguard.core.exceptions.NoFileHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleFooterException": {"tf": 1}, "pypamguard.core.exceptions.NoFileFooterException": {"tf": 1}}, "df": 11, "e": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 2}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 4}}, "t": {"docs": {"pypamguard.core.filters.FilterMismatchException": {"tf": 1}}, "df": 1, "e": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 2}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.4142135623730951}}, "df": 1}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 1}}, "w": {"docs": {"pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 3.3166247903554}}, "df": 1}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 2}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.exceptions.BinaryFileException": {"tf": 1}, "pypamguard.core.exceptions.WarningException": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch": {"tf": 1}, "pypamguard.core.exceptions.CriticalException": {"tf": 1}, "pypamguard.core.exceptions.ModuleNotFoundException": {"tf": 1}, "pypamguard.core.exceptions.FileCorruptedException": {"tf": 1}, "pypamguard.core.exceptions.StructuralException": {"tf": 1}, "pypamguard.core.exceptions.NoFileHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleFooterException": {"tf": 1}, "pypamguard.core.exceptions.NoFileFooterException": {"tf": 1}}, "df": 11}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.exceptions.BinaryFileException": {"tf": 1}, "pypamguard.core.exceptions.WarningException": {"tf": 1}, "pypamguard.core.exceptions.ChunkLengthMismatch": {"tf": 1}, "pypamguard.core.exceptions.CriticalException": {"tf": 1}, "pypamguard.core.exceptions.ModuleNotFoundException": {"tf": 1}, "pypamguard.core.exceptions.FileCorruptedException": {"tf": 1}, "pypamguard.core.exceptions.StructuralException": {"tf": 1}, "pypamguard.core.exceptions.NoFileHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleHeaderException": {"tf": 1}, "pypamguard.core.exceptions.NoModuleFooterException": {"tf": 1}, "pypamguard.core.exceptions.NoFileFooterException": {"tf": 1}}, "df": 11}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 2}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}}, "df": 6}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}}, "df": 3}}, "d": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.filters.FilterMismatchException": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 2.23606797749979}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 2.23606797749979}}, "df": 6, "s": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.pgbfile.PGBFile": {"tf": 1}, "pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 8}}}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1.4142135623730951}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 2.6457513110645907}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 4.358898943540674}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1.4142135623730951}}, "df": 7, "s": {"docs": {"pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": 1}}, "df": 7}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.FilterMismatchException": {"tf": 1}, "pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 2.6457513110645907}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"pypamguard.core.filters.WhitelistFilter": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1.7320508075688772}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.filters.FilterMismatchException": {"tf": 1}}, "df": 1, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}}, "df": 3, "s": {"docs": {"pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.readers.DateBinaryReader": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}}, "df": 5}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.BaseFilter.check": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.check": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.filters.RangeFilter.check": {"tf": 1}, "pypamguard.core.filters.DateFilter.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.clear": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.is_set": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}}, "df": 14, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1.4142135623730951}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 2}}, "df": 1}}}}}}, "f": {"docs": {"pypamguard.core.filters.WhitelistFilter": {"tf": 1}, "pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}, "pypamguard.core.filters.RangeFilter.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1.7320508075688772}, "pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 4}, "pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}, "pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1.4142135623730951}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 2}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}}, "df": 12, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "n": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}}, "df": 1}}, "e": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.filters.DateFilter.__init__": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.core.pgbfile.PGBFile.__init__": {"tf": 1.7320508075688772}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.filters.WhitelistFilter.__init__": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1.4142135623730951}, "pypamguard.utils.bitmap.Bitmap.get_set_bits": {"tf": 1}}, "df": 3}}}, "t": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pypamguard.core.readers.StringBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1.4142135623730951}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1.4142135623730951}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 2}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1}, "pypamguard.utils.bitmap.Bitmap.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"pypamguard.core.registry.ModuleRegistry.deregister_module": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.DateFilter.__init__": {"tf": 2.6457513110645907}, "pypamguard.core.readers.DateBinaryReader": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.filters.DateFilter.__init__": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {"pypamguard.core.readers.BinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.BinaryReader.process": {"tf": 1}, "pypamguard.core.readers.NumericalBinaryReader.__init__": {"tf": 2.23606797749979}, "pypamguard.core.readers.NumericalBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringNBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.StringBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.CustomBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.DateBinaryReader.process": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1.4142135623730951}, "pypamguard.core.readers.BitmapBinaryReader.process": {"tf": 1}, "pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}, "pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1.7320508075688772}}, "df": 14, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 2}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pypamguard.core.readers.BinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.CustomBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.DateBinaryReader.__init__": {"tf": 1}, "pypamguard.core.readers.BitmapBinaryReader.__init__": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 3.4641016151377544}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}}, "df": 1}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pypamguard.core.filters.RangeFilter.__init__": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pypamguard.core.registry.ModuleRegistry.register_module": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 2}}, "df": 1}}}}}, "x": {"docs": {"pypamguard.core.readers_new.BinaryReader.bin_read": {"tf": 2}}, "df": 1}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pypamguard.load_pamguard_binary_file.load_pamguard_binary_file": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();